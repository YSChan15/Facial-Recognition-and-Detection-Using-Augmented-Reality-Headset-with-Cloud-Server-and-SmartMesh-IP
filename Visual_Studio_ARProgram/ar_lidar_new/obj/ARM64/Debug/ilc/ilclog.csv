"Message",Low,"Starting .NET Native compilation"
"Message",Low,""
"Message",Low,""
"Message",Low,"Task ""Gatekeeper"""
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\ilc.exe --gatekeeper @""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\gkargs.rsp""'"
"Message",Low,"Microsoft (R) .NET Native Gatekeeper Version 2.2.31116.00 "
"Message",Low,"Copyright (C) Microsoft Corporation.  All rights reserved. "
"Message",Low," "
"Message",Low,"Checking assembly 'C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\in\ar_lidar_new.exe'. "
"Message",Low,"Checking assembly 'C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\in\Microsoft.MixedReality.WebRTC.dll'. "
"Message",Low,"Checking assembly 'C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\in\OpenCvSharp.dll'. "
"Message",Low,"Checking assembly 'C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\in\SharpDX.dll'. "
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\ilc.exe --gatekeeper @""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\gkargs.rsp""' completed."
"Message",Normal,"Process execution statistics (all times in milliseconds)"
"Message",Normal,"-----------------------------------------------------------------------------"
"Message",Normal,"launch  |  start   |   stop   |   end    | duration | lifetime | [slot] name"
"Message",Normal,"-----------------------------------------------------------------------------"
"Message",Normal,"       0 |        0 |      297 |      375 |      297 |      375 | [0] Gatekeeper"
"Message",Normal,"Number of commands:      1"
"Message",Normal,"Total system time:       375 ms"
"Message",Normal,"System time per command: 375 ms"
"Message",Normal,"Total duration:          297 ms"
"Message",Normal,"Total lifetime:          375 ms"
"Message",Normal,"Requested DOP:           16"
"Message",Normal,"Duration DOP:            0.8"
"Message",Normal,"Lifetime DOP:            1.0"
"Message",Low,"Done executing task ""Gatekeeper""."
"Message",Low,"Done building target ""RunGatekeeper"" in file ""Preparation""."
"Message",Low,""
"Message",Low,"Done building target ""CreateToolchainGeneratedAssembly"" in file ""Preparation""."
"Message",Low,""
"Message",Low,"Task ""PreMergeAssemblyClosure"""
"Message",Low,"Done executing task ""PreMergeAssemblyClosure""."
"Message",Low,"Done building target ""ConstructPreMergeAssemblyClosure"" in file ""Preparation""."
"Message",Low,""
"Message",Low,"Task ""McgReferenceResolveFilePath"""
"Message",Low,"Done executing task ""McgReferenceResolveFilePath""."
"Message",Low,"Done building target ""PreResolveTransforms"" in file ""Preparation""."
"Message",Low,""
"Message",Low,"Task ""ResolveToolchainRequiredAssemblyRoots"""
"Message",Low,"Done executing task ""ResolveToolchainRequiredAssemblyRoots""."
"Message",Low,"Task ""ILTransformAssemblyClosure"""
"Message",Low,"Done executing task ""ILTransformAssemblyClosure""."
"Message",Low,"Task ""ResolveToolchainRequiredAssemblyRoots"""
"Message",Low,"Done executing task ""ResolveToolchainRequiredAssemblyRoots""."
"Message",Low,"Task ""ReducedCopyAssemblyClosure"""
"Message",Low,"Done executing task ""ReducedCopyAssemblyClosure""."
"Message",Low,"Done building target ""ConstructILTransformAssemblyClosure"" in file ""Preparation""."
"Message",Low,"Done building project ""Preparation""."
"Message",Low,""
"Message",Low,""
"Message",High,"Processing application code"
"Message",Low,"Task ""RunILTransforms"""
"Message",Normal,"Running 'DumpNativeResources' transform, heap at 104 MB."
"Message",Normal,"Running 'Analysis' transform, heap at 120 MB."
"Message",Low,"Loading 79 modules..."
"Message",Normal,"Imported reflection directives from 10 files:"
"Message",Normal,"C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\in\Properties\Default.rd.xml"
"Message",Normal,"Embedded manifest in System.Private.Interop: Resources.System.Private.Interop.rd.xml"
"Message",Normal,"Embedded manifest in System.Private.WinRTInterop.CoreLib: Resources.System.Private.WinRTInterop.CoreLib.rd.xml"
"Message",Normal,"Embedded manifest in System.Runtime.WindowsRuntime.UI.Xaml: Resources.System.Runtime.WindowsRuntime.UI.Xaml.rd.xml"
"Message",Normal,"Embedded manifest in System.Private.CoreLib: Resources.System.Private.CoreLib.rd.xml"
"Message",Normal,"Embedded manifest in System.Private.Uri: Resources.System.Private.Uri.rd.xml"
"Message",Normal,"Embedded manifest in System.Private.Reflection.Core: System.Private.Reflection.Core.rd.xml"
"Message",Normal,"Embedded manifest in System.Linq.Expressions: System.Linq.Expressions.Resources.System.Linq.Expressions.rd.xml"
"Message",Normal,"Embedded manifest in System.Net.Primitives: Resources.System.Net.Primitives.rd.xml"
"Message",Normal,"SharpDX"
"Message",Normal,"Imported XAML Roots from 1 files:"
"Message",Normal,"C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\in\ar_lidar_new.xr.xml"
"Message",Normal,"Running 'Mcg' transform, heap at 246 MB."
"Message",High,"Computing application closure and generating interop code"
"Message",High,"  Loading 79 modules..."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsDataChannelSetUserData' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.DataChannelInterop.DataChannel_SetUserData(System.IntPtr, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsDataChannelGetUserData' for method 'System.IntPtr Microsoft.MixedReality.WebRTC.Interop.DataChannelInterop.DataChannel_GetUserData(System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsDataChannelRegisterCallbacks' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.DataChannelInterop.DataChannel_RegisterCallbacks(System.IntPtr, Microsoft.MixedReality.WebRTC.Interop.DataChannelInterop.Callbacks)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsDataChannelSendMessage' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.DataChannelInterop.DataChannel_SendMessage(System.IntPtr, System.Byte[], System.UInt64)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsDataChannelSendMessage' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.DataChannelInterop.DataChannel_SendMessage(System.IntPtr, System.IntPtr, System.UInt64)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsDeviceAudioTrackSourceCreate' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.DeviceAudioTrackSourceInterop.DeviceAudioTrackSource_Create(Microsoft.MixedReality.WebRTC.Interop.DeviceAudioTrackSourceInterop.LocalAudioDeviceMarshalInitConfig, Microsoft.MixedReality.WebRTC.Interop.DeviceAudioTrackSourceHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsEnumVideoCaptureDevicesAsync' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.DeviceVideoTrackSourceInterop.EnumVideoCaptureDevicesAsync(Microsoft.MixedReality.WebRTC.Interop.DeviceVideoTrackSourceInterop.VideoCaptureDeviceEnumCallback, System.IntPtr, Microsoft.MixedReality.WebRTC.Interop.DeviceVideoTrackSourceInterop.VideoCaptureDeviceEnumCompletedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsEnumVideoProfilesAsync' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.DeviceVideoTrackSourceInterop.EnumVideoProfilesAsync(System.String, Microsoft.MixedReality.WebRTC.VideoProfileKind, Microsoft.MixedReality.WebRTC.Interop.DeviceVideoTrackSourceInterop.VideoProfileEnumCallback, System.IntPtr, Microsoft.MixedReality.WebRTC.Interop.DeviceVideoTrackSourceInterop.VideoProfileEnumCompletedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsEnumVideoCaptureFormatsAsync' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.DeviceVideoTrackSourceInterop.EnumVideoCaptureFormatsAsync(System.String, System.String, Microsoft.MixedReality.WebRTC.VideoProfileKind, Microsoft.MixedReality.WebRTC.Interop.DeviceVideoTrackSourceInterop.VideoCaptureFormatEnumCallback, System.IntPtr, Microsoft.MixedReality.WebRTC.Interop.DeviceVideoTrackSourceInterop.VideoCaptureFormatEnumCompletedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsDeviceVideoTrackSourceCreate' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.DeviceVideoTrackSourceInterop.DeviceVideoTrackSource_Create(Microsoft.MixedReality.WebRTC.Interop.DeviceVideoTrackSourceInterop.LocalVideoDeviceMarshalInitConfig, Microsoft.MixedReality.WebRTC.Interop.DeviceVideoTrackSourceHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsExternalVideoTrackSourceCreateFromI420ACallback' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.ExternalVideoTrackSourceInterop.ExternalVideoTrackSource_CreateFromI420ACallback(Microsoft.MixedReality.WebRTC.Interop.ExternalVideoTrackSourceInterop.RequestExternalI420AVideoFrameCallback, System.IntPtr, Microsoft.MixedReality.WebRTC.Interop.ExternalVideoTrackSourceHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsExternalVideoTrackSourceCreateFromArgb32Callback' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.ExternalVideoTrackSourceInterop.ExternalVideoTrackSource_CreateFromArgb32Callback(Microsoft.MixedReality.WebRTC.Interop.ExternalVideoTrackSourceInterop.RequestExternalArgb32VideoFrameCallback, System.IntPtr, Microsoft.MixedReality.WebRTC.Interop.ExternalVideoTrackSourceHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsExternalVideoTrackSourceFinishCreation' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.ExternalVideoTrackSourceInterop.ExternalVideoTrackSource_FinishCreation(Microsoft.MixedReality.WebRTC.Interop.ExternalVideoTrackSourceHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsExternalVideoTrackSourceCompleteI420AFrameRequest' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.ExternalVideoTrackSourceInterop.ExternalVideoTrackSource_CompleteFrameRequest(Microsoft.MixedReality.WebRTC.Interop.ExternalVideoTrackSourceHandle, System.UInt32, System.Int64, Microsoft.MixedReality.WebRTC.I420AVideoFrame)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsExternalVideoTrackSourceCompleteArgb32FrameRequest' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.ExternalVideoTrackSourceInterop.ExternalVideoTrackSource_CompleteFrameRequest(Microsoft.MixedReality.WebRTC.Interop.ExternalVideoTrackSourceHandle, System.UInt32, System.Int64, Microsoft.MixedReality.WebRTC.Argb32VideoFrame)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsExternalVideoTrackSourceShutdown' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.ExternalVideoTrackSourceInterop.ExternalVideoTrackSource_Shutdown(Microsoft.MixedReality.WebRTC.Interop.ExternalVideoTrackSourceHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsReportLiveObjects' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.Utils.LibraryReportLiveObjects()'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsGetShutdownOptions' for method 'Microsoft.MixedReality.WebRTC.Library.ShutdownOptionsFlags Microsoft.MixedReality.WebRTC.Interop.Utils.LibraryGetShutdownOptions()'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsSetShutdownOptions' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.Utils.LibrarySetShutdownOptions(Microsoft.MixedReality.WebRTC.Library.ShutdownOptionsFlags)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsForceShutdown' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.Utils.LibraryForceShutdown()'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsSdpForceCodecs' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.Utils.SdpForceCodecs(System.String, Microsoft.MixedReality.WebRTC.Interop.Utils.SdpFilter, Microsoft.MixedReality.WebRTC.Interop.Utils.SdpFilter, System.Text.StringBuilder, System.UInt64)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsMemCpy' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.Utils.MemCpy(System.Void*, System.Void*, System.UInt64)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsMemCpyStride' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.Utils.MemCpyStride(System.Void*, System.Int32, System.Void*, System.Int32, System.Int32, System.Int32)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsSetFrameHeightRoundMode' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.Utils.SetFrameHeightRoundMode(Microsoft.MixedReality.WebRTC.PeerConnection.FrameHeightRoundMode)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsLocalAudioTrackCreateFromSource' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.LocalAudioTrackInterop.LocalAudioTrack_CreateFromSource(Microsoft.MixedReality.WebRTC.Interop.LocalAudioTrackInterop.TrackInitConfig, Microsoft.MixedReality.WebRTC.Interop.AudioTrackSourceHandle, Microsoft.MixedReality.WebRTC.Interop.LocalAudioTrackHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsLocalAudioTrackRegisterFrameCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.LocalAudioTrackInterop.LocalAudioTrack_RegisterFrameCallback(Microsoft.MixedReality.WebRTC.Interop.LocalAudioTrackHandle, Microsoft.MixedReality.WebRTC.Interop.AudioTrackInterop.AudioFrameUnmanagedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsLocalAudioTrackIsEnabled' for method 'System.Int32 Microsoft.MixedReality.WebRTC.Interop.LocalAudioTrackInterop.LocalAudioTrack_IsEnabled(Microsoft.MixedReality.WebRTC.Interop.LocalAudioTrackHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsLocalAudioTrackSetEnabled' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.LocalAudioTrackInterop.LocalAudioTrack_SetEnabled(Microsoft.MixedReality.WebRTC.Interop.LocalAudioTrackHandle, System.Int32)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsLocalVideoTrackCreateFromSource' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.LocalVideoTrackInterop.LocalVideoTrack_CreateFromSource(Microsoft.MixedReality.WebRTC.Interop.LocalVideoTrackInterop.TrackInitConfig, Microsoft.MixedReality.WebRTC.Interop.VideoTrackSourceHandle, Microsoft.MixedReality.WebRTC.Interop.LocalVideoTrackHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsLocalVideoTrackRegisterI420AFrameCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.LocalVideoTrackInterop.LocalVideoTrack_RegisterI420AFrameCallback(Microsoft.MixedReality.WebRTC.Interop.LocalVideoTrackHandle, Microsoft.MixedReality.WebRTC.Interop.VideoTrackSourceInterop.I420AVideoFrameUnmanagedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsLocalVideoTrackRegisterArgb32FrameCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.LocalVideoTrackInterop.LocalVideoTrack_RegisterArgb32FrameCallback(Microsoft.MixedReality.WebRTC.Interop.LocalVideoTrackHandle, Microsoft.MixedReality.WebRTC.Interop.VideoTrackSourceInterop.Argb32VideoFrameUnmanagedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsLocalVideoTrackIsEnabled' for method 'System.Int32 Microsoft.MixedReality.WebRTC.Interop.LocalVideoTrackInterop.LocalVideoTrack_IsEnabled(Microsoft.MixedReality.WebRTC.Interop.LocalVideoTrackHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsLocalVideoTrackSetEnabled' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.LocalVideoTrackInterop.LocalVideoTrack_SetEnabled(Microsoft.MixedReality.WebRTC.Interop.LocalVideoTrackHandle, System.Int32)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsObjectSetName' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.ObjectInterop.Object_SetName(Microsoft.MixedReality.WebRTC.Interop.ObjectHandle, System.String)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsObjectGetName' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.ObjectInterop.Object_GetName(Microsoft.MixedReality.WebRTC.Interop.ObjectHandle, System.Text.StringBuilder, System.UInt64)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsObjectSetUserData' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.ObjectInterop.Object_SetUserData(Microsoft.MixedReality.WebRTC.Interop.ObjectHandle, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsObjectGetUserData' for method 'System.IntPtr Microsoft.MixedReality.WebRTC.Interop.ObjectInterop.Object_GetUserData(Microsoft.MixedReality.WebRTC.Interop.ObjectHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionCreate' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_Create(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionConfiguration, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionRegisterConnectedCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_RegisterConnectedCallback(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionConnectedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionRegisterLocalSdpReadytoSendCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_RegisterLocalSdpReadytoSendCallback(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionLocalSdpReadytoSendCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionRegisterIceCandidateReadytoSendCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_RegisterIceCandidateReadytoSendCallback(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionIceCandidateReadytoSendCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionRegisterIceStateChangedCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_RegisterIceStateChangedCallback(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionIceStateChangedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionRegisterIceGatheringStateChangedCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_RegisterIceGatheringStateChangedCallback(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionIceGatheringStateChangedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionRegisterRenegotiationNeededCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_RegisterRenegotiationNeededCallback(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionRenegotiationNeededCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionRegisterTransceiverAddedCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_RegisterTransceiverAddedCallback(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionTransceiverAddedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionRegisterAudioTrackAddedCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_RegisterAudioTrackAddedCallback(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionAudioTrackAddedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionRegisterAudioTrackRemovedCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_RegisterAudioTrackRemovedCallback(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionAudioTrackRemovedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionRegisterVideoTrackAddedCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_RegisterVideoTrackAddedCallback(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionVideoTrackAddedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionRegisterVideoTrackRemovedCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_RegisterVideoTrackRemovedCallback(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionVideoTrackRemovedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionRegisterDataChannelAddedCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_RegisterDataChannelAddedCallback(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionDataChannelAddedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionRegisterDataChannelRemovedCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_RegisterDataChannelRemovedCallback(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionDataChannelRemovedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionAddTransceiver' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_AddTransceiver(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.InitConfig, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionAddDataChannel' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_AddDataChannel(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.DataChannelInterop.CreateConfig, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionRemoveDataChannel' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_RemoveDataChannel(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionAddIceCandidate' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_AddIceCandidate(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.IceCandidate)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionCreateOffer' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_CreateOffer(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionCreateAnswer' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_CreateAnswer(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionSetBitrate' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_SetBitrate(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, System.Int32, System.Int32, System.Int32)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionSetRemoteDescriptionAsync' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_SetRemoteDescriptionAsync(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.SdpMessageType, System.String, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionRemoteDescriptionAppliedDelegate, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionClose' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_Close(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsPeerConnectionGetSimpleStats' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnection_GetSimpleStats(Microsoft.MixedReality.WebRTC.Interop.PeerConnectionHandle, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionSimpleStatsCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsStatsReportGetObjects' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.StatsReport_GetObjects(Microsoft.MixedReality.WebRTC.PeerConnection.StatsReport.Handle, System.String, Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.PeerConnectionSimpleStatsObjectCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsStatsReportRemoveRef' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.PeerConnectionInterop.StatsReport_RemoveRef(System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsRefCountedObjectAddRef' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.RefCountedObjectInterop.RefCountedObject_AddRef(Microsoft.MixedReality.WebRTC.Interop.RefCountedObjectHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsRefCountedObjectRemoveRef' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.RefCountedObjectInterop.RefCountedObject_RemoveRef(System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsRemoteAudioTrackRegisterFrameCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.RemoteAudioTrackInterop.RemoteAudioTrack_RegisterFrameCallback(Microsoft.MixedReality.WebRTC.Interop.RemoteAudioTrackInterop.RemoteAudioTrackHandle, Microsoft.MixedReality.WebRTC.Interop.AudioTrackInterop.AudioFrameUnmanagedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsRemoteAudioTrackIsEnabled' for method 'System.Int32 Microsoft.MixedReality.WebRTC.Interop.RemoteAudioTrackInterop.RemoteAudioTrack_IsEnabled(Microsoft.MixedReality.WebRTC.Interop.RemoteAudioTrackInterop.RemoteAudioTrackHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsRemoteAudioTrackOutputToDevice' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.RemoteAudioTrackInterop.RemoteAudioTrack_OutputToDevice(Microsoft.MixedReality.WebRTC.Interop.RemoteAudioTrackInterop.RemoteAudioTrackHandle, Microsoft.MixedReality.WebRTC.Interop.mrsBool)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsRemoteAudioTrackIsOutputToDevice' for method 'Microsoft.MixedReality.WebRTC.Interop.mrsBool Microsoft.MixedReality.WebRTC.Interop.RemoteAudioTrackInterop.RemoteAudioTrack_IsOutputToDevice(Microsoft.MixedReality.WebRTC.Interop.RemoteAudioTrackInterop.RemoteAudioTrackHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsRemoteAudioTrackCreateReadBuffer' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.RemoteAudioTrackInterop.RemoteAudioTrack_CreateReadBuffer(Microsoft.MixedReality.WebRTC.Interop.RemoteAudioTrackInterop.RemoteAudioTrackHandle, Microsoft.MixedReality.WebRTC.Interop.RemoteAudioTrackInterop.ReadBufferHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsAudioTrackReadBufferRead' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.RemoteAudioTrackInterop.AudioTrackReadBuffer_Read(Microsoft.MixedReality.WebRTC.Interop.RemoteAudioTrackInterop.ReadBufferHandle, System.Int32, System.Int32, Microsoft.MixedReality.WebRTC.AudioTrackReadBuffer.PadBehavior, System.Single[], System.Int32, System.Int32, Microsoft.MixedReality.WebRTC.Interop.mrsBool)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsAudioTrackReadBufferDestroy' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.RemoteAudioTrackInterop.AudioTrackReadBuffer_Destroy(System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsRemoteVideoTrackRegisterI420AFrameCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.RemoteVideoTrackInterop.RemoteVideoTrack_RegisterI420AFrameCallback(Microsoft.MixedReality.WebRTC.Interop.RemoteVideoTrackInterop.RemoteVideoTrackHandle, Microsoft.MixedReality.WebRTC.Interop.VideoTrackSourceInterop.I420AVideoFrameUnmanagedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsRemoteVideoTrackRegisterArgb32FrameCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.RemoteVideoTrackInterop.RemoteVideoTrack_RegisterArgb32FrameCallback(Microsoft.MixedReality.WebRTC.Interop.RemoteVideoTrackInterop.RemoteVideoTrackHandle, Microsoft.MixedReality.WebRTC.Interop.VideoTrackSourceInterop.Argb32VideoFrameUnmanagedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsRemoteVideoTrackIsEnabled' for method 'System.Int32 Microsoft.MixedReality.WebRTC.Interop.RemoteVideoTrackInterop.RemoteVideoTrack_IsEnabled(Microsoft.MixedReality.WebRTC.Interop.RemoteVideoTrackInterop.RemoteVideoTrackHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsTransceiverRegisterAssociatedCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.Transceiver_RegisterAssociatedCallback(Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.TransceiverHandle, Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.AssociatedDelegate, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsTransceiverRegisterStateUpdatedCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.Transceiver_RegisterStateUpdatedCallback(Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.TransceiverHandle, Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.StateUpdatedDelegate, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsTransceiverSetDirection' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.Transceiver_SetDirection(Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.TransceiverHandle, Microsoft.MixedReality.WebRTC.Transceiver.Direction)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsTransceiverSetLocalAudioTrack' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.Transceiver_SetLocalAudioTrack(Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.TransceiverHandle, Microsoft.MixedReality.WebRTC.Interop.LocalAudioTrackHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsTransceiverSetLocalVideoTrack' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.Transceiver_SetLocalVideoTrack(Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.TransceiverHandle, Microsoft.MixedReality.WebRTC.Interop.LocalVideoTrackHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsTransceiverGetLocalAudioTrack' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.Transceiver_GetLocalAudioTrack(Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.TransceiverHandle, Microsoft.MixedReality.WebRTC.Interop.LocalAudioTrackHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsTransceiverGetLocalVideoTrack' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.Transceiver_GetLocalVideoTrack(Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.TransceiverHandle, Microsoft.MixedReality.WebRTC.Interop.LocalVideoTrackHandle)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsTransceiverGetRemoteAudioTrack' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.Transceiver_GetRemoteAudioTrack(Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.TransceiverHandle, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsTransceiverGetRemoteVideoTrack' for method 'System.UInt32 Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.Transceiver_GetRemoteVideoTrack(Microsoft.MixedReality.WebRTC.Interop.TransceiverInterop.TransceiverHandle, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsVideoTrackSourceRegisterFrameCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.VideoTrackSourceInterop.VideoTrackSource_RegisterFrameCallback(Microsoft.MixedReality.WebRTC.Interop.VideoTrackSourceHandle, Microsoft.MixedReality.WebRTC.Interop.VideoTrackSourceInterop.I420AVideoFrameUnmanagedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Warning",,0,0,"      MCG : warning MCG0007: Unresolved P/Invoke method 'mrwebrtc!mrsVideoTrackSourceRegisterArgb32FrameCallback' for method 'System.Void Microsoft.MixedReality.WebRTC.Interop.VideoTrackSourceInterop.VideoTrackSource_RegisterArgb32FrameCallback(Microsoft.MixedReality.WebRTC.Interop.VideoTrackSourceHandle, Microsoft.MixedReality.WebRTC.Interop.VideoTrackSourceInterop.Argb32VideoFrameUnmanagedCallback, System.IntPtr)'. Calling this method would throw exception at runtime. Please make sure the P/Invoke either points to a Windows API allowed in UWP applications, or a native DLL that is part of the package. If for some reason your P/Invoke does not satisfy those requirements, please use [DllImport(ExactSpelling=true) to indicate that you understand the implications of using non-UWP APIs."
"Message",Normal,"          P/Invoke 'calib3d_Rodrigues' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_Rodrigues'."
"Message",Normal,"          P/Invoke 'calib3d_findHomography_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_findHomography_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_findHomography_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_findHomography_vector'."
"Message",Normal,"          P/Invoke 'calib3d_findHomography_UsacParams' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_findHomography_UsacParams'."
"Message",Normal,"          P/Invoke 'calib3d_RQDecomp3x3_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_RQDecomp3x3_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_RQDecomp3x3_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_RQDecomp3x3_Mat'."
"Message",Normal,"          P/Invoke 'calib3d_decomposeProjectionMatrix_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_decomposeProjectionMatrix_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_decomposeProjectionMatrix_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_decomposeProjectionMatrix_Mat'."
"Message",Normal,"          P/Invoke 'calib3d_matMulDeriv' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_matMulDeriv'."
"Message",Normal,"          P/Invoke 'calib3d_composeRT_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_composeRT_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_composeRT_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_composeRT_Mat'."
"Message",Normal,"          P/Invoke 'calib3d_projectPoints_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_projectPoints_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_projectPoints_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_projectPoints_Mat'."
"Message",Normal,"          P/Invoke 'calib3d_solvePnP_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_solvePnP_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_solvePnP_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_solvePnP_vector'."
"Message",Normal,"          P/Invoke 'calib3d_solvePnPRansac_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_solvePnPRansac_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_solvePnPRansac_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_solvePnPRansac_vector'."
"Message",Normal,"          P/Invoke 'calib3d_initCameraMatrix2D_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_initCameraMatrix2D_Mat'."
"Message",Normal,"          P/Invoke 'calib3d_initCameraMatrix2D_array' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_initCameraMatrix2D_array'."
"Message",Normal,"          P/Invoke 'calib3d_findChessboardCorners_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_findChessboardCorners_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_findChessboardCorners_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_findChessboardCorners_vector'."
"Message",Normal,"          P/Invoke 'calib3d_checkChessboard' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_checkChessboard'."
"Message",Normal,"          P/Invoke 'calib3d_findChessboardCornersSB_OutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_findChessboardCornersSB_OutputArray'."
"Message",Normal,"          P/Invoke 'calib3d_findChessboardCornersSB_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_findChessboardCornersSB_vector'."
"Message",Normal,"          P/Invoke 'calib3d_find4QuadCornerSubpix_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_find4QuadCornerSubpix_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_find4QuadCornerSubpix_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_find4QuadCornerSubpix_vector'."
"Message",Normal,"          P/Invoke 'calib3d_drawChessboardCorners_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_drawChessboardCorners_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_drawChessboardCorners_array' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_drawChessboardCorners_array'."
"Message",Normal,"          P/Invoke 'calib3d_drawFrameAxes' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_drawFrameAxes'."
"Message",Normal,"          P/Invoke 'calib3d_findCirclesGrid_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_findCirclesGrid_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_findCirclesGrid_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_findCirclesGrid_vector'."
"Message",Normal,"          P/Invoke 'calib3d_calibrateCamera_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_calibrateCamera_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_calibrateCamera_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_calibrateCamera_vector'."
"Message",Normal,"          P/Invoke 'calib3d_calibrationMatrixValues_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_calibrationMatrixValues_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_calibrationMatrixValues_array' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_calibrationMatrixValues_array'."
"Message",Normal,"          P/Invoke 'calib3d_stereoCalibrate_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_stereoCalibrate_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_stereoCalibrate_array' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_stereoCalibrate_array'."
"Message",Normal,"          P/Invoke 'calib3d_stereoRectify_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_stereoRectify_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_stereoRectify_array' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_stereoRectify_array'."
"Message",Normal,"          P/Invoke 'calib3d_stereoRectifyUncalibrated_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_stereoRectifyUncalibrated_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_stereoRectifyUncalibrated_array' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_stereoRectifyUncalibrated_array'."
"Message",Normal,"          P/Invoke 'calib3d_rectify3Collinear_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_rectify3Collinear_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_getOptimalNewCameraMatrix_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_getOptimalNewCameraMatrix_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_getOptimalNewCameraMatrix_array' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_getOptimalNewCameraMatrix_array'."
"Message",Normal,"          P/Invoke 'calib3d_calibrateHandEye' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_calibrateHandEye'."
"Message",Normal,"          P/Invoke 'calib3d_calibrateRobotWorldHandEye_OutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_calibrateRobotWorldHandEye_OutputArray'."
"Message",Normal,"          P/Invoke 'calib3d_calibrateRobotWorldHandEye_Pointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_calibrateRobotWorldHandEye_Pointer'."
"Message",Normal,"          P/Invoke 'calib3d_convertPointsToHomogeneous_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_convertPointsToHomogeneous_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_convertPointsToHomogeneous_array1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_convertPointsToHomogeneous_array1'."
"Message",Normal,"          P/Invoke 'calib3d_convertPointsToHomogeneous_array2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_convertPointsToHomogeneous_array2'."
"Message",Normal,"          P/Invoke 'calib3d_convertPointsFromHomogeneous_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_convertPointsFromHomogeneous_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_convertPointsFromHomogeneous_array1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_convertPointsFromHomogeneous_array1'."
"Message",Normal,"          P/Invoke 'calib3d_convertPointsFromHomogeneous_array2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_convertPointsFromHomogeneous_array2'."
"Message",Normal,"          P/Invoke 'calib3d_convertPointsHomogeneous' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_convertPointsHomogeneous'."
"Message",Normal,"          P/Invoke 'calib3d_findFundamentalMat_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_findFundamentalMat_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_findFundamentalMat_arrayF64' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_findFundamentalMat_arrayF64'."
"Message",Normal,"          P/Invoke 'calib3d_findFundamentalMat_arrayF32' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_findFundamentalMat_arrayF32'."
"Message",Normal,"          P/Invoke 'calib3d_computeCorrespondEpilines_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_computeCorrespondEpilines_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_computeCorrespondEpilines_array2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_computeCorrespondEpilines_array2d'."
"Message",Normal,"          P/Invoke 'calib3d_computeCorrespondEpilines_array3d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_computeCorrespondEpilines_array3d'."
"Message",Normal,"          P/Invoke 'calib3d_triangulatePoints_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_triangulatePoints_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_triangulatePoints_array' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_triangulatePoints_array'."
"Message",Normal,"          P/Invoke 'calib3d_correctMatches_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_correctMatches_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_correctMatches_array' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_correctMatches_array'."
"Message",Normal,"          P/Invoke 'calib3d_filterSpeckles' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_filterSpeckles'."
"Message",Normal,"          P/Invoke 'calib3d_getValidDisparityROI' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_getValidDisparityROI'."
"Message",Normal,"          P/Invoke 'calib3d_validateDisparity' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_validateDisparity'."
"Message",Normal,"          P/Invoke 'calib3d_reprojectImageTo3D' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_reprojectImageTo3D'."
"Message",Normal,"          P/Invoke 'calib3d_estimateAffine3D' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_estimateAffine3D'."
"Message",Normal,"          P/Invoke 'calib3d_sampsonDistance_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_sampsonDistance_InputArray'."
"Message",Normal,"          P/Invoke 'calib3d_sampsonDistance_Point3d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_sampsonDistance_Point3d'."
"Message",Normal,"          P/Invoke 'calib3d_estimateAffine2D' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_estimateAffine2D'."
"Message",Normal,"          P/Invoke 'calib3d_estimateAffinePartial2D' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_estimateAffinePartial2D'."
"Message",Normal,"          P/Invoke 'calib3d_decomposeHomographyMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_decomposeHomographyMat'."
"Message",Normal,"          P/Invoke 'calib3d_filterHomographyDecompByVisibleRefpoints' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_filterHomographyDecompByVisibleRefpoints'."
"Message",Normal,"          P/Invoke 'calib3d_undistort' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_undistort'."
"Message",Normal,"          P/Invoke 'calib3d_initUndistortRectifyMap' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_initUndistortRectifyMap'."
"Message",Normal,"          P/Invoke 'calib3d_initWideAngleProjMap' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_initWideAngleProjMap'."
"Message",Normal,"          P/Invoke 'calib3d_getDefaultNewCameraMatrix' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_getDefaultNewCameraMatrix'."
"Message",Normal,"          P/Invoke 'calib3d_undistortPoints' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_undistortPoints'."
"Message",Normal,"          P/Invoke 'calib3d_undistortPointsIter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_undistortPointsIter'."
"Message",Normal,"          P/Invoke 'calib3d_recoverPose_InputArray1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_recoverPose_InputArray1'."
"Message",Normal,"          P/Invoke 'calib3d_recoverPose_InputArray2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_recoverPose_InputArray2'."
"Message",Normal,"          P/Invoke 'calib3d_recoverPose_InputArray3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_recoverPose_InputArray3'."
"Message",Normal,"          P/Invoke 'calib3d_findEssentialMat_InputArray1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_findEssentialMat_InputArray1'."
"Message",Normal,"          P/Invoke 'calib3d_findEssentialMat_InputArray2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_findEssentialMat_InputArray2'."
"Message",Normal,"          P/Invoke 'calib3d_fisheye_projectPoints2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_fisheye_projectPoints2'."
"Message",Normal,"          P/Invoke 'calib3d_fisheye_distortPoints' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_fisheye_distortPoints'."
"Message",Normal,"          P/Invoke 'calib3d_fisheye_undistortPoints' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_fisheye_undistortPoints'."
"Message",Normal,"          P/Invoke 'calib3d_fisheye_initUndistortRectifyMap' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_fisheye_initUndistortRectifyMap'."
"Message",Normal,"          P/Invoke 'calib3d_fisheye_undistortImage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_fisheye_undistortImage'."
"Message",Normal,"          P/Invoke 'calib3d_fisheye_estimateNewCameraMatrixForUndistortRectify' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_fisheye_estimateNewCameraMatrixForUndistortRectify'."
"Message",Normal,"          P/Invoke 'calib3d_fisheye_calibrate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_fisheye_calibrate'."
"Message",Normal,"          P/Invoke 'calib3d_fisheye_stereoRectify' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_fisheye_stereoRectify'."
"Message",Normal,"          P/Invoke 'calib3d_fisheye_stereoCalibrate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_fisheye_stereoCalibrate'."
"Message",Normal,"          P/Invoke 'calib3d_StereoMatcher_compute' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoMatcher_compute'."
"Message",Normal,"          P/Invoke 'calib3d_StereoMatcher_getMinDisparity' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoMatcher_getMinDisparity'."
"Message",Normal,"          P/Invoke 'calib3d_StereoMatcher_setMinDisparity' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoMatcher_setMinDisparity'."
"Message",Normal,"          P/Invoke 'calib3d_StereoMatcher_getNumDisparities' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoMatcher_getNumDisparities'."
"Message",Normal,"          P/Invoke 'calib3d_StereoMatcher_setNumDisparities' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoMatcher_setNumDisparities'."
"Message",Normal,"          P/Invoke 'calib3d_StereoMatcher_getBlockSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoMatcher_getBlockSize'."
"Message",Normal,"          P/Invoke 'calib3d_StereoMatcher_setBlockSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoMatcher_setBlockSize'."
"Message",Normal,"          P/Invoke 'calib3d_StereoMatcher_getSpeckleWindowSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoMatcher_getSpeckleWindowSize'."
"Message",Normal,"          P/Invoke 'calib3d_StereoMatcher_setSpeckleWindowSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoMatcher_setSpeckleWindowSize'."
"Message",Normal,"          P/Invoke 'calib3d_StereoMatcher_getSpeckleRange' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoMatcher_getSpeckleRange'."
"Message",Normal,"          P/Invoke 'calib3d_StereoMatcher_setSpeckleRange' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoMatcher_setSpeckleRange'."
"Message",Normal,"          P/Invoke 'calib3d_StereoMatcher_getDisp12MaxDiff' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoMatcher_getDisp12MaxDiff'."
"Message",Normal,"          P/Invoke 'calib3d_StereoMatcher_setDisp12MaxDiff' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoMatcher_setDisp12MaxDiff'."
"Message",Normal,"          P/Invoke 'calib3d_Ptr_StereoBM_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_Ptr_StereoBM_delete'."
"Message",Normal,"          P/Invoke 'calib3d_Ptr_StereoBM_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_Ptr_StereoBM_get'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_create'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_getPreFilterType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_getPreFilterType'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_setPreFilterType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_setPreFilterType'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_getPreFilterSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_getPreFilterSize'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_setPreFilterSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_setPreFilterSize'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_getPreFilterCap' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_getPreFilterCap'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_setPreFilterCap' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_setPreFilterCap'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_getTextureThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_getTextureThreshold'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_setTextureThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_setTextureThreshold'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_getUniquenessRatio' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_getUniquenessRatio'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_setUniquenessRatio' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_setUniquenessRatio'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_getSmallerBlockSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_getSmallerBlockSize'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_setSmallerBlockSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_setSmallerBlockSize'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_getROI1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_getROI1'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_setROI1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_setROI1'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_getROI2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_getROI2'."
"Message",Normal,"          P/Invoke 'calib3d_StereoBM_setROI2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoBM_setROI2'."
"Message",Normal,"          P/Invoke 'calib3d_Ptr_StereoSGBM_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_Ptr_StereoSGBM_get'."
"Message",Normal,"          P/Invoke 'calib3d_Ptr_StereoSGBM_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_Ptr_StereoSGBM_delete'."
"Message",Normal,"          P/Invoke 'calib3d_StereoSGBM_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoSGBM_create'."
"Message",Normal,"          P/Invoke 'calib3d_StereoSGBM_getPreFilterCap' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoSGBM_getPreFilterCap'."
"Message",Normal,"          P/Invoke 'calib3d_StereoSGBM_setPreFilterCap' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoSGBM_setPreFilterCap'."
"Message",Normal,"          P/Invoke 'calib3d_StereoSGBM_getUniquenessRatio' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoSGBM_getUniquenessRatio'."
"Message",Normal,"          P/Invoke 'calib3d_StereoSGBM_setUniquenessRatio' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoSGBM_setUniquenessRatio'."
"Message",Normal,"          P/Invoke 'calib3d_StereoSGBM_getP1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoSGBM_getP1'."
"Message",Normal,"          P/Invoke 'calib3d_StereoSGBM_setP1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoSGBM_setP1'."
"Message",Normal,"          P/Invoke 'calib3d_StereoSGBM_getP2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoSGBM_getP2'."
"Message",Normal,"          P/Invoke 'calib3d_StereoSGBM_setP2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoSGBM_setP2'."
"Message",Normal,"          P/Invoke 'calib3d_StereoSGBM_getMode' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoSGBM_getMode'."
"Message",Normal,"          P/Invoke 'calib3d_StereoSGBM_setMode' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!calib3d_StereoSGBM_setMode'."
"Message",Normal,"          P/Invoke 'core_RotatedRect_byThreeVertexPoints' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_RotatedRect_byThreeVertexPoints'."
"Message",Normal,"          P/Invoke 'core_setBreakOnError' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_setBreakOnError'."
"Message",Normal,"          P/Invoke 'redirectError' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!redirectError'."
"Message",Normal,"          P/Invoke 'core_setNumThreads' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_setNumThreads'."
"Message",Normal,"          P/Invoke 'core_getNumThreads' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_getNumThreads'."
"Message",Normal,"          P/Invoke 'core_getThreadNum' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_getThreadNum'."
"Message",Normal,"          P/Invoke 'core_getBuildInformation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_getBuildInformation'."
"Message",Normal,"          P/Invoke 'core_getVersionString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_getVersionString'."
"Message",Normal,"          P/Invoke 'core_getVersionMajor' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_getVersionMajor'."
"Message",Normal,"          P/Invoke 'core_getVersionMinor' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_getVersionMinor'."
"Message",Normal,"          P/Invoke 'core_getVersionRevision' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_getVersionRevision'."
"Message",Normal,"          P/Invoke 'core_getTickCount' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_getTickCount'."
"Message",Normal,"          P/Invoke 'core_getTickFrequency' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_getTickFrequency'."
"Message",Normal,"          P/Invoke 'core_getCPUTickCount' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_getCPUTickCount'."
"Message",Normal,"          P/Invoke 'core_checkHardwareSupport' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_checkHardwareSupport'."
"Message",Normal,"          P/Invoke 'core_getHardwareFeatureName' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_getHardwareFeatureName'."
"Message",Normal,"          P/Invoke 'core_getCPUFeaturesLine' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_getCPUFeaturesLine'."
"Message",Normal,"          P/Invoke 'core_getNumberOfCPUs' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_getNumberOfCPUs'."
"Message",Normal,"          P/Invoke 'core_setUseOptimized' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_setUseOptimized'."
"Message",Normal,"          P/Invoke 'core_useOptimized' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_useOptimized'."
"Message",Normal,"          P/Invoke 'core_format' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_format'."
"Message",Normal,"          P/Invoke 'core_logger_setLogLevel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_logger_setLogLevel'."
"Message",Normal,"          P/Invoke 'core_logger_getLogLevel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_logger_getLogLevel'."
"Message",Normal,"          P/Invoke 'core_borderInterpolate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_borderInterpolate'."
"Message",Normal,"          P/Invoke 'core_copyMakeBorder' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_copyMakeBorder'."
"Message",Normal,"          P/Invoke 'core_add' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_add'."
"Message",Normal,"          P/Invoke 'core_subtract_InputArray2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_subtract_InputArray2'."
"Message",Normal,"          P/Invoke 'core_subtract_InputArrayScalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_subtract_InputArrayScalar'."
"Message",Normal,"          P/Invoke 'core_subtract_ScalarInputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_subtract_ScalarInputArray'."
"Message",Normal,"          P/Invoke 'core_multiply' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_multiply'."
"Message",Normal,"          P/Invoke 'core_divide1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_divide1'."
"Message",Normal,"          P/Invoke 'core_divide2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_divide2'."
"Message",Normal,"          P/Invoke 'core_scaleAdd' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_scaleAdd'."
"Message",Normal,"          P/Invoke 'core_addWeighted' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_addWeighted'."
"Message",Normal,"          P/Invoke 'core_convertScaleAbs' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_convertScaleAbs'."
"Message",Normal,"          P/Invoke 'core_convertFp16' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_convertFp16'."
"Message",Normal,"          P/Invoke 'core_LUT' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_LUT'."
"Message",Normal,"          P/Invoke 'core_sum' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_sum'."
"Message",Normal,"          P/Invoke 'core_countNonZero' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_countNonZero'."
"Message",Normal,"          P/Invoke 'core_findNonZero' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_findNonZero'."
"Message",Normal,"          P/Invoke 'core_mean' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_mean'."
"Message",Normal,"          P/Invoke 'core_meanStdDev_OutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_meanStdDev_OutputArray'."
"Message",Normal,"          P/Invoke 'core_meanStdDev_Scalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_meanStdDev_Scalar'."
"Message",Normal,"          P/Invoke 'core_norm1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_norm1'."
"Message",Normal,"          P/Invoke 'core_norm2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_norm2'."
"Message",Normal,"          P/Invoke 'core_PSNR' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PSNR'."
"Message",Normal,"          P/Invoke 'core_batchDistance' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_batchDistance'."
"Message",Normal,"          P/Invoke 'core_normalize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_normalize'."
"Message",Normal,"          P/Invoke 'core_reduceArgMax' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_reduceArgMax'."
"Message",Normal,"          P/Invoke 'core_reduceArgMin' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_reduceArgMin'."
"Message",Normal,"          P/Invoke 'core_minMaxLoc1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_minMaxLoc1'."
"Message",Normal,"          P/Invoke 'core_minMaxLoc2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_minMaxLoc2'."
"Message",Normal,"          P/Invoke 'core_minMaxIdx1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_minMaxIdx1'."
"Message",Normal,"          P/Invoke 'core_minMaxIdx2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_minMaxIdx2'."
"Message",Normal,"          P/Invoke 'core_reduce' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_reduce'."
"Message",Normal,"          P/Invoke 'core_merge' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_merge'."
"Message",Normal,"          P/Invoke 'core_split' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_split'."
"Message",Normal,"          P/Invoke 'core_mixChannels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_mixChannels'."
"Message",Normal,"          P/Invoke 'core_extractChannel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_extractChannel'."
"Message",Normal,"          P/Invoke 'core_insertChannel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_insertChannel'."
"Message",Normal,"          P/Invoke 'core_flip' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_flip'."
"Message",Normal,"          P/Invoke 'core_rotate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_rotate'."
"Message",Normal,"          P/Invoke 'core_repeat1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_repeat1'."
"Message",Normal,"          P/Invoke 'core_repeat2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_repeat2'."
"Message",Normal,"          P/Invoke 'core_hconcat1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_hconcat1'."
"Message",Normal,"          P/Invoke 'core_hconcat2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_hconcat2'."
"Message",Normal,"          P/Invoke 'core_vconcat1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_vconcat1'."
"Message",Normal,"          P/Invoke 'core_vconcat2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_vconcat2'."
"Message",Normal,"          P/Invoke 'core_bitwise_and' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_bitwise_and'."
"Message",Normal,"          P/Invoke 'core_bitwise_or' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_bitwise_or'."
"Message",Normal,"          P/Invoke 'core_bitwise_xor' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_bitwise_xor'."
"Message",Normal,"          P/Invoke 'core_bitwise_not' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_bitwise_not'."
"Message",Normal,"          P/Invoke 'core_absdiff' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_absdiff'."
"Message",Normal,"          P/Invoke 'core_copyTo' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_copyTo'."
"Message",Normal,"          P/Invoke 'core_inRange_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_inRange_InputArray'."
"Message",Normal,"          P/Invoke 'core_inRange_Scalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_inRange_Scalar'."
"Message",Normal,"          P/Invoke 'core_compare' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_compare'."
"Message",Normal,"          P/Invoke 'core_min1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_min1'."
"Message",Normal,"          P/Invoke 'core_min_MatMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_min_MatMat'."
"Message",Normal,"          P/Invoke 'core_min_MatDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_min_MatDouble'."
"Message",Normal,"          P/Invoke 'core_max1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_max1'."
"Message",Normal,"          P/Invoke 'core_max_MatMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_max_MatMat'."
"Message",Normal,"          P/Invoke 'core_max_MatDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_max_MatDouble'."
"Message",Normal,"          P/Invoke 'core_sqrt' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_sqrt'."
"Message",Normal,"          P/Invoke 'core_pow_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_pow_Mat'."
"Message",Normal,"          P/Invoke 'core_exp_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_exp_Mat'."
"Message",Normal,"          P/Invoke 'core_log_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_log_Mat'."
"Message",Normal,"          P/Invoke 'core_polarToCart' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_polarToCart'."
"Message",Normal,"          P/Invoke 'core_cartToPolar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_cartToPolar'."
"Message",Normal,"          P/Invoke 'core_phase' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_phase'."
"Message",Normal,"          P/Invoke 'core_magnitude_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_magnitude_Mat'."
"Message",Normal,"          P/Invoke 'core_checkRange' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_checkRange'."
"Message",Normal,"          P/Invoke 'core_patchNaNs' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_patchNaNs'."
"Message",Normal,"          P/Invoke 'core_gemm' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_gemm'."
"Message",Normal,"          P/Invoke 'core_mulTransposed' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_mulTransposed'."
"Message",Normal,"          P/Invoke 'core_transpose' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_transpose'."
"Message",Normal,"          P/Invoke 'core_transform' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_transform'."
"Message",Normal,"          P/Invoke 'core_perspectiveTransform' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_perspectiveTransform'."
"Message",Normal,"          P/Invoke 'core_perspectiveTransform_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_perspectiveTransform_Mat'."
"Message",Normal,"          P/Invoke 'core_perspectiveTransform_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_perspectiveTransform_Point2f'."
"Message",Normal,"          P/Invoke 'core_perspectiveTransform_Point2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_perspectiveTransform_Point2d'."
"Message",Normal,"          P/Invoke 'core_perspectiveTransform_Point3f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_perspectiveTransform_Point3f'."
"Message",Normal,"          P/Invoke 'core_perspectiveTransform_Point3d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_perspectiveTransform_Point3d'."
"Message",Normal,"          P/Invoke 'core_completeSymm' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_completeSymm'."
"Message",Normal,"          P/Invoke 'core_setIdentity' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_setIdentity'."
"Message",Normal,"          P/Invoke 'core_determinant' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_determinant'."
"Message",Normal,"          P/Invoke 'core_trace' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_trace'."
"Message",Normal,"          P/Invoke 'core_invert' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_invert'."
"Message",Normal,"          P/Invoke 'core_solve' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_solve'."
"Message",Normal,"          P/Invoke 'core_solveLP' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_solveLP'."
"Message",Normal,"          P/Invoke 'core_sort' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_sort'."
"Message",Normal,"          P/Invoke 'core_sortIdx' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_sortIdx'."
"Message",Normal,"          P/Invoke 'core_solveCubic' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_solveCubic'."
"Message",Normal,"          P/Invoke 'core_solvePoly' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_solvePoly'."
"Message",Normal,"          P/Invoke 'core_eigen' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_eigen'."
"Message",Normal,"          P/Invoke 'core_eigenNonSymmetric' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_eigenNonSymmetric'."
"Message",Normal,"          P/Invoke 'core_calcCovarMatrix_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_calcCovarMatrix_Mat'."
"Message",Normal,"          P/Invoke 'core_calcCovarMatrix_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_calcCovarMatrix_InputArray'."
"Message",Normal,"          P/Invoke 'core_PCACompute' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCACompute'."
"Message",Normal,"          P/Invoke 'core_PCACompute2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCACompute2'."
"Message",Normal,"          P/Invoke 'core_PCAComputeVar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCAComputeVar'."
"Message",Normal,"          P/Invoke 'core_PCAComputeVar2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCAComputeVar2'."
"Message",Normal,"          P/Invoke 'core_PCAProject' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCAProject'."
"Message",Normal,"          P/Invoke 'core_PCABackProject' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCABackProject'."
"Message",Normal,"          P/Invoke 'core_SVDecomp' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SVDecomp'."
"Message",Normal,"          P/Invoke 'core_SVBackSubst' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SVBackSubst'."
"Message",Normal,"          P/Invoke 'core_Mahalanobis' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mahalanobis'."
"Message",Normal,"          P/Invoke 'core_dft' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_dft'."
"Message",Normal,"          P/Invoke 'core_idft' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_idft'."
"Message",Normal,"          P/Invoke 'core_dct' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_dct'."
"Message",Normal,"          P/Invoke 'core_idct' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_idct'."
"Message",Normal,"          P/Invoke 'core_mulSpectrums' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_mulSpectrums'."
"Message",Normal,"          P/Invoke 'core_getOptimalDFTSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_getOptimalDFTSize'."
"Message",Normal,"          P/Invoke 'core_theRNG_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_theRNG_get'."
"Message",Normal,"          P/Invoke 'core_theRNG_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_theRNG_set'."
"Message",Normal,"          P/Invoke 'core_randu_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_randu_InputArray'."
"Message",Normal,"          P/Invoke 'core_randu_Scalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_randu_Scalar'."
"Message",Normal,"          P/Invoke 'core_randn_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_randn_InputArray'."
"Message",Normal,"          P/Invoke 'core_randn_Scalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_randn_Scalar'."
"Message",Normal,"          P/Invoke 'core_randShuffle' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_randShuffle'."
"Message",Normal,"          P/Invoke 'core_randShuffle' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_randShuffle'."
"Message",Normal,"          P/Invoke 'core_kmeans' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_kmeans'."
"Message",Normal,"          P/Invoke 'core_cubeRoot' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_cubeRoot'."
"Message",Normal,"          P/Invoke 'core_fastAtan2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_fastAtan2'."
"Message",Normal,"          P/Invoke 'core_Algorithm_write' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Algorithm_write'."
"Message",Normal,"          P/Invoke 'core_Algorithm_read' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Algorithm_read'."
"Message",Normal,"          P/Invoke 'core_Algorithm_empty' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Algorithm_empty'."
"Message",Normal,"          P/Invoke 'core_Algorithm_save' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Algorithm_save'."
"Message",Normal,"          P/Invoke 'core_Algorithm_getDefaultName' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Algorithm_getDefaultName'."
"Message",Normal,"          P/Invoke 'core_PCA_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCA_new1'."
"Message",Normal,"          P/Invoke 'core_PCA_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCA_new2'."
"Message",Normal,"          P/Invoke 'core_PCA_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCA_new3'."
"Message",Normal,"          P/Invoke 'core_PCA_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCA_delete'."
"Message",Normal,"          P/Invoke 'core_PCA_operatorThis' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCA_operatorThis'."
"Message",Normal,"          P/Invoke 'core_PCA_computeVar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCA_computeVar'."
"Message",Normal,"          P/Invoke 'core_PCA_project1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCA_project1'."
"Message",Normal,"          P/Invoke 'core_PCA_project2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCA_project2'."
"Message",Normal,"          P/Invoke 'core_PCA_backProject1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCA_backProject1'."
"Message",Normal,"          P/Invoke 'core_PCA_backProject2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCA_backProject2'."
"Message",Normal,"          P/Invoke 'core_PCA_eigenvectors' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCA_eigenvectors'."
"Message",Normal,"          P/Invoke 'core_PCA_eigenvalues' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCA_eigenvalues'."
"Message",Normal,"          P/Invoke 'core_PCA_mean' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCA_mean'."
"Message",Normal,"          P/Invoke 'core_PCA_write' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCA_write'."
"Message",Normal,"          P/Invoke 'core_PCA_read' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_PCA_read'."
"Message",Normal,"          P/Invoke 'core_RNG_fill' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_RNG_fill'."
"Message",Normal,"          P/Invoke 'core_RNG_gaussian' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_RNG_gaussian'."
"Message",Normal,"          P/Invoke 'core_SVD_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SVD_new1'."
"Message",Normal,"          P/Invoke 'core_SVD_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SVD_new2'."
"Message",Normal,"          P/Invoke 'core_SVD_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SVD_delete'."
"Message",Normal,"          P/Invoke 'core_SVD_operatorThis' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SVD_operatorThis'."
"Message",Normal,"          P/Invoke 'core_SVD_backSubst' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SVD_backSubst'."
"Message",Normal,"          P/Invoke 'core_SVD_static_compute1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SVD_static_compute1'."
"Message",Normal,"          P/Invoke 'core_SVD_static_compute2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SVD_static_compute2'."
"Message",Normal,"          P/Invoke 'core_SVD_static_backSubst' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SVD_static_backSubst'."
"Message",Normal,"          P/Invoke 'core_SVD_static_solveZ' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SVD_static_solveZ'."
"Message",Normal,"          P/Invoke 'core_SVD_u' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SVD_u'."
"Message",Normal,"          P/Invoke 'core_SVD_w' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SVD_w'."
"Message",Normal,"          P/Invoke 'core_SVD_vt' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SVD_vt'."
"Message",Normal,"          P/Invoke 'core_LDA_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_LDA_new1'."
"Message",Normal,"          P/Invoke 'core_LDA_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_LDA_new2'."
"Message",Normal,"          P/Invoke 'core_LDA_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_LDA_delete'."
"Message",Normal,"          P/Invoke 'core_LDA_save_String' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_LDA_save_String'."
"Message",Normal,"          P/Invoke 'core_LDA_load_String' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_LDA_load_String'."
"Message",Normal,"          P/Invoke 'core_LDA_save_FileStorage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_LDA_save_FileStorage'."
"Message",Normal,"          P/Invoke 'core_LDA_load_FileStorage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_LDA_load_FileStorage'."
"Message",Normal,"          P/Invoke 'core_LDA_compute' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_LDA_compute'."
"Message",Normal,"          P/Invoke 'core_LDA_project' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_LDA_project'."
"Message",Normal,"          P/Invoke 'core_LDA_reconstruct' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_LDA_reconstruct'."
"Message",Normal,"          P/Invoke 'core_LDA_eigenvectors' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_LDA_eigenvectors'."
"Message",Normal,"          P/Invoke 'core_LDA_eigenvalues' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_LDA_eigenvalues'."
"Message",Normal,"          P/Invoke 'core_LDA_subspaceProject' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_LDA_subspaceProject'."
"Message",Normal,"          P/Invoke 'core_LDA_subspaceReconstruct' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_LDA_subspaceReconstruct'."
"Message",Normal,"          P/Invoke 'core_FileNode_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_new1'."
"Message",Normal,"          P/Invoke 'core_FileNode_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_delete'."
"Message",Normal,"          P/Invoke 'core_FileNode_operatorThis_byString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_operatorThis_byString'."
"Message",Normal,"          P/Invoke 'core_FileNode_operatorThis_byInt' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_operatorThis_byInt'."
"Message",Normal,"          P/Invoke 'core_FileNode_type' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_type'."
"Message",Normal,"          P/Invoke 'core_FileNode_empty' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_empty'."
"Message",Normal,"          P/Invoke 'core_FileNode_isNone' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_isNone'."
"Message",Normal,"          P/Invoke 'core_FileNode_isSeq' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_isSeq'."
"Message",Normal,"          P/Invoke 'core_FileNode_isMap' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_isMap'."
"Message",Normal,"          P/Invoke 'core_FileNode_isInt' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_isInt'."
"Message",Normal,"          P/Invoke 'core_FileNode_isReal' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_isReal'."
"Message",Normal,"          P/Invoke 'core_FileNode_isString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_isString'."
"Message",Normal,"          P/Invoke 'core_FileNode_isNamed' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_isNamed'."
"Message",Normal,"          P/Invoke 'core_FileNode_name' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_name'."
"Message",Normal,"          P/Invoke 'core_FileNode_size' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_size'."
"Message",Normal,"          P/Invoke 'core_FileNode_toInt' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_toInt'."
"Message",Normal,"          P/Invoke 'core_FileNode_toFloat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_toFloat'."
"Message",Normal,"          P/Invoke 'core_FileNode_toDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_toDouble'."
"Message",Normal,"          P/Invoke 'core_FileNode_toString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_toString'."
"Message",Normal,"          P/Invoke 'core_FileNode_toMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_toMat'."
"Message",Normal,"          P/Invoke 'core_FileNode_begin' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_begin'."
"Message",Normal,"          P/Invoke 'core_FileNode_end' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_end'."
"Message",Normal,"          P/Invoke 'core_FileNode_readRaw' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_readRaw'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_int' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_int'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_float' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_float'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_double' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_double'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_String' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_String'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Mat'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_SparseMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_SparseMat'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_vectorOfKeyPoint' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_vectorOfKeyPoint'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_vectorOfDMatch' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_vectorOfDMatch'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Range' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Range'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_KeyPoint' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_KeyPoint'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_DMatch' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_DMatch'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Point2i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Point2i'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Point2f'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Point2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Point2d'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Point3i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Point3i'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Point3f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Point3f'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Point3d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Point3d'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Size2i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Size2i'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Size2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Size2f'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Size2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Size2d'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Rect2i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Rect2i'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Rect2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Rect2f'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Rect2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Rect2d'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Scalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Scalar'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec2i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec2i'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec3i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec3i'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec4i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec4i'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec6i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec6i'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec2d'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec3d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec3d'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec4d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec4d'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec6d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec6d'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec2f'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec3f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec3f'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec4f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec4f'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec6f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec6f'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec2b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec2b'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec3b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec3b'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec4b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec4b'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec6b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec6b'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec2s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec2s'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec3s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec3s'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec4s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec4s'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec6s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec6s'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec2w' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec2w'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec3w' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec3w'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec4w' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec4w'."
"Message",Normal,"          P/Invoke 'core_FileNode_read_Vec6w' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNode_read_Vec6w'."
"Message",Normal,"          P/Invoke 'core_FileNodeIterator_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNodeIterator_new1'."
"Message",Normal,"          P/Invoke 'core_FileNodeIterator_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNodeIterator_delete'."
"Message",Normal,"          P/Invoke 'core_FileNodeIterator_operatorAsterisk' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNodeIterator_operatorAsterisk'."
"Message",Normal,"          P/Invoke 'core_FileNodeIterator_operatorIncrement' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNodeIterator_operatorIncrement'."
"Message",Normal,"          P/Invoke 'core_FileNodeIterator_operatorPlusEqual' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNodeIterator_operatorPlusEqual'."
"Message",Normal,"          P/Invoke 'core_FileNodeIterator_readRaw' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNodeIterator_readRaw'."
"Message",Normal,"          P/Invoke 'core_FileNodeIterator_operatorEqual' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNodeIterator_operatorEqual'."
"Message",Normal,"          P/Invoke 'core_FileNodeIterator_operatorMinus' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNodeIterator_operatorMinus'."
"Message",Normal,"          P/Invoke 'core_FileNodeIterator_operatorLessThan' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileNodeIterator_operatorLessThan'."
"Message",Normal,"          P/Invoke 'core_FileStorage_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_new1'."
"Message",Normal,"          P/Invoke 'core_FileStorage_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_new2'."
"Message",Normal,"          P/Invoke 'core_FileStorage_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_delete'."
"Message",Normal,"          P/Invoke 'core_FileStorage_open' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_open'."
"Message",Normal,"          P/Invoke 'core_FileStorage_isOpened' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_isOpened'."
"Message",Normal,"          P/Invoke 'core_FileStorage_releaseAndGetString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_releaseAndGetString'."
"Message",Normal,"          P/Invoke 'core_FileStorage_getFirstTopLevelNode' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_getFirstTopLevelNode'."
"Message",Normal,"          P/Invoke 'core_FileStorage_root' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_root'."
"Message",Normal,"          P/Invoke 'core_FileStorage_indexer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_indexer'."
"Message",Normal,"          P/Invoke 'core_FileStorage_writeRaw' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_writeRaw'."
"Message",Normal,"          P/Invoke 'core_FileStorage_writeComment' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_writeComment'."
"Message",Normal,"          P/Invoke 'core_FileStorage_getDefaultObjectName' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_getDefaultObjectName'."
"Message",Normal,"          P/Invoke 'core_FileStorage_elname' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_elname'."
"Message",Normal,"          P/Invoke 'core_FileStorage_startWriteStruct' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_startWriteStruct'."
"Message",Normal,"          P/Invoke 'core_FileStorage_endWriteStruct' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_endWriteStruct'."
"Message",Normal,"          P/Invoke 'core_FileStorage_state' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_state'."
"Message",Normal,"          P/Invoke 'core_FileStorage_write_int' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_write_int'."
"Message",Normal,"          P/Invoke 'core_FileStorage_write_float' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_write_float'."
"Message",Normal,"          P/Invoke 'core_FileStorage_write_double' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_write_double'."
"Message",Normal,"          P/Invoke 'core_FileStorage_write_String' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_write_String'."
"Message",Normal,"          P/Invoke 'core_FileStorage_write_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_write_Mat'."
"Message",Normal,"          P/Invoke 'core_FileStorage_write_SparseMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_write_SparseMat'."
"Message",Normal,"          P/Invoke 'core_FileStorage_write_vectorOfKeyPoint' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_write_vectorOfKeyPoint'."
"Message",Normal,"          P/Invoke 'core_FileStorage_write_vectorOfDMatch' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_write_vectorOfDMatch'."
"Message",Normal,"          P/Invoke 'core_FileStorage_writeScalar_int' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_writeScalar_int'."
"Message",Normal,"          P/Invoke 'core_FileStorage_writeScalar_float' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_writeScalar_float'."
"Message",Normal,"          P/Invoke 'core_FileStorage_writeScalar_double' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_writeScalar_double'."
"Message",Normal,"          P/Invoke 'core_FileStorage_writeScalar_String' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_writeScalar_String'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_String' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_String'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_int' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_int'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_float' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_float'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_double' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_double'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Mat'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_SparseMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_SparseMat'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Range' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Range'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_KeyPoint' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_KeyPoint'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_DMatch' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_DMatch'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_vectorOfKeyPoint' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_vectorOfKeyPoint'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_vectorOfDMatch' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_vectorOfDMatch'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Point2i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Point2i'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Point2f'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Point2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Point2d'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Point3i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Point3i'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Point3f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Point3f'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Point3d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Point3d'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Size2i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Size2i'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Size2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Size2f'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Size2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Size2d'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Rect2i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Rect2i'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Rect2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Rect2f'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Rect2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Rect2d'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Scalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Scalar'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec2i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec2i'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec3i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec3i'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec4i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec4i'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec6i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec6i'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec2d'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec3d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec3d'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec4d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec4d'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec6d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec6d'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec2f'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec3f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec3f'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec4f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec4f'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec6f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec6f'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec2b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec2b'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec3b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec3b'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec4b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec4b'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec6b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec6b'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec2s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec2s'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec3s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec3s'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec4s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec4s'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec6s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec6s'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec2w' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec2w'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec3w' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec3w'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec4w' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec4w'."
"Message",Normal,"          P/Invoke 'core_FileStorage_shift_Vec6w' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_FileStorage_shift_Vec6w'."
"Message",Normal,"          P/Invoke 'core_InputArray_new_byMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_new_byMat'."
"Message",Normal,"          P/Invoke 'core_InputArray_new_byUMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_new_byUMat'."
"Message",Normal,"          P/Invoke 'core_InputArray_new_byMatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_new_byMatExpr'."
"Message",Normal,"          P/Invoke 'core_InputArray_new_byScalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_new_byScalar'."
"Message",Normal,"          P/Invoke 'core_InputArray_new_byDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_new_byDouble'."
"Message",Normal,"          P/Invoke 'core_InputArray_new_byVectorOfMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_new_byVectorOfMat'."
"Message",Normal,"          P/Invoke 'core_InputArray_new_byVecb' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_new_byVecb'."
"Message",Normal,"          P/Invoke 'core_InputArray_new_byVecs' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_new_byVecs'."
"Message",Normal,"          P/Invoke 'core_InputArray_new_byVecw' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_new_byVecw'."
"Message",Normal,"          P/Invoke 'core_InputArray_new_byVeci' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_new_byVeci'."
"Message",Normal,"          P/Invoke 'core_InputArray_new_byVecf' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_new_byVecf'."
"Message",Normal,"          P/Invoke 'core_InputArray_new_byVecd' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_new_byVecd'."
"Message",Normal,"          P/Invoke 'core_InputArray_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_delete'."
"Message",Normal,"          P/Invoke 'core_InputArray_delete_withScalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_delete_withScalar'."
"Message",Normal,"          P/Invoke 'core_InputArray_getMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_getMat'."
"Message",Normal,"          P/Invoke 'core_InputArray_getUMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_getUMat'."
"Message",Normal,"          P/Invoke 'core_InputArray_getMatVector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_getMatVector'."
"Message",Normal,"          P/Invoke 'core_InputArray_getFlags' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_getFlags'."
"Message",Normal,"          P/Invoke 'core_InputArray_getObj' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_getObj'."
"Message",Normal,"          P/Invoke 'core_InputArray_getSz' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_getSz'."
"Message",Normal,"          P/Invoke 'core_InputArray_kind' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_kind'."
"Message",Normal,"          P/Invoke 'core_InputArray_dims' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_dims'."
"Message",Normal,"          P/Invoke 'core_InputArray_cols' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_cols'."
"Message",Normal,"          P/Invoke 'core_InputArray_rows' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_rows'."
"Message",Normal,"          P/Invoke 'core_InputArray_size' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_size'."
"Message",Normal,"          P/Invoke 'core_InputArray_sizend' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_sizend'."
"Message",Normal,"          P/Invoke 'core_InputArray_sameSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_sameSize'."
"Message",Normal,"          P/Invoke 'core_InputArray_total' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_total'."
"Message",Normal,"          P/Invoke 'core_InputArray_type' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_type'."
"Message",Normal,"          P/Invoke 'core_InputArray_depth' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_depth'."
"Message",Normal,"          P/Invoke 'core_InputArray_channels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_channels'."
"Message",Normal,"          P/Invoke 'core_InputArray_isContinuous' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_isContinuous'."
"Message",Normal,"          P/Invoke 'core_InputArray_isSubmatrix' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_isSubmatrix'."
"Message",Normal,"          P/Invoke 'core_InputArray_empty' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_empty'."
"Message",Normal,"          P/Invoke 'core_InputArray_copyTo1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_copyTo1'."
"Message",Normal,"          P/Invoke 'core_InputArray_copyTo2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_copyTo2'."
"Message",Normal,"          P/Invoke 'core_InputArray_offset' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_offset'."
"Message",Normal,"          P/Invoke 'core_InputArray_step' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_step'."
"Message",Normal,"          P/Invoke 'core_InputArray_isMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_isMat'."
"Message",Normal,"          P/Invoke 'core_InputArray_isUMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_isUMat'."
"Message",Normal,"          P/Invoke 'core_InputArray_isMatVector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_isMatVector'."
"Message",Normal,"          P/Invoke 'core_InputArray_isUMatVector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_isUMatVector'."
"Message",Normal,"          P/Invoke 'core_InputArray_isMatx' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_isMatx'."
"Message",Normal,"          P/Invoke 'core_InputArray_isVector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_isVector'."
"Message",Normal,"          P/Invoke 'core_InputArray_isGpuMatVector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_InputArray_isGpuMatVector'."
"Message",Normal,"          P/Invoke 'core_Mat_sizeof' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_sizeof'."
"Message",Normal,"          P/Invoke 'core_Mat_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_new1'."
"Message",Normal,"          P/Invoke 'core_Mat_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_new2'."
"Message",Normal,"          P/Invoke 'core_Mat_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_new3'."
"Message",Normal,"          P/Invoke 'core_Mat_new4' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_new4'."
"Message",Normal,"          P/Invoke 'core_Mat_new5' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_new5'."
"Message",Normal,"          P/Invoke 'core_Mat_new6' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_new6'."
"Message",Normal,"          P/Invoke 'core_Mat_new7' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_new7'."
"Message",Normal,"          P/Invoke 'core_Mat_new8' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_new8'."
"Message",Normal,"          P/Invoke 'core_Mat_new9' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_new9'."
"Message",Normal,"          P/Invoke 'core_Mat_new9' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_new9'."
"Message",Normal,"          P/Invoke 'core_Mat_new10' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_new10'."
"Message",Normal,"          P/Invoke 'core_Mat_new11' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_new11'."
"Message",Normal,"          P/Invoke 'core_Mat_new12' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_new12'."
"Message",Normal,"          P/Invoke 'core_Mat_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_delete'."
"Message",Normal,"          P/Invoke 'core_Mat_getUMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_getUMat'."
"Message",Normal,"          P/Invoke 'core_Mat_row' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_row'."
"Message",Normal,"          P/Invoke 'core_Mat_col' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_col'."
"Message",Normal,"          P/Invoke 'core_Mat_rowRange' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_rowRange'."
"Message",Normal,"          P/Invoke 'core_Mat_colRange' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_colRange'."
"Message",Normal,"          P/Invoke 'core_Mat_diag' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_diag'."
"Message",Normal,"          P/Invoke 'core_Mat_diag_static' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_diag_static'."
"Message",Normal,"          P/Invoke 'core_Mat_clone' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_clone'."
"Message",Normal,"          P/Invoke 'core_Mat_copyTo1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_copyTo1'."
"Message",Normal,"          P/Invoke 'core_Mat_copyTo2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_copyTo2'."
"Message",Normal,"          P/Invoke 'core_Mat_copyTo_toMat1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_copyTo_toMat1'."
"Message",Normal,"          P/Invoke 'core_Mat_copyTo_toMat2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_copyTo_toMat2'."
"Message",Normal,"          P/Invoke 'core_Mat_convertTo' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_convertTo'."
"Message",Normal,"          P/Invoke 'core_Mat_assignTo' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_assignTo'."
"Message",Normal,"          P/Invoke 'core_Mat_setTo_Scalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_setTo_Scalar'."
"Message",Normal,"          P/Invoke 'core_Mat_setTo_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_setTo_InputArray'."
"Message",Normal,"          P/Invoke 'core_Mat_reshape1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_reshape1'."
"Message",Normal,"          P/Invoke 'core_Mat_reshape2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_reshape2'."
"Message",Normal,"          P/Invoke 'core_Mat_t' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_t'."
"Message",Normal,"          P/Invoke 'core_Mat_inv' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_inv'."
"Message",Normal,"          P/Invoke 'core_Mat_mul' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_mul'."
"Message",Normal,"          P/Invoke 'core_Mat_cross' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_cross'."
"Message",Normal,"          P/Invoke 'core_Mat_dot' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_dot'."
"Message",Normal,"          P/Invoke 'core_Mat_zeros1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_zeros1'."
"Message",Normal,"          P/Invoke 'core_Mat_zeros2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_zeros2'."
"Message",Normal,"          P/Invoke 'core_Mat_ones1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_ones1'."
"Message",Normal,"          P/Invoke 'core_Mat_ones2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_ones2'."
"Message",Normal,"          P/Invoke 'core_Mat_eye' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_eye'."
"Message",Normal,"          P/Invoke 'core_Mat_create1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_create1'."
"Message",Normal,"          P/Invoke 'core_Mat_create2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_create2'."
"Message",Normal,"          P/Invoke 'core_Mat_reserve' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_reserve'."
"Message",Normal,"          P/Invoke 'core_Mat_reserveBuffer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_reserveBuffer'."
"Message",Normal,"          P/Invoke 'core_Mat_resize1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_resize1'."
"Message",Normal,"          P/Invoke 'core_Mat_resize2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_resize2'."
"Message",Normal,"          P/Invoke 'core_Mat_pop_back' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_pop_back'."
"Message",Normal,"          P/Invoke 'core_Mat_locateROI' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_locateROI'."
"Message",Normal,"          P/Invoke 'core_Mat_adjustROI' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_adjustROI'."
"Message",Normal,"          P/Invoke 'core_Mat_subMat1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_subMat1'."
"Message",Normal,"          P/Invoke 'core_Mat_subMat2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_subMat2'."
"Message",Normal,"          P/Invoke 'core_Mat_isContinuous' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_isContinuous'."
"Message",Normal,"          P/Invoke 'core_Mat_isSubmatrix' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_isSubmatrix'."
"Message",Normal,"          P/Invoke 'core_Mat_elemSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_elemSize'."
"Message",Normal,"          P/Invoke 'core_Mat_elemSize1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_elemSize1'."
"Message",Normal,"          P/Invoke 'core_Mat_type' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_type'."
"Message",Normal,"          P/Invoke 'core_Mat_depth' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_depth'."
"Message",Normal,"          P/Invoke 'core_Mat_channels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_channels'."
"Message",Normal,"          P/Invoke 'core_Mat_empty' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_empty'."
"Message",Normal,"          P/Invoke 'core_Mat_total1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_total1'."
"Message",Normal,"          P/Invoke 'core_Mat_total2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_total2'."
"Message",Normal,"          P/Invoke 'core_Mat_checkVector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_checkVector'."
"Message",Normal,"          P/Invoke 'core_Mat_ptr1d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_ptr1d'."
"Message",Normal,"          P/Invoke 'core_Mat_ptr2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_ptr2d'."
"Message",Normal,"          P/Invoke 'core_Mat_ptr3d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_ptr3d'."
"Message",Normal,"          P/Invoke 'core_Mat_ptrnd' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_ptrnd'."
"Message",Normal,"          P/Invoke 'core_Mat_flags' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_flags'."
"Message",Normal,"          P/Invoke 'core_Mat_dims' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_dims'."
"Message",Normal,"          P/Invoke 'core_Mat_rows' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_rows'."
"Message",Normal,"          P/Invoke 'core_Mat_cols' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_cols'."
"Message",Normal,"          P/Invoke 'core_Mat_data' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_data'."
"Message",Normal,"          P/Invoke 'core_Mat_datastart' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_datastart'."
"Message",Normal,"          P/Invoke 'core_Mat_dataend' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_dataend'."
"Message",Normal,"          P/Invoke 'core_Mat_datalimit' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_datalimit'."
"Message",Normal,"          P/Invoke 'core_Mat_size' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_size'."
"Message",Normal,"          P/Invoke 'core_Mat_sizeAt' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_sizeAt'."
"Message",Normal,"          P/Invoke 'core_Mat_step1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_step1'."
"Message",Normal,"          P/Invoke 'core_Mat_step' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_step'."
"Message",Normal,"          P/Invoke 'core_Mat_stepAt' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_stepAt'."
"Message",Normal,"          P/Invoke 'core_abs_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_abs_Mat'."
"Message",Normal,"          P/Invoke 'core_Mat_setMatData' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_setMatData'."
"Message",Normal,"          P/Invoke 'core_Mat_getMatData' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_getMatData'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Mat'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_char' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_char'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_uchar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_uchar'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_short' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_short'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_ushort' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_ushort'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_int' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_int'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_float' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_float'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_double' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_double'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec2b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec2b'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec3b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec3b'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec4b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec4b'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec6b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec6b'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec2s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec2s'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec3s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec3s'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec4s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec4s'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec6s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec6s'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec2w' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec2w'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec3w' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec3w'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec4w' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec4w'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec6w' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec6w'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec2i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec2i'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec3i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec3i'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec4i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec4i'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec6i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec6i'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec2f'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec3f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec3f'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec4f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec4f'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec6f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec6f'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec2d'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec3d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec3d'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec4d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec4d'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Vec6d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Vec6d'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Point'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Point2f'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Point2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Point2d'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Point3i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Point3i'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Point3f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Point3f'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Point3d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Point3d'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Size' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Size'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Size2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Size2f'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Size2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Size2d'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Rect' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Rect'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Rect2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Rect2f'."
"Message",Normal,"          P/Invoke 'core_Mat_push_back_Rect2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_push_back_Rect2d'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_uchar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_uchar'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec2b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec2b'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec3b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec3b'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec4b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec4b'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec6b' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec6b'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_short' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_short'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec2s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec2s'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec3s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec3s'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec4s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec4s'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec6s' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec6s'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_int' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_int'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec2i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec2i'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec3i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec3i'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec4i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec4i'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec6i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec6i'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_float' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_float'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec2f'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec3f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec3f'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec4f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec4f'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec6f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec6f'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_double' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_double'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec2d'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec3d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec3d'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec4d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec4d'."
"Message",Normal,"          P/Invoke 'core_Mat_forEach_Vec6d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_forEach_Vec6d'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorUnaryMinus' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorUnaryMinus'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorAdd_MatMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorAdd_MatMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorAdd_MatScalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorAdd_MatScalar'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorAdd_ScalarMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorAdd_ScalarMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorMinus_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorMinus_Mat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorSubtract_MatMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorSubtract_MatMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorSubtract_MatScalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorSubtract_MatScalar'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorSubtract_ScalarMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorSubtract_ScalarMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorMultiply_MatMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorMultiply_MatMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorMultiply_MatDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorMultiply_MatDouble'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorMultiply_DoubleMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorMultiply_DoubleMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorDivide_MatMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorDivide_MatMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorDivide_MatDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorDivide_MatDouble'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorDivide_DoubleMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorDivide_DoubleMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorAnd_MatMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorAnd_MatMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorAnd_MatDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorAnd_MatDouble'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorAnd_DoubleMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorAnd_DoubleMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorOr_MatMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorOr_MatMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorOr_MatDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorOr_MatDouble'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorOr_DoubleMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorOr_DoubleMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorXor_MatMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorXor_MatMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorXor_MatDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorXor_MatDouble'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorXor_DoubleMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorXor_DoubleMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorNot' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorNot'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorLT_MatMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorLT_MatMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorLT_DoubleMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorLT_DoubleMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorLT_MatDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorLT_MatDouble'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorLE_MatMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorLE_MatMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorLE_DoubleMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorLE_DoubleMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorLE_MatDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorLE_MatDouble'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorGT_MatMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorGT_MatMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorGT_DoubleMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorGT_DoubleMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorGT_MatDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorGT_MatDouble'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorGE_MatMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorGE_MatMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorGE_DoubleMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorGE_DoubleMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorGE_MatDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorGE_MatDouble'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorEQ_MatMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorEQ_MatMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorEQ_DoubleMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorEQ_DoubleMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorEQ_MatDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorEQ_MatDouble'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorNE_MatMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorNE_MatMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorNE_DoubleMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorNE_DoubleMat'."
"Message",Normal,"          P/Invoke 'core_Mat_operatorNE_MatDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_Mat_operatorNE_MatDouble'."
"Message",Normal,"          P/Invoke 'core_MatExpr_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_new1'."
"Message",Normal,"          P/Invoke 'core_MatExpr_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_new2'."
"Message",Normal,"          P/Invoke 'core_MatExpr_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_delete'."
"Message",Normal,"          P/Invoke 'core_MatExpr_toMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_toMat'."
"Message",Normal,"          P/Invoke 'core_MatExpr_row' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_row'."
"Message",Normal,"          P/Invoke 'core_MatExpr_col' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_col'."
"Message",Normal,"          P/Invoke 'core_MatExpr_diag' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_diag'."
"Message",Normal,"          P/Invoke 'core_MatExpr_submat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_submat'."
"Message",Normal,"          P/Invoke 'core_MatExpr_t' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_t'."
"Message",Normal,"          P/Invoke 'core_MatExpr_inv' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_inv'."
"Message",Normal,"          P/Invoke 'core_MatExpr_mul_toMatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_mul_toMatExpr'."
"Message",Normal,"          P/Invoke 'core_MatExpr_mul_toMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_mul_toMat'."
"Message",Normal,"          P/Invoke 'core_MatExpr_cross' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_cross'."
"Message",Normal,"          P/Invoke 'core_MatExpr_dot' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_dot'."
"Message",Normal,"          P/Invoke 'core_MatExpr_size' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_size'."
"Message",Normal,"          P/Invoke 'core_MatExpr_type' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_MatExpr_type'."
"Message",Normal,"          P/Invoke 'core_operatorUnaryMinus_MatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorUnaryMinus_MatExpr'."
"Message",Normal,"          P/Invoke 'core_operatorUnaryNot_MatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorUnaryNot_MatExpr'."
"Message",Normal,"          P/Invoke 'core_operatorAdd_MatExprMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorAdd_MatExprMat'."
"Message",Normal,"          P/Invoke 'core_operatorAdd_MatMatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorAdd_MatMatExpr'."
"Message",Normal,"          P/Invoke 'core_operatorAdd_MatExprScalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorAdd_MatExprScalar'."
"Message",Normal,"          P/Invoke 'core_operatorAdd_ScalarMatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorAdd_ScalarMatExpr'."
"Message",Normal,"          P/Invoke 'core_operatorAdd_MatExprMatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorAdd_MatExprMatExpr'."
"Message",Normal,"          P/Invoke 'core_operatorSubtract_MatExprMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorSubtract_MatExprMat'."
"Message",Normal,"          P/Invoke 'core_operatorSubtract_MatMatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorSubtract_MatMatExpr'."
"Message",Normal,"          P/Invoke 'core_operatorSubtract_MatExprScalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorSubtract_MatExprScalar'."
"Message",Normal,"          P/Invoke 'core_operatorSubtract_ScalarMatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorSubtract_ScalarMatExpr'."
"Message",Normal,"          P/Invoke 'core_operatorSubtract_MatExprMatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorSubtract_MatExprMatExpr'."
"Message",Normal,"          P/Invoke 'core_operatorMultiply_MatExprMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorMultiply_MatExprMat'."
"Message",Normal,"          P/Invoke 'core_operatorMultiply_MatMatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorMultiply_MatMatExpr'."
"Message",Normal,"          P/Invoke 'core_operatorMultiply_MatExprDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorMultiply_MatExprDouble'."
"Message",Normal,"          P/Invoke 'core_operatorMultiply_DoubleMatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorMultiply_DoubleMatExpr'."
"Message",Normal,"          P/Invoke 'core_operatorMultiply_MatExprMatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorMultiply_MatExprMatExpr'."
"Message",Normal,"          P/Invoke 'core_operatorDivide_MatExprMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorDivide_MatExprMat'."
"Message",Normal,"          P/Invoke 'core_operatorDivide_MatMatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorDivide_MatMatExpr'."
"Message",Normal,"          P/Invoke 'core_operatorDivide_MatExprDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorDivide_MatExprDouble'."
"Message",Normal,"          P/Invoke 'core_operatorDivide_DoubleMatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorDivide_DoubleMatExpr'."
"Message",Normal,"          P/Invoke 'core_operatorDivide_MatExprMatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_operatorDivide_MatExprMatExpr'."
"Message",Normal,"          P/Invoke 'core_abs_MatExpr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_abs_MatExpr'."
"Message",Normal,"          P/Invoke 'core_OutputArray_new_byMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_OutputArray_new_byMat'."
"Message",Normal,"          P/Invoke 'core_OutputArray_new_byUMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_OutputArray_new_byUMat'."
"Message",Normal,"          P/Invoke 'core_OutputArray_new_byScalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_OutputArray_new_byScalar'."
"Message",Normal,"          P/Invoke 'core_OutputArray_new_byVectorOfMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_OutputArray_new_byVectorOfMat'."
"Message",Normal,"          P/Invoke 'core_OutputArray_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_OutputArray_delete'."
"Message",Normal,"          P/Invoke 'core_OutputArray_getMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_OutputArray_getMat'."
"Message",Normal,"          P/Invoke 'core_OutputArray_getScalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_OutputArray_getScalar'."
"Message",Normal,"          P/Invoke 'core_OutputArray_getVectorOfMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_OutputArray_getVectorOfMat'."
"Message",Normal,"          P/Invoke 'core_SparseMat_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_new1'."
"Message",Normal,"          P/Invoke 'core_SparseMat_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_new2'."
"Message",Normal,"          P/Invoke 'core_SparseMat_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_new3'."
"Message",Normal,"          P/Invoke 'core_SparseMat_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_delete'."
"Message",Normal,"          P/Invoke 'core_SparseMat_operatorAssign_SparseMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_operatorAssign_SparseMat'."
"Message",Normal,"          P/Invoke 'core_SparseMat_operatorAssign_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_operatorAssign_Mat'."
"Message",Normal,"          P/Invoke 'core_SparseMat_clone' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_clone'."
"Message",Normal,"          P/Invoke 'core_SparseMat_copyTo_SparseMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_copyTo_SparseMat'."
"Message",Normal,"          P/Invoke 'core_SparseMat_copyTo_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_copyTo_Mat'."
"Message",Normal,"          P/Invoke 'core_SparseMat_convertTo_SparseMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_convertTo_SparseMat'."
"Message",Normal,"          P/Invoke 'core_SparseMat_convertTo_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_convertTo_Mat'."
"Message",Normal,"          P/Invoke 'core_SparseMat_assignTo' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_assignTo'."
"Message",Normal,"          P/Invoke 'core_SparseMat_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_create'."
"Message",Normal,"          P/Invoke 'core_SparseMat_clear' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_clear'."
"Message",Normal,"          P/Invoke 'core_SparseMat_addref' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_addref'."
"Message",Normal,"          P/Invoke 'core_SparseMat_release' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_release'."
"Message",Normal,"          P/Invoke 'core_SparseMat_elemSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_elemSize'."
"Message",Normal,"          P/Invoke 'core_SparseMat_elemSize1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_elemSize1'."
"Message",Normal,"          P/Invoke 'core_SparseMat_type' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_type'."
"Message",Normal,"          P/Invoke 'core_SparseMat_depth' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_depth'."
"Message",Normal,"          P/Invoke 'core_SparseMat_channels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_channels'."
"Message",Normal,"          P/Invoke 'core_SparseMat_size1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_size1'."
"Message",Normal,"          P/Invoke 'core_SparseMat_size2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_size2'."
"Message",Normal,"          P/Invoke 'core_SparseMat_dims' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_dims'."
"Message",Normal,"          P/Invoke 'core_SparseMat_nzcount' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_nzcount'."
"Message",Normal,"          P/Invoke 'core_SparseMat_hash_1d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_hash_1d'."
"Message",Normal,"          P/Invoke 'core_SparseMat_hash_2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_hash_2d'."
"Message",Normal,"          P/Invoke 'core_SparseMat_hash_3d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_hash_3d'."
"Message",Normal,"          P/Invoke 'core_SparseMat_hash_nd' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_hash_nd'."
"Message",Normal,"          P/Invoke 'core_SparseMat_ptr_1d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_ptr_1d'."
"Message",Normal,"          P/Invoke 'core_SparseMat_ptr_2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_ptr_2d'."
"Message",Normal,"          P/Invoke 'core_SparseMat_ptr_3d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_ptr_3d'."
"Message",Normal,"          P/Invoke 'core_SparseMat_ptr_nd' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_SparseMat_ptr_nd'."
"Message",Normal,"          P/Invoke 'core_UMat_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_new1'."
"Message",Normal,"          P/Invoke 'core_UMat_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_new2'."
"Message",Normal,"          P/Invoke 'core_UMat_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_new3'."
"Message",Normal,"          P/Invoke 'core_UMat_new4' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_new4'."
"Message",Normal,"          P/Invoke 'core_UMat_new5' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_new5'."
"Message",Normal,"          P/Invoke 'core_UMat_new6' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_new6'."
"Message",Normal,"          P/Invoke 'core_UMat_new7' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_new7'."
"Message",Normal,"          P/Invoke 'core_UMat_new8' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_new8'."
"Message",Normal,"          P/Invoke 'core_UMat_new9' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_new9'."
"Message",Normal,"          P/Invoke 'core_UMat_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_delete'."
"Message",Normal,"          P/Invoke 'core_UMat_getMat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_getMat'."
"Message",Normal,"          P/Invoke 'core_UMat_row' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_row'."
"Message",Normal,"          P/Invoke 'core_UMat_col' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_col'."
"Message",Normal,"          P/Invoke 'core_UMat_rowRange' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_rowRange'."
"Message",Normal,"          P/Invoke 'core_UMat_colRange' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_colRange'."
"Message",Normal,"          P/Invoke 'core_UMat_diag' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_diag'."
"Message",Normal,"          P/Invoke 'core_UMat_diag_static' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_diag_static'."
"Message",Normal,"          P/Invoke 'core_UMat_clone' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_clone'."
"Message",Normal,"          P/Invoke 'core_UMat_copyTo1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_copyTo1'."
"Message",Normal,"          P/Invoke 'core_UMat_copyTo2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_copyTo2'."
"Message",Normal,"          P/Invoke 'core_UMat_copyTo_toUMat1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_copyTo_toUMat1'."
"Message",Normal,"          P/Invoke 'core_UMat_copyTo_toUMat2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_copyTo_toUMat2'."
"Message",Normal,"          P/Invoke 'core_UMat_convertTo' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_convertTo'."
"Message",Normal,"          P/Invoke 'core_UMat_assignTo' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_assignTo'."
"Message",Normal,"          P/Invoke 'core_UMat_setTo_Scalar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_setTo_Scalar'."
"Message",Normal,"          P/Invoke 'core_UMat_setTo_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_setTo_InputArray'."
"Message",Normal,"          P/Invoke 'core_UMat_reshape1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_reshape1'."
"Message",Normal,"          P/Invoke 'core_UMat_reshape2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_reshape2'."
"Message",Normal,"          P/Invoke 'core_UMat_t' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_t'."
"Message",Normal,"          P/Invoke 'core_UMat_inv' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_inv'."
"Message",Normal,"          P/Invoke 'core_UMat_mul' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_mul'."
"Message",Normal,"          P/Invoke 'core_UMat_dot' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_dot'."
"Message",Normal,"          P/Invoke 'core_UMat_zeros1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_zeros1'."
"Message",Normal,"          P/Invoke 'core_UMat_zeros2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_zeros2'."
"Message",Normal,"          P/Invoke 'core_UMat_ones1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_ones1'."
"Message",Normal,"          P/Invoke 'core_UMat_ones2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_ones2'."
"Message",Normal,"          P/Invoke 'core_UMat_eye' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_eye'."
"Message",Normal,"          P/Invoke 'core_UMat_create1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_create1'."
"Message",Normal,"          P/Invoke 'core_UMat_create2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_create2'."
"Message",Normal,"          P/Invoke 'core_UMat_locateROI' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_locateROI'."
"Message",Normal,"          P/Invoke 'core_UMat_adjustROI' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_adjustROI'."
"Message",Normal,"          P/Invoke 'core_UMat_subMat1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_subMat1'."
"Message",Normal,"          P/Invoke 'core_UMat_subMat2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_subMat2'."
"Message",Normal,"          P/Invoke 'core_UMat_isContinuous' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_isContinuous'."
"Message",Normal,"          P/Invoke 'core_UMat_isSubmatrix' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_isSubmatrix'."
"Message",Normal,"          P/Invoke 'core_UMat_elemSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_elemSize'."
"Message",Normal,"          P/Invoke 'core_UMat_elemSize1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_elemSize1'."
"Message",Normal,"          P/Invoke 'core_UMat_type' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_type'."
"Message",Normal,"          P/Invoke 'core_UMat_depth' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_depth'."
"Message",Normal,"          P/Invoke 'core_UMat_channels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_channels'."
"Message",Normal,"          P/Invoke 'core_UMat_step1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_step1'."
"Message",Normal,"          P/Invoke 'core_UMat_empty' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_empty'."
"Message",Normal,"          P/Invoke 'core_UMat_total' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_total'."
"Message",Normal,"          P/Invoke 'core_UMat_checkVector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_checkVector'."
"Message",Normal,"          P/Invoke 'core_UMat_flags' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_flags'."
"Message",Normal,"          P/Invoke 'core_UMat_dims' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_dims'."
"Message",Normal,"          P/Invoke 'core_UMat_rows' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_rows'."
"Message",Normal,"          P/Invoke 'core_UMat_cols' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_cols'."
"Message",Normal,"          P/Invoke 'core_UMat_size' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_size'."
"Message",Normal,"          P/Invoke 'core_UMat_sizeAt' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_sizeAt'."
"Message",Normal,"          P/Invoke 'core_UMat_step' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_step'."
"Message",Normal,"          P/Invoke 'core_UMat_stepAt' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!core_UMat_stepAt'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromDarknet' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromDarknet'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromDarknet' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromDarknet'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromDarknet_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromDarknet_InputArray'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromCaffe' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromCaffe'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromCaffe' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromCaffe'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromCaffe_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromCaffe_InputArray'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromTensorflow' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromTensorflow'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromTensorflow' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromTensorflow'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromTensorflow_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromTensorflow_InputArray'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromTorch' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromTorch'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromTorch' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromTorch'."
"Message",Normal,"          P/Invoke 'dnn_readNet' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNet'."
"Message",Normal,"          P/Invoke 'dnn_readNet' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNet'."
"Message",Normal,"          P/Invoke 'dnn_readTorchBlob' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readTorchBlob'."
"Message",Normal,"          P/Invoke 'dnn_readTorchBlob' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readTorchBlob'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromModelOptimizer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromModelOptimizer'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromModelOptimizer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromModelOptimizer'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromONNX' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromONNX'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromONNX' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromONNX'."
"Message",Normal,"          P/Invoke 'dnn_readNetFromONNX_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readNetFromONNX_InputArray'."
"Message",Normal,"          P/Invoke 'dnn_readTensorFromONNX' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readTensorFromONNX'."
"Message",Normal,"          P/Invoke 'dnn_readTensorFromONNX' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_readTensorFromONNX'."
"Message",Normal,"          P/Invoke 'dnn_blobFromImage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_blobFromImage'."
"Message",Normal,"          P/Invoke 'dnn_blobFromImages' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_blobFromImages'."
"Message",Normal,"          P/Invoke 'dnn_shrinkCaffeModel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_shrinkCaffeModel'."
"Message",Normal,"          P/Invoke 'dnn_shrinkCaffeModel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_shrinkCaffeModel'."
"Message",Normal,"          P/Invoke 'dnn_writeTextGraph' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_writeTextGraph'."
"Message",Normal,"          P/Invoke 'dnn_writeTextGraph' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_writeTextGraph'."
"Message",Normal,"          P/Invoke 'dnn_NMSBoxes_Rect' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_NMSBoxes_Rect'."
"Message",Normal,"          P/Invoke 'dnn_NMSBoxes_Rect2d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_NMSBoxes_Rect2d'."
"Message",Normal,"          P/Invoke 'dnn_NMSBoxes_RotatedRect' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_NMSBoxes_RotatedRect'."
"Message",Normal,"          P/Invoke 'dnn_resetMyriadDevice' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_resetMyriadDevice'."
"Message",Normal,"          P/Invoke 'dnn_Net_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_new'."
"Message",Normal,"          P/Invoke 'dnn_Net_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_delete'."
"Message",Normal,"          P/Invoke 'dnn_Net_readFromModelOptimizer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_readFromModelOptimizer'."
"Message",Normal,"          P/Invoke 'dnn_Net_empty' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_empty'."
"Message",Normal,"          P/Invoke 'dnn_Net_dump' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_dump'."
"Message",Normal,"          P/Invoke 'dnn_Net_dumpToFile' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_dumpToFile'."
"Message",Normal,"          P/Invoke 'dnn_Net_getLayerId' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_getLayerId'."
"Message",Normal,"          P/Invoke 'dnn_Net_getLayerNames' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_getLayerNames'."
"Message",Normal,"          P/Invoke 'dnn_Net_connect1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_connect1'."
"Message",Normal,"          P/Invoke 'dnn_Net_connect2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_connect2'."
"Message",Normal,"          P/Invoke 'dnn_Net_setInputsNames' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_setInputsNames'."
"Message",Normal,"          P/Invoke 'dnn_Net_forward1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_forward1'."
"Message",Normal,"          P/Invoke 'dnn_Net_forward2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_forward2'."
"Message",Normal,"          P/Invoke 'dnn_Net_forward3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_forward3'."
"Message",Normal,"          P/Invoke 'dnn_Net_setHalideScheduler' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_setHalideScheduler'."
"Message",Normal,"          P/Invoke 'dnn_Net_setPreferableBackend' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_setPreferableBackend'."
"Message",Normal,"          P/Invoke 'dnn_Net_setPreferableTarget' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_setPreferableTarget'."
"Message",Normal,"          P/Invoke 'dnn_Net_setInput' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_setInput'."
"Message",Normal,"          P/Invoke 'dnn_Net_getUnconnectedOutLayers' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_getUnconnectedOutLayers'."
"Message",Normal,"          P/Invoke 'dnn_Net_getUnconnectedOutLayersNames' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_getUnconnectedOutLayersNames'."
"Message",Normal,"          P/Invoke 'dnn_Net_enableFusion' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_enableFusion'."
"Message",Normal,"          P/Invoke 'dnn_Net_getPerfProfile' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_Net_getPerfProfile'."
"Message",Normal,"          P/Invoke 'face_Facemark_loadModel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_Facemark_loadModel'."
"Message",Normal,"          P/Invoke 'face_Facemark_fit' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_Facemark_fit'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_create'."
"Message",Normal,"          P/Invoke 'face_Ptr_FacemarkLBF_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_Ptr_FacemarkLBF_get'."
"Message",Normal,"          P/Invoke 'face_Ptr_FacemarkLBF_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_Ptr_FacemarkLBF_delete'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_new'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_delete'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_shape_offset_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_shape_offset_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_shape_offset_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_shape_offset_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_cascade_face_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_cascade_face_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_cascade_face_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_cascade_face_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_verbose_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_verbose_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_verbose_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_verbose_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_n_landmarks_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_n_landmarks_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_n_landmarks_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_n_landmarks_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_initShape_n_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_initShape_n_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_initShape_n_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_initShape_n_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_stages_n_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_stages_n_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_stages_n_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_stages_n_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_tree_n_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_tree_n_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_tree_n_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_tree_n_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_tree_depth_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_tree_depth_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_tree_depth_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_tree_depth_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_bagging_overlap_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_bagging_overlap_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_bagging_overlap_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_bagging_overlap_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_model_filename_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_model_filename_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_model_filename_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_model_filename_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_save_model_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_save_model_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_save_model_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_save_model_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_seed_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_seed_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_seed_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_seed_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_feats_m_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_feats_m_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_feats_m_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_feats_m_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_radius_m_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_radius_m_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_radius_m_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_radius_m_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_pupils0_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_pupils0_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_pupils0_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_pupils0_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_pupils1_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_pupils1_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_pupils1_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_pupils1_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_detectROI_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_detectROI_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_detectROI_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_detectROI_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_read' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_read'."
"Message",Normal,"          P/Invoke 'face_FacemarkLBF_Params_write' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkLBF_Params_write'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_create'."
"Message",Normal,"          P/Invoke 'face_Ptr_FacemarkAAM_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_Ptr_FacemarkAAM_get'."
"Message",Normal,"          P/Invoke 'face_Ptr_FacemarkAAM_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_Ptr_FacemarkAAM_delete'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_new'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_delete'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_model_filename_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_model_filename_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_model_filename_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_model_filename_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_m_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_m_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_m_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_m_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_n_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_n_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_n_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_n_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_n_iter_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_n_iter_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_n_iter_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_n_iter_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_verbose_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_verbose_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_verbose_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_verbose_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_save_model_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_save_model_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_save_model_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_save_model_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_max_m_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_max_m_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_max_m_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_max_m_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_max_n_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_max_n_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_max_n_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_max_n_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_texture_max_m_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_texture_max_m_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_texture_max_m_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_texture_max_m_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_scales_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_scales_get'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_scales_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_scales_set'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_read' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_read'."
"Message",Normal,"          P/Invoke 'face_FacemarkAAM_Params_write' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FacemarkAAM_Params_write'."
"Message",Normal,"          P/Invoke 'face_FaceRecognizer_train' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FaceRecognizer_train'."
"Message",Normal,"          P/Invoke 'face_FaceRecognizer_update' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FaceRecognizer_update'."
"Message",Normal,"          P/Invoke 'face_FaceRecognizer_predict1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FaceRecognizer_predict1'."
"Message",Normal,"          P/Invoke 'face_FaceRecognizer_predict2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FaceRecognizer_predict2'."
"Message",Normal,"          P/Invoke 'face_FaceRecognizer_write1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FaceRecognizer_write1'."
"Message",Normal,"          P/Invoke 'face_FaceRecognizer_read1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FaceRecognizer_read1'."
"Message",Normal,"          P/Invoke 'face_FaceRecognizer_write2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FaceRecognizer_write2'."
"Message",Normal,"          P/Invoke 'face_FaceRecognizer_read2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FaceRecognizer_read2'."
"Message",Normal,"          P/Invoke 'face_FaceRecognizer_setLabelInfo' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FaceRecognizer_setLabelInfo'."
"Message",Normal,"          P/Invoke 'face_FaceRecognizer_getLabelInfo' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FaceRecognizer_getLabelInfo'."
"Message",Normal,"          P/Invoke 'face_FaceRecognizer_getLabelsByString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FaceRecognizer_getLabelsByString'."
"Message",Normal,"          P/Invoke 'face_FaceRecognizer_getThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FaceRecognizer_getThreshold'."
"Message",Normal,"          P/Invoke 'face_FaceRecognizer_setThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FaceRecognizer_setThreshold'."
"Message",Normal,"          P/Invoke 'face_BasicFaceRecognizer_getNumComponents' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_BasicFaceRecognizer_getNumComponents'."
"Message",Normal,"          P/Invoke 'face_BasicFaceRecognizer_setNumComponents' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_BasicFaceRecognizer_setNumComponents'."
"Message",Normal,"          P/Invoke 'face_BasicFaceRecognizer_getThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_BasicFaceRecognizer_getThreshold'."
"Message",Normal,"          P/Invoke 'face_BasicFaceRecognizer_setThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_BasicFaceRecognizer_setThreshold'."
"Message",Normal,"          P/Invoke 'face_BasicFaceRecognizer_getProjections' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_BasicFaceRecognizer_getProjections'."
"Message",Normal,"          P/Invoke 'face_BasicFaceRecognizer_getLabels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_BasicFaceRecognizer_getLabels'."
"Message",Normal,"          P/Invoke 'face_BasicFaceRecognizer_getEigenValues' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_BasicFaceRecognizer_getEigenValues'."
"Message",Normal,"          P/Invoke 'face_BasicFaceRecognizer_getEigenVectors' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_BasicFaceRecognizer_getEigenVectors'."
"Message",Normal,"          P/Invoke 'face_BasicFaceRecognizer_getMean' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_BasicFaceRecognizer_getMean'."
"Message",Normal,"          P/Invoke 'face_EigenFaceRecognizer_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_EigenFaceRecognizer_create'."
"Message",Normal,"          P/Invoke 'face_Ptr_EigenFaceRecognizer_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_Ptr_EigenFaceRecognizer_get'."
"Message",Normal,"          P/Invoke 'face_Ptr_EigenFaceRecognizer_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_Ptr_EigenFaceRecognizer_delete'."
"Message",Normal,"          P/Invoke 'face_FisherFaceRecognizer_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_FisherFaceRecognizer_create'."
"Message",Normal,"          P/Invoke 'face_Ptr_FisherFaceRecognizer_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_Ptr_FisherFaceRecognizer_get'."
"Message",Normal,"          P/Invoke 'face_Ptr_FisherFaceRecognizer_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_Ptr_FisherFaceRecognizer_delete'."
"Message",Normal,"          P/Invoke 'face_LBPHFaceRecognizer_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_LBPHFaceRecognizer_create'."
"Message",Normal,"          P/Invoke 'face_LBPHFaceRecognizer_getGridX' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_LBPHFaceRecognizer_getGridX'."
"Message",Normal,"          P/Invoke 'face_LBPHFaceRecognizer_setGridX' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_LBPHFaceRecognizer_setGridX'."
"Message",Normal,"          P/Invoke 'face_LBPHFaceRecognizer_getGridY' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_LBPHFaceRecognizer_getGridY'."
"Message",Normal,"          P/Invoke 'face_LBPHFaceRecognizer_setGridY' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_LBPHFaceRecognizer_setGridY'."
"Message",Normal,"          P/Invoke 'face_LBPHFaceRecognizer_getRadius' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_LBPHFaceRecognizer_getRadius'."
"Message",Normal,"          P/Invoke 'face_LBPHFaceRecognizer_setRadius' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_LBPHFaceRecognizer_setRadius'."
"Message",Normal,"          P/Invoke 'face_LBPHFaceRecognizer_getNeighbors' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_LBPHFaceRecognizer_getNeighbors'."
"Message",Normal,"          P/Invoke 'face_LBPHFaceRecognizer_setNeighbors' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_LBPHFaceRecognizer_setNeighbors'."
"Message",Normal,"          P/Invoke 'face_LBPHFaceRecognizer_getThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_LBPHFaceRecognizer_getThreshold'."
"Message",Normal,"          P/Invoke 'face_LBPHFaceRecognizer_setThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_LBPHFaceRecognizer_setThreshold'."
"Message",Normal,"          P/Invoke 'face_LBPHFaceRecognizer_getHistograms' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_LBPHFaceRecognizer_getHistograms'."
"Message",Normal,"          P/Invoke 'face_LBPHFaceRecognizer_getLabels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_LBPHFaceRecognizer_getLabels'."
"Message",Normal,"          P/Invoke 'face_Ptr_LBPHFaceRecognizer_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_Ptr_LBPHFaceRecognizer_get'."
"Message",Normal,"          P/Invoke 'face_Ptr_LBPHFaceRecognizer_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!face_Ptr_LBPHFaceRecognizer_delete'."
"Message",Normal,"          P/Invoke 'features2d_drawKeypoints' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_drawKeypoints'."
"Message",Normal,"          P/Invoke 'features2d_drawMatches' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_drawMatches'."
"Message",Normal,"          P/Invoke 'features2d_drawMatchesKnn' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_drawMatchesKnn'."
"Message",Normal,"          P/Invoke 'features2d_evaluateFeatureDetector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_evaluateFeatureDetector'."
"Message",Normal,"          P/Invoke 'features2d_computeRecallPrecisionCurve' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_computeRecallPrecisionCurve'."
"Message",Normal,"          P/Invoke 'features2d_getRecall' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_getRecall'."
"Message",Normal,"          P/Invoke 'features2d_getNearestPoint' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_getNearestPoint'."
"Message",Normal,"          P/Invoke 'features2d_KeyPointsFilter_runByImageBorder' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KeyPointsFilter_runByImageBorder'."
"Message",Normal,"          P/Invoke 'features2d_KeyPointsFilter_runByKeypointSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KeyPointsFilter_runByKeypointSize'."
"Message",Normal,"          P/Invoke 'features2d_KeyPointsFilter_runByPixelsMask' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KeyPointsFilter_runByPixelsMask'."
"Message",Normal,"          P/Invoke 'features2d_KeyPointsFilter_removeDuplicated' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KeyPointsFilter_removeDuplicated'."
"Message",Normal,"          P/Invoke 'features2d_KeyPointsFilter_removeDuplicatedSorted' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KeyPointsFilter_removeDuplicatedSorted'."
"Message",Normal,"          P/Invoke 'features2d_KeyPointsFilter_retainBest' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KeyPointsFilter_retainBest'."
"Message",Normal,"          P/Invoke 'features2d_BOWTrainer_add' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWTrainer_add'."
"Message",Normal,"          P/Invoke 'features2d_BOWTrainer_getDescriptors' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWTrainer_getDescriptors'."
"Message",Normal,"          P/Invoke 'features2d_BOWTrainer_descriptorsCount' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWTrainer_descriptorsCount'."
"Message",Normal,"          P/Invoke 'features2d_BOWTrainer_clear' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWTrainer_clear'."
"Message",Normal,"          P/Invoke 'features2d_BOWKMeansTrainer_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWKMeansTrainer_new'."
"Message",Normal,"          P/Invoke 'features2d_BOWKMeansTrainer_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWKMeansTrainer_delete'."
"Message",Normal,"          P/Invoke 'features2d_BOWKMeansTrainer_cluster1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWKMeansTrainer_cluster1'."
"Message",Normal,"          P/Invoke 'features2d_BOWKMeansTrainer_cluster2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWKMeansTrainer_cluster2'."
"Message",Normal,"          P/Invoke 'features2d_BOWImgDescriptorExtractor_new1_Ptr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWImgDescriptorExtractor_new1_Ptr'."
"Message",Normal,"          P/Invoke 'features2d_BOWImgDescriptorExtractor_new2_Ptr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWImgDescriptorExtractor_new2_Ptr'."
"Message",Normal,"          P/Invoke 'features2d_BOWImgDescriptorExtractor_new1_RawPtr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWImgDescriptorExtractor_new1_RawPtr'."
"Message",Normal,"          P/Invoke 'features2d_BOWImgDescriptorExtractor_new2_RawPtr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWImgDescriptorExtractor_new2_RawPtr'."
"Message",Normal,"          P/Invoke 'features2d_BOWImgDescriptorExtractor_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWImgDescriptorExtractor_delete'."
"Message",Normal,"          P/Invoke 'features2d_BOWImgDescriptorExtractor_setVocabulary' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWImgDescriptorExtractor_setVocabulary'."
"Message",Normal,"          P/Invoke 'features2d_BOWImgDescriptorExtractor_getVocabulary' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWImgDescriptorExtractor_getVocabulary'."
"Message",Normal,"          P/Invoke 'features2d_BOWImgDescriptorExtractor_compute11' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWImgDescriptorExtractor_compute11'."
"Message",Normal,"          P/Invoke 'features2d_BOWImgDescriptorExtractor_compute12' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWImgDescriptorExtractor_compute12'."
"Message",Normal,"          P/Invoke 'features2d_BOWImgDescriptorExtractor_compute2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWImgDescriptorExtractor_compute2'."
"Message",Normal,"          P/Invoke 'features2d_BOWImgDescriptorExtractor_descriptorSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWImgDescriptorExtractor_descriptorSize'."
"Message",Normal,"          P/Invoke 'features2d_BOWImgDescriptorExtractor_descriptorType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BOWImgDescriptorExtractor_descriptorType'."
"Message",Normal,"          P/Invoke 'features2d_DescriptorMatcher_add' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_DescriptorMatcher_add'."
"Message",Normal,"          P/Invoke 'features2d_DescriptorMatcher_getTrainDescriptors' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_DescriptorMatcher_getTrainDescriptors'."
"Message",Normal,"          P/Invoke 'features2d_DescriptorMatcher_clear' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_DescriptorMatcher_clear'."
"Message",Normal,"          P/Invoke 'features2d_DescriptorMatcher_empty' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_DescriptorMatcher_empty'."
"Message",Normal,"          P/Invoke 'features2d_DescriptorMatcher_isMaskSupported' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_DescriptorMatcher_isMaskSupported'."
"Message",Normal,"          P/Invoke 'features2d_DescriptorMatcher_train' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_DescriptorMatcher_train'."
"Message",Normal,"          P/Invoke 'features2d_DescriptorMatcher_match1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_DescriptorMatcher_match1'."
"Message",Normal,"          P/Invoke 'features2d_DescriptorMatcher_knnMatch1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_DescriptorMatcher_knnMatch1'."
"Message",Normal,"          P/Invoke 'features2d_DescriptorMatcher_radiusMatch1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_DescriptorMatcher_radiusMatch1'."
"Message",Normal,"          P/Invoke 'features2d_DescriptorMatcher_match2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_DescriptorMatcher_match2'."
"Message",Normal,"          P/Invoke 'features2d_DescriptorMatcher_knnMatch2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_DescriptorMatcher_knnMatch2'."
"Message",Normal,"          P/Invoke 'features2d_DescriptorMatcher_radiusMatch2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_DescriptorMatcher_radiusMatch2'."
"Message",Normal,"          P/Invoke 'features2d_DescriptorMatcher_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_DescriptorMatcher_create'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_DescriptorMatcher_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_DescriptorMatcher_get'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_DescriptorMatcher_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_DescriptorMatcher_delete'."
"Message",Normal,"          P/Invoke 'features2d_BFMatcher_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BFMatcher_new'."
"Message",Normal,"          P/Invoke 'features2d_BFMatcher_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BFMatcher_delete'."
"Message",Normal,"          P/Invoke 'features2d_BFMatcher_isMaskSupported' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BFMatcher_isMaskSupported'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_BFMatcher_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_BFMatcher_get'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_BFMatcher_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_BFMatcher_delete'."
"Message",Normal,"          P/Invoke 'features2d_FlannBasedMatcher_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_FlannBasedMatcher_new'."
"Message",Normal,"          P/Invoke 'features2d_FlannBasedMatcher_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_FlannBasedMatcher_delete'."
"Message",Normal,"          P/Invoke 'features2d_FlannBasedMatcher_add' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_FlannBasedMatcher_add'."
"Message",Normal,"          P/Invoke 'features2d_FlannBasedMatcher_clear' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_FlannBasedMatcher_clear'."
"Message",Normal,"          P/Invoke 'features2d_FlannBasedMatcher_train' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_FlannBasedMatcher_train'."
"Message",Normal,"          P/Invoke 'features2d_FlannBasedMatcher_isMaskSupported' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_FlannBasedMatcher_isMaskSupported'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_FlannBasedMatcher_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_FlannBasedMatcher_get'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_FlannBasedMatcher_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_FlannBasedMatcher_delete'."
"Message",Normal,"          P/Invoke 'features2d_Feature2D_detect_Mat1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Feature2D_detect_Mat1'."
"Message",Normal,"          P/Invoke 'features2d_Feature2D_detect_Mat2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Feature2D_detect_Mat2'."
"Message",Normal,"          P/Invoke 'features2d_Feature2D_detect_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Feature2D_detect_InputArray'."
"Message",Normal,"          P/Invoke 'features2d_Feature2D_compute1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Feature2D_compute1'."
"Message",Normal,"          P/Invoke 'features2d_Feature2D_compute2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Feature2D_compute2'."
"Message",Normal,"          P/Invoke 'features2d_Feature2D_detectAndCompute' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Feature2D_detectAndCompute'."
"Message",Normal,"          P/Invoke 'features2d_Feature2D_descriptorSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Feature2D_descriptorSize'."
"Message",Normal,"          P/Invoke 'features2d_Feature2D_descriptorType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Feature2D_descriptorType'."
"Message",Normal,"          P/Invoke 'features2d_Feature2D_defaultNorm' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Feature2D_defaultNorm'."
"Message",Normal,"          P/Invoke 'features2d_Feature2D_empty' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Feature2D_empty'."
"Message",Normal,"          P/Invoke 'features2d_Feature2D_write' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Feature2D_write'."
"Message",Normal,"          P/Invoke 'features2d_Feature2D_read' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Feature2D_read'."
"Message",Normal,"          P/Invoke 'features2d_Feature2D_getDefaultName' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Feature2D_getDefaultName'."
"Message",Normal,"          P/Invoke 'features2d_SIFT_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_SIFT_create'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_SIFT_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_SIFT_delete'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_SIFT_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_SIFT_get'."
"Message",Normal,"          P/Invoke 'features2d_BRISK_create1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BRISK_create1'."
"Message",Normal,"          P/Invoke 'features2d_BRISK_create2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BRISK_create2'."
"Message",Normal,"          P/Invoke 'features2d_BRISK_create3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_BRISK_create3'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_BRISK_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_BRISK_delete'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_BRISK_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_BRISK_get'."
"Message",Normal,"          P/Invoke 'features2d_ORB_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_create'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_ORB_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_ORB_delete'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_ORB_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_ORB_get'."
"Message",Normal,"          P/Invoke 'features2d_ORB_setMaxFeatures' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_setMaxFeatures'."
"Message",Normal,"          P/Invoke 'features2d_ORB_getMaxFeatures' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_getMaxFeatures'."
"Message",Normal,"          P/Invoke 'features2d_ORB_setScaleFactor' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_setScaleFactor'."
"Message",Normal,"          P/Invoke 'features2d_ORB_getScaleFactor' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_getScaleFactor'."
"Message",Normal,"          P/Invoke 'features2d_ORB_setNLevels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_setNLevels'."
"Message",Normal,"          P/Invoke 'features2d_ORB_getNLevels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_getNLevels'."
"Message",Normal,"          P/Invoke 'features2d_ORB_setEdgeThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_setEdgeThreshold'."
"Message",Normal,"          P/Invoke 'features2d_ORB_getEdgeThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_getEdgeThreshold'."
"Message",Normal,"          P/Invoke 'features2d_ORB_setFirstLevel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_setFirstLevel'."
"Message",Normal,"          P/Invoke 'features2d_ORB_getFirstLevel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_getFirstLevel'."
"Message",Normal,"          P/Invoke 'features2d_ORB_setWTA_K' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_setWTA_K'."
"Message",Normal,"          P/Invoke 'features2d_ORB_getWTA_K' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_getWTA_K'."
"Message",Normal,"          P/Invoke 'features2d_ORB_setScoreType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_setScoreType'."
"Message",Normal,"          P/Invoke 'features2d_ORB_getScoreType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_getScoreType'."
"Message",Normal,"          P/Invoke 'features2d_ORB_setPatchSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_setPatchSize'."
"Message",Normal,"          P/Invoke 'features2d_ORB_getPatchSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_getPatchSize'."
"Message",Normal,"          P/Invoke 'features2d_ORB_setFastThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_setFastThreshold'."
"Message",Normal,"          P/Invoke 'features2d_ORB_getFastThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_ORB_getFastThreshold'."
"Message",Normal,"          P/Invoke 'features2d_MSER_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_MSER_create'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_MSER_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_MSER_delete'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_MSER_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_MSER_get'."
"Message",Normal,"          P/Invoke 'features2d_MSER_detectRegions' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_MSER_detectRegions'."
"Message",Normal,"          P/Invoke 'features2d_MSER_setDelta' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_MSER_setDelta'."
"Message",Normal,"          P/Invoke 'features2d_MSER_getDelta' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_MSER_getDelta'."
"Message",Normal,"          P/Invoke 'features2d_MSER_setMinArea' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_MSER_setMinArea'."
"Message",Normal,"          P/Invoke 'features2d_MSER_getMinArea' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_MSER_getMinArea'."
"Message",Normal,"          P/Invoke 'features2d_MSER_setMaxArea' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_MSER_setMaxArea'."
"Message",Normal,"          P/Invoke 'features2d_MSER_getMaxArea' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_MSER_getMaxArea'."
"Message",Normal,"          P/Invoke 'features2d_MSER_setPass2Only' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_MSER_setPass2Only'."
"Message",Normal,"          P/Invoke 'features2d_MSER_getPass2Only' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_MSER_getPass2Only'."
"Message",Normal,"          P/Invoke 'features2d_FAST1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_FAST1'."
"Message",Normal,"          P/Invoke 'features2d_FAST2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_FAST2'."
"Message",Normal,"          P/Invoke 'features2d_FastFeatureDetector_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_FastFeatureDetector_create'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_FastFeatureDetector_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_FastFeatureDetector_delete'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_FastFeatureDetector_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_FastFeatureDetector_get'."
"Message",Normal,"          P/Invoke 'features2d_FastFeatureDetector_setThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_FastFeatureDetector_setThreshold'."
"Message",Normal,"          P/Invoke 'features2d_FastFeatureDetector_getThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_FastFeatureDetector_getThreshold'."
"Message",Normal,"          P/Invoke 'features2d_FastFeatureDetector_setNonmaxSuppression' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_FastFeatureDetector_setNonmaxSuppression'."
"Message",Normal,"          P/Invoke 'features2d_FastFeatureDetector_getNonmaxSuppression' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_FastFeatureDetector_getNonmaxSuppression'."
"Message",Normal,"          P/Invoke 'features2d_FastFeatureDetector_setType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_FastFeatureDetector_setType'."
"Message",Normal,"          P/Invoke 'features2d_FastFeatureDetector_getType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_FastFeatureDetector_getType'."
"Message",Normal,"          P/Invoke 'features2d_AGAST' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AGAST'."
"Message",Normal,"          P/Invoke 'features2d_AgastFeatureDetector_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AgastFeatureDetector_create'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_AgastFeatureDetector_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_AgastFeatureDetector_delete'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_AgastFeatureDetector_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_AgastFeatureDetector_get'."
"Message",Normal,"          P/Invoke 'features2d_AgastFeatureDetector_setThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AgastFeatureDetector_setThreshold'."
"Message",Normal,"          P/Invoke 'features2d_AgastFeatureDetector_getThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AgastFeatureDetector_getThreshold'."
"Message",Normal,"          P/Invoke 'features2d_AgastFeatureDetector_setNonmaxSuppression' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AgastFeatureDetector_setNonmaxSuppression'."
"Message",Normal,"          P/Invoke 'features2d_AgastFeatureDetector_getNonmaxSuppression' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AgastFeatureDetector_getNonmaxSuppression'."
"Message",Normal,"          P/Invoke 'features2d_AgastFeatureDetector_setType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AgastFeatureDetector_setType'."
"Message",Normal,"          P/Invoke 'features2d_AgastFeatureDetector_getType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AgastFeatureDetector_getType'."
"Message",Normal,"          P/Invoke 'features2d_GFTTDetector_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_GFTTDetector_create'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_GFTTDetector_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_GFTTDetector_get'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_GFTTDetector_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_GFTTDetector_delete'."
"Message",Normal,"          P/Invoke 'features2d_GFTTDetector_setMaxFeatures' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_GFTTDetector_setMaxFeatures'."
"Message",Normal,"          P/Invoke 'features2d_GFTTDetector_getMaxFeatures' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_GFTTDetector_getMaxFeatures'."
"Message",Normal,"          P/Invoke 'features2d_GFTTDetector_setQualityLevel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_GFTTDetector_setQualityLevel'."
"Message",Normal,"          P/Invoke 'features2d_GFTTDetector_getQualityLevel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_GFTTDetector_getQualityLevel'."
"Message",Normal,"          P/Invoke 'features2d_GFTTDetector_setMinDistance' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_GFTTDetector_setMinDistance'."
"Message",Normal,"          P/Invoke 'features2d_GFTTDetector_getMinDistance' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_GFTTDetector_getMinDistance'."
"Message",Normal,"          P/Invoke 'features2d_GFTTDetector_setBlockSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_GFTTDetector_setBlockSize'."
"Message",Normal,"          P/Invoke 'features2d_GFTTDetector_getBlockSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_GFTTDetector_getBlockSize'."
"Message",Normal,"          P/Invoke 'features2d_GFTTDetector_setHarrisDetector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_GFTTDetector_setHarrisDetector'."
"Message",Normal,"          P/Invoke 'features2d_GFTTDetector_getHarrisDetector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_GFTTDetector_getHarrisDetector'."
"Message",Normal,"          P/Invoke 'features2d_GFTTDetector_setK' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_GFTTDetector_setK'."
"Message",Normal,"          P/Invoke 'features2d_GFTTDetector_getK' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_GFTTDetector_getK'."
"Message",Normal,"          P/Invoke 'features2d_SimpleBlobDetector_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_SimpleBlobDetector_create'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_SimpleBlobDetector_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_SimpleBlobDetector_delete'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_SimpleBlobDetector_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_SimpleBlobDetector_get'."
"Message",Normal,"          P/Invoke 'features2d_KAZE_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KAZE_create'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_KAZE_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_KAZE_delete'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_KAZE_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_KAZE_get'."
"Message",Normal,"          P/Invoke 'features2d_KAZE_setDiffusivity' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KAZE_setDiffusivity'."
"Message",Normal,"          P/Invoke 'features2d_KAZE_getDiffusivity' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KAZE_getDiffusivity'."
"Message",Normal,"          P/Invoke 'features2d_KAZE_setExtended' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KAZE_setExtended'."
"Message",Normal,"          P/Invoke 'features2d_KAZE_getExtended' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KAZE_getExtended'."
"Message",Normal,"          P/Invoke 'features2d_KAZE_setNOctaveLayers' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KAZE_setNOctaveLayers'."
"Message",Normal,"          P/Invoke 'features2d_KAZE_getNOctaveLayers' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KAZE_getNOctaveLayers'."
"Message",Normal,"          P/Invoke 'features2d_KAZE_setNOctaves' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KAZE_setNOctaves'."
"Message",Normal,"          P/Invoke 'features2d_KAZE_getNOctaves' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KAZE_getNOctaves'."
"Message",Normal,"          P/Invoke 'features2d_KAZE_setThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KAZE_setThreshold'."
"Message",Normal,"          P/Invoke 'features2d_KAZE_getThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KAZE_getThreshold'."
"Message",Normal,"          P/Invoke 'features2d_KAZE_setUpright' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KAZE_setUpright'."
"Message",Normal,"          P/Invoke 'features2d_KAZE_getUpright' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_KAZE_getUpright'."
"Message",Normal,"          P/Invoke 'features2d_AKAZE_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AKAZE_create'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_AKAZE_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_AKAZE_delete'."
"Message",Normal,"          P/Invoke 'features2d_Ptr_AKAZE_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_Ptr_AKAZE_get'."
"Message",Normal,"          P/Invoke 'features2d_AKAZE_setDescriptorType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AKAZE_setDescriptorType'."
"Message",Normal,"          P/Invoke 'features2d_AKAZE_getDescriptorType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AKAZE_getDescriptorType'."
"Message",Normal,"          P/Invoke 'features2d_AKAZE_setDescriptorSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AKAZE_setDescriptorSize'."
"Message",Normal,"          P/Invoke 'features2d_AKAZE_getDescriptorSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AKAZE_getDescriptorSize'."
"Message",Normal,"          P/Invoke 'features2d_AKAZE_setDescriptorChannels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AKAZE_setDescriptorChannels'."
"Message",Normal,"          P/Invoke 'features2d_AKAZE_getDescriptorChannels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AKAZE_getDescriptorChannels'."
"Message",Normal,"          P/Invoke 'features2d_AKAZE_setThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AKAZE_setThreshold'."
"Message",Normal,"          P/Invoke 'features2d_AKAZE_getThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AKAZE_getThreshold'."
"Message",Normal,"          P/Invoke 'features2d_AKAZE_setNOctaves' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AKAZE_setNOctaves'."
"Message",Normal,"          P/Invoke 'features2d_AKAZE_getNOctaves' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AKAZE_getNOctaves'."
"Message",Normal,"          P/Invoke 'features2d_AKAZE_setNOctaveLayers' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AKAZE_setNOctaveLayers'."
"Message",Normal,"          P/Invoke 'features2d_AKAZE_getNOctaveLayers' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AKAZE_getNOctaveLayers'."
"Message",Normal,"          P/Invoke 'features2d_AKAZE_setDiffusivity' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AKAZE_setDiffusivity'."
"Message",Normal,"          P/Invoke 'features2d_AKAZE_getDiffusivity' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!features2d_AKAZE_getDiffusivity'."
"Message",Normal,"          P/Invoke 'imgproc_getGaussianKernel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_getGaussianKernel'."
"Message",Normal,"          P/Invoke 'imgproc_getDerivKernels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_getDerivKernels'."
"Message",Normal,"          P/Invoke 'imgproc_getGaborKernel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_getGaborKernel'."
"Message",Normal,"          P/Invoke 'imgproc_getStructuringElement' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_getStructuringElement'."
"Message",Normal,"          P/Invoke 'imgproc_medianBlur' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_medianBlur'."
"Message",Normal,"          P/Invoke 'imgproc_GaussianBlur' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GaussianBlur'."
"Message",Normal,"          P/Invoke 'imgproc_bilateralFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_bilateralFilter'."
"Message",Normal,"          P/Invoke 'imgproc_boxFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_boxFilter'."
"Message",Normal,"          P/Invoke 'imgproc_sqrBoxFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_sqrBoxFilter'."
"Message",Normal,"          P/Invoke 'imgproc_blur' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_blur'."
"Message",Normal,"          P/Invoke 'imgproc_filter2D' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_filter2D'."
"Message",Normal,"          P/Invoke 'imgproc_sepFilter2D' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_sepFilter2D'."
"Message",Normal,"          P/Invoke 'imgproc_Sobel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Sobel'."
"Message",Normal,"          P/Invoke 'imgproc_spatialGradient' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_spatialGradient'."
"Message",Normal,"          P/Invoke 'imgproc_Scharr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Scharr'."
"Message",Normal,"          P/Invoke 'imgproc_Laplacian' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Laplacian'."
"Message",Normal,"          P/Invoke 'imgproc_Canny1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Canny1'."
"Message",Normal,"          P/Invoke 'imgproc_Canny2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Canny2'."
"Message",Normal,"          P/Invoke 'imgproc_cornerMinEigenVal' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_cornerMinEigenVal'."
"Message",Normal,"          P/Invoke 'imgproc_cornerHarris' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_cornerHarris'."
"Message",Normal,"          P/Invoke 'imgproc_cornerEigenValsAndVecs' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_cornerEigenValsAndVecs'."
"Message",Normal,"          P/Invoke 'imgproc_preCornerDetect' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_preCornerDetect'."
"Message",Normal,"          P/Invoke 'imgproc_cornerSubPix' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_cornerSubPix'."
"Message",Normal,"          P/Invoke 'imgproc_goodFeaturesToTrack' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_goodFeaturesToTrack'."
"Message",Normal,"          P/Invoke 'imgproc_HoughLines' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_HoughLines'."
"Message",Normal,"          P/Invoke 'imgproc_HoughLinesP' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_HoughLinesP'."
"Message",Normal,"          P/Invoke 'imgproc_HoughLinesPointSet' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_HoughLinesPointSet'."
"Message",Normal,"          P/Invoke 'imgproc_HoughCircles' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_HoughCircles'."
"Message",Normal,"          P/Invoke 'imgproc_erode' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_erode'."
"Message",Normal,"          P/Invoke 'imgproc_dilate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_dilate'."
"Message",Normal,"          P/Invoke 'imgproc_morphologyEx' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_morphologyEx'."
"Message",Normal,"          P/Invoke 'imgproc_resize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_resize'."
"Message",Normal,"          P/Invoke 'imgproc_warpAffine' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_warpAffine'."
"Message",Normal,"          P/Invoke 'imgproc_warpPerspective_MisInputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_warpPerspective_MisInputArray'."
"Message",Normal,"          P/Invoke 'imgproc_warpPerspective_MisArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_warpPerspective_MisArray'."
"Message",Normal,"          P/Invoke 'imgproc_remap' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_remap'."
"Message",Normal,"          P/Invoke 'imgproc_convertMaps' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_convertMaps'."
"Message",Normal,"          P/Invoke 'imgproc_getRotationMatrix2D' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_getRotationMatrix2D'."
"Message",Normal,"          P/Invoke 'imgproc_invertAffineTransform' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_invertAffineTransform'."
"Message",Normal,"          P/Invoke 'imgproc_getPerspectiveTransform1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_getPerspectiveTransform1'."
"Message",Normal,"          P/Invoke 'imgproc_getPerspectiveTransform2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_getPerspectiveTransform2'."
"Message",Normal,"          P/Invoke 'imgproc_getAffineTransform1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_getAffineTransform1'."
"Message",Normal,"          P/Invoke 'imgproc_getAffineTransform2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_getAffineTransform2'."
"Message",Normal,"          P/Invoke 'imgproc_getRectSubPix' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_getRectSubPix'."
"Message",Normal,"          P/Invoke 'imgproc_logPolar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_logPolar'."
"Message",Normal,"          P/Invoke 'imgproc_linearPolar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_linearPolar'."
"Message",Normal,"          P/Invoke 'imgproc_warpPolar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_warpPolar'."
"Message",Normal,"          P/Invoke 'imgproc_integral1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_integral1'."
"Message",Normal,"          P/Invoke 'imgproc_integral2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_integral2'."
"Message",Normal,"          P/Invoke 'imgproc_integral3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_integral3'."
"Message",Normal,"          P/Invoke 'imgproc_accumulate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_accumulate'."
"Message",Normal,"          P/Invoke 'imgproc_accumulateSquare' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_accumulateSquare'."
"Message",Normal,"          P/Invoke 'imgproc_accumulateProduct' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_accumulateProduct'."
"Message",Normal,"          P/Invoke 'imgproc_accumulateWeighted' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_accumulateWeighted'."
"Message",Normal,"          P/Invoke 'imgproc_phaseCorrelate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_phaseCorrelate'."
"Message",Normal,"          P/Invoke 'imgproc_createHanningWindow' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_createHanningWindow'."
"Message",Normal,"          P/Invoke 'imgproc_threshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_threshold'."
"Message",Normal,"          P/Invoke 'imgproc_adaptiveThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_adaptiveThreshold'."
"Message",Normal,"          P/Invoke 'imgproc_pyrDown' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_pyrDown'."
"Message",Normal,"          P/Invoke 'imgproc_buildPyramid' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_buildPyramid'."
"Message",Normal,"          P/Invoke 'imgproc_pyrUp' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_pyrUp'."
"Message",Normal,"          P/Invoke 'imgproc_calcHist' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_calcHist'."
"Message",Normal,"          P/Invoke 'imgproc_calcBackProject' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_calcBackProject'."
"Message",Normal,"          P/Invoke 'imgproc_compareHist' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_compareHist'."
"Message",Normal,"          P/Invoke 'imgproc_equalizeHist' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_equalizeHist'."
"Message",Normal,"          P/Invoke 'imgproc_EMD' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_EMD'."
"Message",Normal,"          P/Invoke 'imgproc_watershed' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_watershed'."
"Message",Normal,"          P/Invoke 'imgproc_pyrMeanShiftFiltering' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_pyrMeanShiftFiltering'."
"Message",Normal,"          P/Invoke 'imgproc_grabCut' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_grabCut'."
"Message",Normal,"          P/Invoke 'imgproc_distanceTransformWithLabels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_distanceTransformWithLabels'."
"Message",Normal,"          P/Invoke 'imgproc_distanceTransform' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_distanceTransform'."
"Message",Normal,"          P/Invoke 'imgproc_floodFill1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_floodFill1'."
"Message",Normal,"          P/Invoke 'imgproc_floodFill2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_floodFill2'."
"Message",Normal,"          P/Invoke 'imgproc_blendLinear' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_blendLinear'."
"Message",Normal,"          P/Invoke 'imgproc_cvtColor' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_cvtColor'."
"Message",Normal,"          P/Invoke 'imgproc_cvtColorTwoPlane' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_cvtColorTwoPlane'."
"Message",Normal,"          P/Invoke 'imgproc_demosaicing' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_demosaicing'."
"Message",Normal,"          P/Invoke 'imgproc_moments' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_moments'."
"Message",Normal,"          P/Invoke 'imgproc_matchTemplate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_matchTemplate'."
"Message",Normal,"          P/Invoke 'imgproc_connectedComponentsWithAlgorithm' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_connectedComponentsWithAlgorithm'."
"Message",Normal,"          P/Invoke 'imgproc_connectedComponents' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_connectedComponents'."
"Message",Normal,"          P/Invoke 'imgproc_connectedComponentsWithStatsWithAlgorithm' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_connectedComponentsWithStatsWithAlgorithm'."
"Message",Normal,"          P/Invoke 'imgproc_connectedComponentsWithStats' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_connectedComponentsWithStats'."
"Message",Normal,"          P/Invoke 'imgproc_findContours1_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_findContours1_vector'."
"Message",Normal,"          P/Invoke 'imgproc_findContours1_OutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_findContours1_OutputArray'."
"Message",Normal,"          P/Invoke 'imgproc_findContours2_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_findContours2_vector'."
"Message",Normal,"          P/Invoke 'imgproc_findContours2_OutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_findContours2_OutputArray'."
"Message",Normal,"          P/Invoke 'imgproc_approxPolyDP_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_approxPolyDP_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_approxPolyDP_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_approxPolyDP_Point'."
"Message",Normal,"          P/Invoke 'imgproc_approxPolyDP_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_approxPolyDP_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_arcLength_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_arcLength_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_arcLength_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_arcLength_Point'."
"Message",Normal,"          P/Invoke 'imgproc_arcLength_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_arcLength_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_boundingRect_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_boundingRect_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_boundingRect_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_boundingRect_Point'."
"Message",Normal,"          P/Invoke 'imgproc_boundingRect_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_boundingRect_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_contourArea_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_contourArea_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_contourArea_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_contourArea_Point'."
"Message",Normal,"          P/Invoke 'imgproc_contourArea_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_contourArea_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_minAreaRect_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_minAreaRect_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_minAreaRect_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_minAreaRect_Point'."
"Message",Normal,"          P/Invoke 'imgproc_minAreaRect_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_minAreaRect_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_boxPoints_OutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_boxPoints_OutputArray'."
"Message",Normal,"          P/Invoke 'imgproc_boxPoints_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_boxPoints_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_minEnclosingCircle_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_minEnclosingCircle_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_minEnclosingCircle_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_minEnclosingCircle_Point'."
"Message",Normal,"          P/Invoke 'imgproc_minEnclosingCircle_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_minEnclosingCircle_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_minEnclosingTriangle_InputOutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_minEnclosingTriangle_InputOutputArray'."
"Message",Normal,"          P/Invoke 'imgproc_minEnclosingTriangle_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_minEnclosingTriangle_Point'."
"Message",Normal,"          P/Invoke 'imgproc_minEnclosingTriangle_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_minEnclosingTriangle_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_matchShapes_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_matchShapes_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_matchShapes_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_matchShapes_Point'."
"Message",Normal,"          P/Invoke 'imgproc_convexHull_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_convexHull_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_convexHull_Point_ReturnsPoints' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_convexHull_Point_ReturnsPoints'."
"Message",Normal,"          P/Invoke 'imgproc_convexHull_Point2f_ReturnsPoints' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_convexHull_Point2f_ReturnsPoints'."
"Message",Normal,"          P/Invoke 'imgproc_convexHull_Point_ReturnsIndices' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_convexHull_Point_ReturnsIndices'."
"Message",Normal,"          P/Invoke 'imgproc_convexHull_Point2f_ReturnsIndices' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_convexHull_Point2f_ReturnsIndices'."
"Message",Normal,"          P/Invoke 'imgproc_convexityDefects_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_convexityDefects_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_convexityDefects_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_convexityDefects_Point'."
"Message",Normal,"          P/Invoke 'imgproc_convexityDefects_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_convexityDefects_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_isContourConvex_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_isContourConvex_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_isContourConvex_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_isContourConvex_Point'."
"Message",Normal,"          P/Invoke 'imgproc_isContourConvex_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_isContourConvex_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_intersectConvexConvex_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_intersectConvexConvex_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_intersectConvexConvex_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_intersectConvexConvex_Point'."
"Message",Normal,"          P/Invoke 'imgproc_intersectConvexConvex_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_intersectConvexConvex_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_fitEllipse_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fitEllipse_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_fitEllipse_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fitEllipse_Point'."
"Message",Normal,"          P/Invoke 'imgproc_fitEllipse_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fitEllipse_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_fitEllipseAMS_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fitEllipseAMS_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_fitEllipseAMS_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fitEllipseAMS_Point'."
"Message",Normal,"          P/Invoke 'imgproc_fitEllipseAMS_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fitEllipseAMS_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_fitEllipseDirect_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fitEllipseDirect_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_fitEllipseDirect_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fitEllipseDirect_Point'."
"Message",Normal,"          P/Invoke 'imgproc_fitEllipseDirect_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fitEllipseDirect_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_fitLine_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fitLine_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_fitLine_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fitLine_Point'."
"Message",Normal,"          P/Invoke 'imgproc_fitLine_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fitLine_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_fitLine_Point3i' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fitLine_Point3i'."
"Message",Normal,"          P/Invoke 'imgproc_fitLine_Point3f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fitLine_Point3f'."
"Message",Normal,"          P/Invoke 'imgproc_pointPolygonTest_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_pointPolygonTest_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_pointPolygonTest_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_pointPolygonTest_Point'."
"Message",Normal,"          P/Invoke 'imgproc_pointPolygonTest_Point2f' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_pointPolygonTest_Point2f'."
"Message",Normal,"          P/Invoke 'imgproc_rotatedRectangleIntersection_OutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_rotatedRectangleIntersection_OutputArray'."
"Message",Normal,"          P/Invoke 'imgproc_rotatedRectangleIntersection_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_rotatedRectangleIntersection_vector'."
"Message",Normal,"          P/Invoke 'imgproc_applyColorMap1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_applyColorMap1'."
"Message",Normal,"          P/Invoke 'imgproc_applyColorMap2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_applyColorMap2'."
"Message",Normal,"          P/Invoke 'imgproc_line' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_line'."
"Message",Normal,"          P/Invoke 'imgproc_arrowedLine' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_arrowedLine'."
"Message",Normal,"          P/Invoke 'imgproc_rectangle_InputOutputArray_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_rectangle_InputOutputArray_Point'."
"Message",Normal,"          P/Invoke 'imgproc_rectangle_InputOutputArray_Rect' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_rectangle_InputOutputArray_Rect'."
"Message",Normal,"          P/Invoke 'imgproc_rectangle_Mat_Point' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_rectangle_Mat_Point'."
"Message",Normal,"          P/Invoke 'imgproc_rectangle_Mat_Rect' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_rectangle_Mat_Rect'."
"Message",Normal,"          P/Invoke 'imgproc_circle' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_circle'."
"Message",Normal,"          P/Invoke 'imgproc_ellipse1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_ellipse1'."
"Message",Normal,"          P/Invoke 'imgproc_ellipse2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_ellipse2'."
"Message",Normal,"          P/Invoke 'imgproc_drawMarker' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_drawMarker'."
"Message",Normal,"          P/Invoke 'imgproc_fillConvexPoly_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fillConvexPoly_Mat'."
"Message",Normal,"          P/Invoke 'imgproc_fillConvexPoly_InputOutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fillConvexPoly_InputOutputArray'."
"Message",Normal,"          P/Invoke 'imgproc_fillPoly_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fillPoly_Mat'."
"Message",Normal,"          P/Invoke 'imgproc_fillPoly_InputOutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_fillPoly_InputOutputArray'."
"Message",Normal,"          P/Invoke 'imgproc_polylines_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_polylines_Mat'."
"Message",Normal,"          P/Invoke 'imgproc_polylines_InputOutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_polylines_InputOutputArray'."
"Message",Normal,"          P/Invoke 'imgproc_drawContours_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_drawContours_vector'."
"Message",Normal,"          P/Invoke 'imgproc_drawContours_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_drawContours_vector'."
"Message",Normal,"          P/Invoke 'imgproc_drawContours_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_drawContours_InputArray'."
"Message",Normal,"          P/Invoke 'imgproc_clipLine1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_clipLine1'."
"Message",Normal,"          P/Invoke 'imgproc_clipLine2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_clipLine2'."
"Message",Normal,"          P/Invoke 'imgproc_ellipse2Poly_int' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_ellipse2Poly_int'."
"Message",Normal,"          P/Invoke 'imgproc_ellipse2Poly_double' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_ellipse2Poly_double'."
"Message",Normal,"          P/Invoke 'imgproc_putText' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_putText'."
"Message",Normal,"          P/Invoke 'imgproc_getTextSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_getTextSize'."
"Message",Normal,"          P/Invoke 'imgproc_getFontScaleFromHeight' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_getFontScaleFromHeight'."
"Message",Normal,"          P/Invoke 'imgproc_createCLAHE' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_createCLAHE'."
"Message",Normal,"          P/Invoke 'imgproc_Ptr_CLAHE_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Ptr_CLAHE_delete'."
"Message",Normal,"          P/Invoke 'imgproc_Ptr_CLAHE_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Ptr_CLAHE_get'."
"Message",Normal,"          P/Invoke 'imgproc_CLAHE_apply' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_CLAHE_apply'."
"Message",Normal,"          P/Invoke 'imgproc_CLAHE_setClipLimit' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_CLAHE_setClipLimit'."
"Message",Normal,"          P/Invoke 'imgproc_CLAHE_getClipLimit' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_CLAHE_getClipLimit'."
"Message",Normal,"          P/Invoke 'imgproc_CLAHE_setTilesGridSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_CLAHE_setTilesGridSize'."
"Message",Normal,"          P/Invoke 'imgproc_CLAHE_getTilesGridSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_CLAHE_getTilesGridSize'."
"Message",Normal,"          P/Invoke 'imgproc_CLAHE_collectGarbage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_CLAHE_collectGarbage'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHough_setTemplate1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHough_setTemplate1'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHough_setTemplate2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHough_setTemplate2'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHough_detect1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHough_detect1'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHough_detect2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHough_detect2'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHough_setCannyLowThresh' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHough_setCannyLowThresh'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHough_getCannyLowThresh' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHough_getCannyLowThresh'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHough_setCannyHighThresh' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHough_setCannyHighThresh'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHough_getCannyHighThresh' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHough_getCannyHighThresh'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHough_setMinDist' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHough_setMinDist'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHough_getMinDist' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHough_getMinDist'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHough_setDp' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHough_setDp'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHough_getDp' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHough_getDp'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHough_setMaxBufferSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHough_setMaxBufferSize'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHough_getMaxBufferSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHough_getMaxBufferSize'."
"Message",Normal,"          P/Invoke 'imgproc_createGeneralizedHoughBallard' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_createGeneralizedHoughBallard'."
"Message",Normal,"          P/Invoke 'imgproc_Ptr_GeneralizedHoughBallard_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Ptr_GeneralizedHoughBallard_get'."
"Message",Normal,"          P/Invoke 'imgproc_Ptr_GeneralizedHoughBallard_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Ptr_GeneralizedHoughBallard_delete'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughBallard_setLevels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughBallard_setLevels'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughBallard_getLevels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughBallard_getLevels'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughBallard_setVotesThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughBallard_setVotesThreshold'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughBallard_getVotesThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughBallard_getVotesThreshold'."
"Message",Normal,"          P/Invoke 'imgproc_createGeneralizedHoughGuil' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_createGeneralizedHoughGuil'."
"Message",Normal,"          P/Invoke 'imgproc_Ptr_GeneralizedHoughGuil_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Ptr_GeneralizedHoughGuil_get'."
"Message",Normal,"          P/Invoke 'imgproc_Ptr_GeneralizedHoughGuil_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Ptr_GeneralizedHoughGuil_delete'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_setXi' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_setXi'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_getXi' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_getXi'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_setLevels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_setLevels'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_getLevels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_getLevels'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_setAngleEpsilon' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_setAngleEpsilon'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_getAngleEpsilon' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_getAngleEpsilon'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_setMinAngle' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_setMinAngle'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_getMinAngle' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_getMinAngle'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_setMaxAngle' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_setMaxAngle'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_getMaxAngle' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_getMaxAngle'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_setAngleStep' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_setAngleStep'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_getAngleStep' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_getAngleStep'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_setAngleThresh' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_setAngleThresh'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_getAngleThresh' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_getAngleThresh'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_setMinScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_setMinScale'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_getMinScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_getMinScale'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_setMaxScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_setMaxScale'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_getMaxScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_getMaxScale'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_setScaleStep' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_setScaleStep'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_getScaleStep' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_getScaleStep'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_setScaleThresh' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_setScaleThresh'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_getScaleThresh' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_getScaleThresh'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_setPosThresh' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_setPosThresh'."
"Message",Normal,"          P/Invoke 'imgproc_GeneralizedHoughGuil_getPosThresh' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_GeneralizedHoughGuil_getPosThresh'."
"Message",Normal,"          P/Invoke 'imgproc_LineIterator_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineIterator_new'."
"Message",Normal,"          P/Invoke 'imgproc_LineIterator_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineIterator_delete'."
"Message",Normal,"          P/Invoke 'imgproc_LineIterator_getValuePosAndShiftToNext' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineIterator_getValuePosAndShiftToNext'."
"Message",Normal,"          P/Invoke 'imgproc_LineIterator_ptr_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineIterator_ptr_get'."
"Message",Normal,"          P/Invoke 'imgproc_LineIterator_ptr0_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineIterator_ptr0_get'."
"Message",Normal,"          P/Invoke 'imgproc_LineIterator_step_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineIterator_step_get'."
"Message",Normal,"          P/Invoke 'imgproc_LineIterator_elemSize_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineIterator_elemSize_get'."
"Message",Normal,"          P/Invoke 'imgproc_LineIterator_err_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineIterator_err_get'."
"Message",Normal,"          P/Invoke 'imgproc_LineIterator_count_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineIterator_count_get'."
"Message",Normal,"          P/Invoke 'imgproc_LineIterator_minusDelta_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineIterator_minusDelta_get'."
"Message",Normal,"          P/Invoke 'imgproc_LineIterator_plusDelta_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineIterator_plusDelta_get'."
"Message",Normal,"          P/Invoke 'imgproc_LineIterator_minusStep_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineIterator_minusStep_get'."
"Message",Normal,"          P/Invoke 'imgproc_LineIterator_plusStep_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineIterator_plusStep_get'."
"Message",Normal,"          P/Invoke 'imgproc_LineSegmentDetector_detect_OutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineSegmentDetector_detect_OutputArray'."
"Message",Normal,"          P/Invoke 'imgproc_LineSegmentDetector_detect_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineSegmentDetector_detect_vector'."
"Message",Normal,"          P/Invoke 'imgproc_LineSegmentDetector_drawSegments' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineSegmentDetector_drawSegments'."
"Message",Normal,"          P/Invoke 'imgproc_LineSegmentDetector_compareSegments' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_LineSegmentDetector_compareSegments'."
"Message",Normal,"          P/Invoke 'imgproc_createLineSegmentDetector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_createLineSegmentDetector'."
"Message",Normal,"          P/Invoke 'imgproc_Ptr_LineSegmentDetector_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Ptr_LineSegmentDetector_delete'."
"Message",Normal,"          P/Invoke 'imgproc_Ptr_LineSegmentDetector_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Ptr_LineSegmentDetector_get'."
"Message",Normal,"          P/Invoke 'imgproc_segmentation_IntelligentScissorsMB_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_segmentation_IntelligentScissorsMB_new'."
"Message",Normal,"          P/Invoke 'imgproc_segmentation_IntelligentScissorsMB_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_segmentation_IntelligentScissorsMB_delete'."
"Message",Normal,"          P/Invoke 'imgproc_segmentation_IntelligentScissorsMB_setWeights' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_segmentation_IntelligentScissorsMB_setWeights'."
"Message",Normal,"          P/Invoke 'imgproc_segmentation_IntelligentScissorsMB_setGradientMagnitudeMaxLimit' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_segmentation_IntelligentScissorsMB_setGradientMagnitudeMaxLimit'."
"Message",Normal,"          P/Invoke 'imgproc_segmentation_IntelligentScissorsMB_setEdgeFeatureZeroCrossingParameters' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_segmentation_IntelligentScissorsMB_setEdgeFeatureZeroCrossingParameters'."
"Message",Normal,"          P/Invoke 'imgproc_segmentation_IntelligentScissorsMB_setEdgeFeatureCannyParameters' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_segmentation_IntelligentScissorsMB_setEdgeFeatureCannyParameters'."
"Message",Normal,"          P/Invoke 'imgproc_segmentation_IntelligentScissorsMB_applyImage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_segmentation_IntelligentScissorsMB_applyImage'."
"Message",Normal,"          P/Invoke 'imgproc_segmentation_IntelligentScissorsMB_applyImageFeatures' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_segmentation_IntelligentScissorsMB_applyImageFeatures'."
"Message",Normal,"          P/Invoke 'imgproc_segmentation_IntelligentScissorsMB_buildMap' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_segmentation_IntelligentScissorsMB_buildMap'."
"Message",Normal,"          P/Invoke 'imgproc_segmentation_IntelligentScissorsMB_getContour' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_segmentation_IntelligentScissorsMB_getContour'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_new1'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_new2'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_delete'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_initDelaunay' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_initDelaunay'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_insert1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_insert1'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_insert2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_insert2'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_locate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_locate'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_findNearest' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_findNearest'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_getEdgeList' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_getEdgeList'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_getLeadingEdgeList' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_getLeadingEdgeList'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_getTriangleList' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_getTriangleList'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_getVoronoiFacetList' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_getVoronoiFacetList'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_getVertex' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_getVertex'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_getEdge' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_getEdge'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_nextEdge' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_nextEdge'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_rotateEdge' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_rotateEdge'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_symEdge' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_symEdge'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_edgeOrg' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_edgeOrg'."
"Message",Normal,"          P/Invoke 'imgproc_Subdiv2D_edgeDst' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgproc_Subdiv2D_edgeDst'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_setTrainMethod' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_setTrainMethod'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_getTrainMethod' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_getTrainMethod'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_setActivationFunction' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_setActivationFunction'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_setLayerSizes' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_setLayerSizes'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_getLayerSizes' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_getLayerSizes'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_getTermCriteria' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_getTermCriteria'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_setTermCriteria' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_setTermCriteria'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_getBackpropWeightScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_getBackpropWeightScale'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_setBackpropWeightScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_setBackpropWeightScale'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_getBackpropMomentumScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_getBackpropMomentumScale'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_setBackpropMomentumScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_setBackpropMomentumScale'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_getRpropDW0' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_getRpropDW0'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_setRpropDW0' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_setRpropDW0'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_getRpropDWPlus' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_getRpropDWPlus'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_setRpropDWPlus' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_setRpropDWPlus'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_getRpropDWMinus' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_getRpropDWMinus'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_setRpropDWMinus' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_setRpropDWMinus'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_getRpropDWMin' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_getRpropDWMin'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_setRpropDWMin' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_setRpropDWMin'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_getRpropDWMax' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_getRpropDWMax'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_setRpropDWMax' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_setRpropDWMax'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_getWeights' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_getWeights'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_create'."
"Message",Normal,"          P/Invoke 'ml_Ptr_ANN_MLP_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_ANN_MLP_delete'."
"Message",Normal,"          P/Invoke 'ml_Ptr_ANN_MLP_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_ANN_MLP_get'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_load' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_load'."
"Message",Normal,"          P/Invoke 'ml_ANN_MLP_loadFromString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_ANN_MLP_loadFromString'."
"Message",Normal,"          P/Invoke 'ml_Boost_getBoostType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Boost_getBoostType'."
"Message",Normal,"          P/Invoke 'ml_Boost_setBoostType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Boost_setBoostType'."
"Message",Normal,"          P/Invoke 'ml_Boost_getWeakCount' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Boost_getWeakCount'."
"Message",Normal,"          P/Invoke 'ml_Boost_setWeakCount' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Boost_setWeakCount'."
"Message",Normal,"          P/Invoke 'ml_Boost_getWeightTrimRate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Boost_getWeightTrimRate'."
"Message",Normal,"          P/Invoke 'ml_Boost_setWeightTrimRate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Boost_setWeightTrimRate'."
"Message",Normal,"          P/Invoke 'ml_Boost_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Boost_create'."
"Message",Normal,"          P/Invoke 'ml_Ptr_Boost_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_Boost_delete'."
"Message",Normal,"          P/Invoke 'ml_Ptr_Boost_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_Boost_get'."
"Message",Normal,"          P/Invoke 'ml_Boost_load' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Boost_load'."
"Message",Normal,"          P/Invoke 'ml_Boost_loadFromString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Boost_loadFromString'."
"Message",Normal,"          P/Invoke 'ml_DTrees_getMaxCategories' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_getMaxCategories'."
"Message",Normal,"          P/Invoke 'ml_DTrees_setMaxCategories' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_setMaxCategories'."
"Message",Normal,"          P/Invoke 'ml_DTrees_getMaxDepth' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_getMaxDepth'."
"Message",Normal,"          P/Invoke 'ml_DTrees_setMaxDepth' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_setMaxDepth'."
"Message",Normal,"          P/Invoke 'ml_DTrees_getMinSampleCount' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_getMinSampleCount'."
"Message",Normal,"          P/Invoke 'ml_DTrees_setMinSampleCount' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_setMinSampleCount'."
"Message",Normal,"          P/Invoke 'ml_DTrees_getCVFolds' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_getCVFolds'."
"Message",Normal,"          P/Invoke 'ml_DTrees_setCVFolds' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_setCVFolds'."
"Message",Normal,"          P/Invoke 'ml_DTrees_getUseSurrogates' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_getUseSurrogates'."
"Message",Normal,"          P/Invoke 'ml_DTrees_setUseSurrogates' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_setUseSurrogates'."
"Message",Normal,"          P/Invoke 'ml_DTrees_getUse1SERule' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_getUse1SERule'."
"Message",Normal,"          P/Invoke 'ml_DTrees_setUse1SERule' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_setUse1SERule'."
"Message",Normal,"          P/Invoke 'ml_DTrees_getTruncatePrunedTree' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_getTruncatePrunedTree'."
"Message",Normal,"          P/Invoke 'ml_DTrees_setTruncatePrunedTree' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_setTruncatePrunedTree'."
"Message",Normal,"          P/Invoke 'ml_DTrees_getRegressionAccuracy' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_getRegressionAccuracy'."
"Message",Normal,"          P/Invoke 'ml_DTrees_setRegressionAccuracy' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_setRegressionAccuracy'."
"Message",Normal,"          P/Invoke 'ml_DTrees_getPriors' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_getPriors'."
"Message",Normal,"          P/Invoke 'ml_DTrees_setPriors' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_setPriors'."
"Message",Normal,"          P/Invoke 'ml_DTrees_getRoots' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_getRoots'."
"Message",Normal,"          P/Invoke 'ml_DTrees_getNodes' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_getNodes'."
"Message",Normal,"          P/Invoke 'ml_DTrees_getSplits' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_getSplits'."
"Message",Normal,"          P/Invoke 'ml_DTrees_getSubsets' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_getSubsets'."
"Message",Normal,"          P/Invoke 'ml_DTrees_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_create'."
"Message",Normal,"          P/Invoke 'ml_Ptr_DTrees_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_DTrees_delete'."
"Message",Normal,"          P/Invoke 'ml_Ptr_DTrees_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_DTrees_get'."
"Message",Normal,"          P/Invoke 'ml_DTrees_load' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_load'."
"Message",Normal,"          P/Invoke 'ml_DTrees_loadFromString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_DTrees_loadFromString'."
"Message",Normal,"          P/Invoke 'ml_EM_getClustersNumber' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_getClustersNumber'."
"Message",Normal,"          P/Invoke 'ml_EM_setClustersNumber' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_setClustersNumber'."
"Message",Normal,"          P/Invoke 'ml_EM_getCovarianceMatrixType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_getCovarianceMatrixType'."
"Message",Normal,"          P/Invoke 'ml_EM_setCovarianceMatrixType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_setCovarianceMatrixType'."
"Message",Normal,"          P/Invoke 'ml_EM_getTermCriteria' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_getTermCriteria'."
"Message",Normal,"          P/Invoke 'ml_EM_setTermCriteria' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_setTermCriteria'."
"Message",Normal,"          P/Invoke 'ml_EM_getWeights' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_getWeights'."
"Message",Normal,"          P/Invoke 'ml_EM_getMeans' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_getMeans'."
"Message",Normal,"          P/Invoke 'ml_EM_getCovs' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_getCovs'."
"Message",Normal,"          P/Invoke 'ml_EM_predict2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_predict2'."
"Message",Normal,"          P/Invoke 'ml_EM_trainEM' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_trainEM'."
"Message",Normal,"          P/Invoke 'ml_EM_trainE' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_trainE'."
"Message",Normal,"          P/Invoke 'ml_EM_trainM' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_trainM'."
"Message",Normal,"          P/Invoke 'ml_EM_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_create'."
"Message",Normal,"          P/Invoke 'ml_Ptr_EM_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_EM_get'."
"Message",Normal,"          P/Invoke 'ml_Ptr_EM_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_EM_delete'."
"Message",Normal,"          P/Invoke 'ml_EM_load' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_load'."
"Message",Normal,"          P/Invoke 'ml_EM_loadFromString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_EM_loadFromString'."
"Message",Normal,"          P/Invoke 'ml_KNearest_getDefaultK' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_KNearest_getDefaultK'."
"Message",Normal,"          P/Invoke 'ml_KNearest_setDefaultK' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_KNearest_setDefaultK'."
"Message",Normal,"          P/Invoke 'ml_KNearest_getIsClassifier' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_KNearest_getIsClassifier'."
"Message",Normal,"          P/Invoke 'ml_KNearest_setIsClassifier' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_KNearest_setIsClassifier'."
"Message",Normal,"          P/Invoke 'ml_KNearest_getEmax' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_KNearest_getEmax'."
"Message",Normal,"          P/Invoke 'ml_KNearest_setEmax' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_KNearest_setEmax'."
"Message",Normal,"          P/Invoke 'ml_KNearest_getAlgorithmType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_KNearest_getAlgorithmType'."
"Message",Normal,"          P/Invoke 'ml_KNearest_setAlgorithmType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_KNearest_setAlgorithmType'."
"Message",Normal,"          P/Invoke 'ml_KNearest_findNearest' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_KNearest_findNearest'."
"Message",Normal,"          P/Invoke 'ml_KNearest_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_KNearest_create'."
"Message",Normal,"          P/Invoke 'ml_Ptr_KNearest_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_KNearest_delete'."
"Message",Normal,"          P/Invoke 'ml_Ptr_KNearest_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_KNearest_get'."
"Message",Normal,"          P/Invoke 'ml_KNearest_load' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_KNearest_load'."
"Message",Normal,"          P/Invoke 'ml_KNearest_loadFromString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_KNearest_loadFromString'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_getLearningRate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_getLearningRate'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_setLearningRate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_setLearningRate'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_getIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_getIterations'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_setIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_setIterations'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_getRegularization' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_getRegularization'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_setRegularization' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_setRegularization'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_getTrainMethod' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_getTrainMethod'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_setTrainMethod' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_setTrainMethod'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_getMiniBatchSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_getMiniBatchSize'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_setMiniBatchSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_setMiniBatchSize'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_getTermCriteria' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_getTermCriteria'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_setTermCriteria' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_setTermCriteria'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_predict' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_predict'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_get_learnt_thetas' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_get_learnt_thetas'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_create'."
"Message",Normal,"          P/Invoke 'ml_Ptr_LogisticRegression_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_LogisticRegression_delete'."
"Message",Normal,"          P/Invoke 'ml_Ptr_LogisticRegression_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_LogisticRegression_get'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_load' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_load'."
"Message",Normal,"          P/Invoke 'ml_LogisticRegression_loadFromString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_LogisticRegression_loadFromString'."
"Message",Normal,"          P/Invoke 'ml_NormalBayesClassifier_predictProb' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_NormalBayesClassifier_predictProb'."
"Message",Normal,"          P/Invoke 'ml_NormalBayesClassifier_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_NormalBayesClassifier_create'."
"Message",Normal,"          P/Invoke 'ml_Ptr_NormalBayesClassifier_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_NormalBayesClassifier_delete'."
"Message",Normal,"          P/Invoke 'ml_Ptr_NormalBayesClassifier_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_NormalBayesClassifier_get'."
"Message",Normal,"          P/Invoke 'ml_NormalBayesClassifier_load' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_NormalBayesClassifier_load'."
"Message",Normal,"          P/Invoke 'ml_NormalBayesClassifier_loadFromString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_NormalBayesClassifier_loadFromString'."
"Message",Normal,"          P/Invoke 'ml_RTrees_getCalculateVarImportance' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_RTrees_getCalculateVarImportance'."
"Message",Normal,"          P/Invoke 'ml_RTrees_setCalculateVarImportance' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_RTrees_setCalculateVarImportance'."
"Message",Normal,"          P/Invoke 'ml_RTrees_getActiveVarCount' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_RTrees_getActiveVarCount'."
"Message",Normal,"          P/Invoke 'ml_RTrees_setActiveVarCount' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_RTrees_setActiveVarCount'."
"Message",Normal,"          P/Invoke 'ml_RTrees_getTermCriteria' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_RTrees_getTermCriteria'."
"Message",Normal,"          P/Invoke 'ml_RTrees_setTermCriteria' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_RTrees_setTermCriteria'."
"Message",Normal,"          P/Invoke 'ml_RTrees_getVarImportance' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_RTrees_getVarImportance'."
"Message",Normal,"          P/Invoke 'ml_RTrees_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_RTrees_create'."
"Message",Normal,"          P/Invoke 'ml_Ptr_RTrees_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_RTrees_delete'."
"Message",Normal,"          P/Invoke 'ml_Ptr_RTrees_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_RTrees_get'."
"Message",Normal,"          P/Invoke 'ml_RTrees_load' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_RTrees_load'."
"Message",Normal,"          P/Invoke 'ml_RTrees_loadFromString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_RTrees_loadFromString'."
"Message",Normal,"          P/Invoke 'ml_StatModel_clear' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_StatModel_clear'."
"Message",Normal,"          P/Invoke 'ml_StatModel_getVarCount' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_StatModel_getVarCount'."
"Message",Normal,"          P/Invoke 'ml_StatModel_empty' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_StatModel_empty'."
"Message",Normal,"          P/Invoke 'ml_StatModel_isTrained' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_StatModel_isTrained'."
"Message",Normal,"          P/Invoke 'ml_StatModel_isClassifier' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_StatModel_isClassifier'."
"Message",Normal,"          P/Invoke 'ml_StatModel_train2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_StatModel_train2'."
"Message",Normal,"          P/Invoke 'ml_StatModel_predict' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_StatModel_predict'."
"Message",Normal,"          P/Invoke 'ml_SVM_getType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_getType'."
"Message",Normal,"          P/Invoke 'ml_SVM_setType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_setType'."
"Message",Normal,"          P/Invoke 'ml_SVM_getGamma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_getGamma'."
"Message",Normal,"          P/Invoke 'ml_SVM_setGamma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_setGamma'."
"Message",Normal,"          P/Invoke 'ml_SVM_getCoef0' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_getCoef0'."
"Message",Normal,"          P/Invoke 'ml_SVM_setCoef0' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_setCoef0'."
"Message",Normal,"          P/Invoke 'ml_SVM_getDegree' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_getDegree'."
"Message",Normal,"          P/Invoke 'ml_SVM_setDegree' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_setDegree'."
"Message",Normal,"          P/Invoke 'ml_SVM_getC' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_getC'."
"Message",Normal,"          P/Invoke 'ml_SVM_setC' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_setC'."
"Message",Normal,"          P/Invoke 'ml_SVM_getP' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_getP'."
"Message",Normal,"          P/Invoke 'ml_SVM_setP' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_setP'."
"Message",Normal,"          P/Invoke 'ml_SVM_getNu' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_getNu'."
"Message",Normal,"          P/Invoke 'ml_SVM_setNu' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_setNu'."
"Message",Normal,"          P/Invoke 'ml_SVM_getClassWeights' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_getClassWeights'."
"Message",Normal,"          P/Invoke 'ml_SVM_setClassWeights' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_setClassWeights'."
"Message",Normal,"          P/Invoke 'ml_SVM_getTermCriteria' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_getTermCriteria'."
"Message",Normal,"          P/Invoke 'ml_SVM_setTermCriteria' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_setTermCriteria'."
"Message",Normal,"          P/Invoke 'ml_SVM_getKernelType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_getKernelType'."
"Message",Normal,"          P/Invoke 'ml_SVM_setKernel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_setKernel'."
"Message",Normal,"          P/Invoke 'ml_SVM_getSupportVectors' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_getSupportVectors'."
"Message",Normal,"          P/Invoke 'ml_SVM_getDecisionFunction' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_getDecisionFunction'."
"Message",Normal,"          P/Invoke 'ml_SVM_getDefaultGrid' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_getDefaultGrid'."
"Message",Normal,"          P/Invoke 'ml_SVM_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_create'."
"Message",Normal,"          P/Invoke 'ml_Ptr_SVM_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_SVM_delete'."
"Message",Normal,"          P/Invoke 'ml_Ptr_SVM_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_Ptr_SVM_get'."
"Message",Normal,"          P/Invoke 'ml_SVM_load' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_load'."
"Message",Normal,"          P/Invoke 'ml_SVM_loadFromString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ml_SVM_loadFromString'."
"Message",Normal,"          P/Invoke 'aruco_detectMarkers' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_detectMarkers'."
"Message",Normal,"          P/Invoke 'aruco_drawDetectedMarkers' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_drawDetectedMarkers'."
"Message",Normal,"          P/Invoke 'aruco_drawDetectedMarkers' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_drawDetectedMarkers'."
"Message",Normal,"          P/Invoke 'aruco_estimatePoseSingleMarkers' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_estimatePoseSingleMarkers'."
"Message",Normal,"          P/Invoke 'aruco_getPredefinedDictionary' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_getPredefinedDictionary'."
"Message",Normal,"          P/Invoke 'aruco_readDictionary' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_readDictionary'."
"Message",Normal,"          P/Invoke 'aruco_detectCharucoDiamond' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_detectCharucoDiamond'."
"Message",Normal,"          P/Invoke 'aruco_drawDetectedDiamonds' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_drawDetectedDiamonds'."
"Message",Normal,"          P/Invoke 'aruco_Dictionary_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_Dictionary_delete'."
"Message",Normal,"          P/Invoke 'aruco_Dictionary_setMarkerSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_Dictionary_setMarkerSize'."
"Message",Normal,"          P/Invoke 'aruco_Dictionary_setMaxCorrectionBits' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_Dictionary_setMaxCorrectionBits'."
"Message",Normal,"          P/Invoke 'aruco_Dictionary_getBytesList' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_Dictionary_getBytesList'."
"Message",Normal,"          P/Invoke 'aruco_Dictionary_getMarkerSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_Dictionary_getMarkerSize'."
"Message",Normal,"          P/Invoke 'aruco_Dictionary_getMaxCorrectionBits' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_Dictionary_getMaxCorrectionBits'."
"Message",Normal,"          P/Invoke 'aruco_Dictionary_identify' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_Dictionary_identify'."
"Message",Normal,"          P/Invoke 'aruco_Dictionary_getDistanceToId' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_Dictionary_getDistanceToId'."
"Message",Normal,"          P/Invoke 'aruco_Dictionary_generateImageMarker' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_Dictionary_generateImageMarker'."
"Message",Normal,"          P/Invoke 'aruco_Dictionary_getByteListFromBits' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_Dictionary_getByteListFromBits'."
"Message",Normal,"          P/Invoke 'aruco_Dictionary_getBitsFromByteList' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!aruco_Dictionary_getBitsFromByteList'."
"Message",Normal,"          P/Invoke 'bgsegm_createBackgroundSubtractorMOG' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_createBackgroundSubtractorMOG'."
"Message",Normal,"          P/Invoke 'bgsegm_Ptr_BackgroundSubtractorMOG_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_Ptr_BackgroundSubtractorMOG_delete'."
"Message",Normal,"          P/Invoke 'bgsegm_Ptr_BackgroundSubtractorMOG_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_Ptr_BackgroundSubtractorMOG_get'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorMOG_getHistory' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorMOG_getHistory'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorMOG_setHistory' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorMOG_setHistory'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorMOG_getNMixtures' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorMOG_getNMixtures'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorMOG_setNMixtures' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorMOG_setNMixtures'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorMOG_getBackgroundRatio' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorMOG_getBackgroundRatio'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorMOG_setBackgroundRatio' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorMOG_setBackgroundRatio'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorMOG_getNoiseSigma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorMOG_getNoiseSigma'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorMOG_setNoiseSigma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorMOG_setNoiseSigma'."
"Message",Normal,"          P/Invoke 'bgsegm_createBackgroundSubtractorGMG' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_createBackgroundSubtractorGMG'."
"Message",Normal,"          P/Invoke 'bgsegm_Ptr_BackgroundSubtractorGMG_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_Ptr_BackgroundSubtractorGMG_delete'."
"Message",Normal,"          P/Invoke 'bgsegm_Ptr_BackgroundSubtractorGMG_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_Ptr_BackgroundSubtractorGMG_get'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_getMaxFeatures' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_getMaxFeatures'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_setMaxFeatures' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_setMaxFeatures'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_getNumFrames' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_getNumFrames'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_setNumFrames' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_setNumFrames'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_getQuantizationLevels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_getQuantizationLevels'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_setQuantizationLevels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_setQuantizationLevels'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_getBackgroundPrior' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_getBackgroundPrior'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_setBackgroundPrior' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_setBackgroundPrior'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_getSmoothingRadius' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_getSmoothingRadius'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_setSmoothingRadius' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_setSmoothingRadius'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_getDecisionThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_getDecisionThreshold'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_setDecisionThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_setDecisionThreshold'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_getMinVal' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_getMinVal'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_setMinVal' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_setMinVal'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_getMaxVal' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_getMaxVal'."
"Message",Normal,"          P/Invoke 'bgsegm_BackgroundSubtractorGMG_setMaxVal' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!bgsegm_BackgroundSubtractorGMG_setMaxVal'."
"Message",Normal,"          P/Invoke 'dnn_superres_DnnSuperResImpl_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_superres_DnnSuperResImpl_new1'."
"Message",Normal,"          P/Invoke 'dnn_superres_DnnSuperResImpl_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_superres_DnnSuperResImpl_new2'."
"Message",Normal,"          P/Invoke 'dnn_superres_DnnSuperResImpl_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_superres_DnnSuperResImpl_delete'."
"Message",Normal,"          P/Invoke 'dnn_superres_DnnSuperResImpl_readModel1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_superres_DnnSuperResImpl_readModel1'."
"Message",Normal,"          P/Invoke 'dnn_superres_DnnSuperResImpl_readModel2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_superres_DnnSuperResImpl_readModel2'."
"Message",Normal,"          P/Invoke 'dnn_superres_DnnSuperResImpl_setModel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_superres_DnnSuperResImpl_setModel'."
"Message",Normal,"          P/Invoke 'dnn_superres_DnnSuperResImpl_setPreferableBackend' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_superres_DnnSuperResImpl_setPreferableBackend'."
"Message",Normal,"          P/Invoke 'dnn_superres_DnnSuperResImpl_setPreferableTarget' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_superres_DnnSuperResImpl_setPreferableTarget'."
"Message",Normal,"          P/Invoke 'dnn_superres_DnnSuperResImpl_upsample' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_superres_DnnSuperResImpl_upsample'."
"Message",Normal,"          P/Invoke 'dnn_superres_DnnSuperResImpl_upsampleMultioutput' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_superres_DnnSuperResImpl_upsampleMultioutput'."
"Message",Normal,"          P/Invoke 'dnn_superres_DnnSuperResImpl_getScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_superres_DnnSuperResImpl_getScale'."
"Message",Normal,"          P/Invoke 'dnn_superres_DnnSuperResImpl_getAlgorithm' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!dnn_superres_DnnSuperResImpl_getAlgorithm'."
"Message",Normal,"          P/Invoke 'flann_Index_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Index_new'."
"Message",Normal,"          P/Invoke 'flann_Index_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Index_delete'."
"Message",Normal,"          P/Invoke 'flann_Index_knnSearch1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Index_knnSearch1'."
"Message",Normal,"          P/Invoke 'flann_Index_knnSearch2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Index_knnSearch2'."
"Message",Normal,"          P/Invoke 'flann_Index_knnSearch3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Index_knnSearch3'."
"Message",Normal,"          P/Invoke 'flann_Index_radiusSearch1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Index_radiusSearch1'."
"Message",Normal,"          P/Invoke 'flann_Index_radiusSearch2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Index_radiusSearch2'."
"Message",Normal,"          P/Invoke 'flann_Index_radiusSearch3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Index_radiusSearch3'."
"Message",Normal,"          P/Invoke 'flann_Index_save' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Index_save'."
"Message",Normal,"          P/Invoke 'flann_Ptr_IndexParams_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_IndexParams_new'."
"Message",Normal,"          P/Invoke 'flann_Ptr_IndexParams_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_IndexParams_get'."
"Message",Normal,"          P/Invoke 'flann_Ptr_IndexParams_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_IndexParams_delete'."
"Message",Normal,"          P/Invoke 'flann_IndexParams_getString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_IndexParams_getString'."
"Message",Normal,"          P/Invoke 'flann_IndexParams_getInt' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_IndexParams_getInt'."
"Message",Normal,"          P/Invoke 'flann_IndexParams_getDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_IndexParams_getDouble'."
"Message",Normal,"          P/Invoke 'flann_IndexParams_setString' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_IndexParams_setString'."
"Message",Normal,"          P/Invoke 'flann_IndexParams_setInt' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_IndexParams_setInt'."
"Message",Normal,"          P/Invoke 'flann_IndexParams_setDouble' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_IndexParams_setDouble'."
"Message",Normal,"          P/Invoke 'flann_IndexParams_setFloat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_IndexParams_setFloat'."
"Message",Normal,"          P/Invoke 'flann_IndexParams_setBool' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_IndexParams_setBool'."
"Message",Normal,"          P/Invoke 'flann_IndexParams_setAlgorithm' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_IndexParams_setAlgorithm'."
"Message",Normal,"          P/Invoke 'flann_Ptr_LinearIndexParams_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_LinearIndexParams_new'."
"Message",Normal,"          P/Invoke 'flann_Ptr_LinearIndexParams_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_LinearIndexParams_get'."
"Message",Normal,"          P/Invoke 'flann_Ptr_LinearIndexParams_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_LinearIndexParams_delete'."
"Message",Normal,"          P/Invoke 'flann_Ptr_KDTreeIndexParams_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_KDTreeIndexParams_new'."
"Message",Normal,"          P/Invoke 'flann_Ptr_KDTreeIndexParams_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_KDTreeIndexParams_get'."
"Message",Normal,"          P/Invoke 'flann_Ptr_KDTreeIndexParams_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_KDTreeIndexParams_delete'."
"Message",Normal,"          P/Invoke 'flann_Ptr_KMeansIndexParams_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_KMeansIndexParams_new'."
"Message",Normal,"          P/Invoke 'flann_Ptr_KMeansIndexParams_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_KMeansIndexParams_get'."
"Message",Normal,"          P/Invoke 'flann_Ptr_KMeansIndexParams_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_KMeansIndexParams_delete'."
"Message",Normal,"          P/Invoke 'flann_Ptr_LshIndexParams_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_LshIndexParams_new'."
"Message",Normal,"          P/Invoke 'flann_Ptr_LshIndexParams_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_LshIndexParams_get'."
"Message",Normal,"          P/Invoke 'flann_Ptr_LshIndexParams_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_LshIndexParams_delete'."
"Message",Normal,"          P/Invoke 'flann_Ptr_CompositeIndexParams_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_CompositeIndexParams_new'."
"Message",Normal,"          P/Invoke 'flann_Ptr_CompositeIndexParams_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_CompositeIndexParams_get'."
"Message",Normal,"          P/Invoke 'flann_Ptr_CompositeIndexParams_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_CompositeIndexParams_delete'."
"Message",Normal,"          P/Invoke 'flann_Ptr_AutotunedIndexParams_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_AutotunedIndexParams_new'."
"Message",Normal,"          P/Invoke 'flann_Ptr_AutotunedIndexParams_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_AutotunedIndexParams_get'."
"Message",Normal,"          P/Invoke 'flann_Ptr_AutotunedIndexParams_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_AutotunedIndexParams_delete'."
"Message",Normal,"          P/Invoke 'flann_Ptr_SavedIndexParams_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_SavedIndexParams_new'."
"Message",Normal,"          P/Invoke 'flann_Ptr_SavedIndexParams_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_SavedIndexParams_get'."
"Message",Normal,"          P/Invoke 'flann_Ptr_SavedIndexParams_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_SavedIndexParams_delete'."
"Message",Normal,"          P/Invoke 'flann_Ptr_SearchParams_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_SearchParams_new'."
"Message",Normal,"          P/Invoke 'flann_Ptr_SearchParams_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_SearchParams_get'."
"Message",Normal,"          P/Invoke 'flann_Ptr_SearchParams_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!flann_Ptr_SearchParams_delete'."
"Message",Normal,"          P/Invoke 'highgui_namedWindow' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_namedWindow'."
"Message",Normal,"          P/Invoke 'highgui_destroyWindow' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_destroyWindow'."
"Message",Normal,"          P/Invoke 'highgui_destroyAllWindows' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_destroyAllWindows'."
"Message",Normal,"          P/Invoke 'highgui_startWindowThread' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_startWindowThread'."
"Message",Normal,"          P/Invoke 'highgui_imshow' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_imshow'."
"Message",Normal,"          P/Invoke 'highgui_imshow_umat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_imshow_umat'."
"Message",Normal,"          P/Invoke 'highgui_waitKey' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_waitKey'."
"Message",Normal,"          P/Invoke 'highgui_waitKeyEx' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_waitKeyEx'."
"Message",Normal,"          P/Invoke 'highgui_resizeWindow' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_resizeWindow'."
"Message",Normal,"          P/Invoke 'highgui_moveWindow' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_moveWindow'."
"Message",Normal,"          P/Invoke 'highgui_setWindowProperty' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_setWindowProperty'."
"Message",Normal,"          P/Invoke 'highgui_setWindowTitle' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_setWindowTitle'."
"Message",Normal,"          P/Invoke 'highgui_getWindowProperty' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_getWindowProperty'."
"Message",Normal,"          P/Invoke 'highgui_getWindowImageRect' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_getWindowImageRect'."
"Message",Normal,"          P/Invoke 'highgui_setMouseCallback' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_setMouseCallback'."
"Message",Normal,"          P/Invoke 'highgui_getMouseWheelDelta' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_getMouseWheelDelta'."
"Message",Normal,"          P/Invoke 'highgui_selectROI1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_selectROI1'."
"Message",Normal,"          P/Invoke 'highgui_selectROI2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_selectROI2'."
"Message",Normal,"          P/Invoke 'highgui_selectROIs' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_selectROIs'."
"Message",Normal,"          P/Invoke 'highgui_createTrackbar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_createTrackbar'."
"Message",Normal,"          P/Invoke 'highgui_createTrackbar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_createTrackbar'."
"Message",Normal,"          P/Invoke 'highgui_createTrackbar' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_createTrackbar'."
"Message",Normal,"          P/Invoke 'highgui_getTrackbarPos' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_getTrackbarPos'."
"Message",Normal,"          P/Invoke 'highgui_setTrackbarPos' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_setTrackbarPos'."
"Message",Normal,"          P/Invoke 'highgui_setTrackbarMax' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_setTrackbarMax'."
"Message",Normal,"          P/Invoke 'highgui_setTrackbarMin' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_setTrackbarMin'."
"Message",Normal,"          P/Invoke 'highgui_cvGetWindowHandle' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_cvGetWindowHandle'."
"Message",Normal,"          P/Invoke 'highgui_initContainer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!highgui_initContainer'."
"Message",Normal,"          P/Invoke 'imgcodecs_imread' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgcodecs_imread'."
"Message",Normal,"          P/Invoke 'imgcodecs_imread' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgcodecs_imread'."
"Message",Normal,"          P/Invoke 'imgcodecs_imreadmulti' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgcodecs_imreadmulti'."
"Message",Normal,"          P/Invoke 'imgcodecs_imreadmulti' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgcodecs_imreadmulti'."
"Message",Normal,"          P/Invoke 'imgcodecs_imwrite' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgcodecs_imwrite'."
"Message",Normal,"          P/Invoke 'imgcodecs_imwrite' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgcodecs_imwrite'."
"Message",Normal,"          P/Invoke 'imgcodecs_imwrite_multi' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgcodecs_imwrite_multi'."
"Message",Normal,"          P/Invoke 'imgcodecs_imwrite_multi' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgcodecs_imwrite_multi'."
"Message",Normal,"          P/Invoke 'imgcodecs_imdecode_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgcodecs_imdecode_Mat'."
"Message",Normal,"          P/Invoke 'imgcodecs_imdecode_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgcodecs_imdecode_vector'."
"Message",Normal,"          P/Invoke 'imgcodecs_imdecode_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgcodecs_imdecode_InputArray'."
"Message",Normal,"          P/Invoke 'imgcodecs_imencode_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgcodecs_imencode_vector'."
"Message",Normal,"          P/Invoke 'imgcodecs_imwrite' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgcodecs_imwrite'."
"Message",Normal,"          P/Invoke 'imgcodecs_imwrite' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgcodecs_imwrite'."
"Message",Normal,"          P/Invoke 'imgcodecs_haveImageWriter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!imgcodecs_haveImageWriter'."
"Message",Normal,"          P/Invoke 'img_hash_ImgHashBase_compute' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_ImgHashBase_compute'."
"Message",Normal,"          P/Invoke 'img_hash_ImgHashBase_compare' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_ImgHashBase_compare'."
"Message",Normal,"          P/Invoke 'img_hash_AverageHash_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_AverageHash_create'."
"Message",Normal,"          P/Invoke 'img_hash_Ptr_AverageHash_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_Ptr_AverageHash_delete'."
"Message",Normal,"          P/Invoke 'img_hash_Ptr_AverageHash_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_Ptr_AverageHash_get'."
"Message",Normal,"          P/Invoke 'img_hash_BlockMeanHash_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_BlockMeanHash_create'."
"Message",Normal,"          P/Invoke 'img_hash_Ptr_BlockMeanHash_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_Ptr_BlockMeanHash_delete'."
"Message",Normal,"          P/Invoke 'img_hash_Ptr_BlockMeanHash_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_Ptr_BlockMeanHash_get'."
"Message",Normal,"          P/Invoke 'img_hash_BlockMeanHash_setMode' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_BlockMeanHash_setMode'."
"Message",Normal,"          P/Invoke 'img_hash_BlockMeanHash_getMean' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_BlockMeanHash_getMean'."
"Message",Normal,"          P/Invoke 'img_hash_ColorMomentHash_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_ColorMomentHash_create'."
"Message",Normal,"          P/Invoke 'img_hash_Ptr_ColorMomentHash_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_Ptr_ColorMomentHash_delete'."
"Message",Normal,"          P/Invoke 'img_hash_Ptr_ColorMomentHash_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_Ptr_ColorMomentHash_get'."
"Message",Normal,"          P/Invoke 'img_hash_MarrHildrethHash_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_MarrHildrethHash_create'."
"Message",Normal,"          P/Invoke 'img_hash_Ptr_MarrHildrethHash_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_Ptr_MarrHildrethHash_delete'."
"Message",Normal,"          P/Invoke 'img_hash_Ptr_MarrHildrethHash_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_Ptr_MarrHildrethHash_get'."
"Message",Normal,"          P/Invoke 'img_hash_MarrHildrethHash_setKernelParam' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_MarrHildrethHash_setKernelParam'."
"Message",Normal,"          P/Invoke 'img_hash_MarrHildrethHash_getAlpha' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_MarrHildrethHash_getAlpha'."
"Message",Normal,"          P/Invoke 'img_hash_MarrHildrethHash_getScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_MarrHildrethHash_getScale'."
"Message",Normal,"          P/Invoke 'img_hash_PHash_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_PHash_create'."
"Message",Normal,"          P/Invoke 'img_hash_Ptr_PHash_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_Ptr_PHash_delete'."
"Message",Normal,"          P/Invoke 'img_hash_Ptr_PHash_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_Ptr_PHash_get'."
"Message",Normal,"          P/Invoke 'img_hash_RadialVarianceHash_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_RadialVarianceHash_create'."
"Message",Normal,"          P/Invoke 'img_hash_Ptr_RadialVarianceHash_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_Ptr_RadialVarianceHash_delete'."
"Message",Normal,"          P/Invoke 'img_hash_Ptr_RadialVarianceHash_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_Ptr_RadialVarianceHash_get'."
"Message",Normal,"          P/Invoke 'img_hash_RadialVarianceHash_setNumOfAngleLine' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_RadialVarianceHash_setNumOfAngleLine'."
"Message",Normal,"          P/Invoke 'img_hash_RadialVarianceHash_setSigma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_RadialVarianceHash_setSigma'."
"Message",Normal,"          P/Invoke 'img_hash_RadialVarianceHash_getNumOfAngleLine' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_RadialVarianceHash_getNumOfAngleLine'."
"Message",Normal,"          P/Invoke 'img_hash_RadialVarianceHash_getSigma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!img_hash_RadialVarianceHash_getSigma'."
"Message",Normal,"          P/Invoke 'line_descriptor_LSDDetector_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!line_descriptor_LSDDetector_new1'."
"Message",Normal,"          P/Invoke 'line_descriptor_LSDDetector_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!line_descriptor_LSDDetector_new2'."
"Message",Normal,"          P/Invoke 'line_descriptor_LSDDetector_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!line_descriptor_LSDDetector_delete'."
"Message",Normal,"          P/Invoke 'line_descriptor_LSDDetector_detect1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!line_descriptor_LSDDetector_detect1'."
"Message",Normal,"          P/Invoke 'line_descriptor_LSDDetector_detect2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!line_descriptor_LSDDetector_detect2'."
"Message",Normal,"          P/Invoke 'optflow_motempl_updateMotionHistory' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!optflow_motempl_updateMotionHistory'."
"Message",Normal,"          P/Invoke 'optflow_motempl_calcMotionGradient' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!optflow_motempl_calcMotionGradient'."
"Message",Normal,"          P/Invoke 'optflow_motempl_calcGlobalOrientation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!optflow_motempl_calcGlobalOrientation'."
"Message",Normal,"          P/Invoke 'optflow_motempl_segmentMotion' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!optflow_motempl_segmentMotion'."
"Message",Normal,"          P/Invoke 'optflow_calcOpticalFlowSF1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!optflow_calcOpticalFlowSF1'."
"Message",Normal,"          P/Invoke 'optflow_calcOpticalFlowSF2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!optflow_calcOpticalFlowSF2'."
"Message",Normal,"          P/Invoke 'optflow_calcOpticalFlowSparseToDense' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!optflow_calcOpticalFlowSparseToDense'."
"Message",Normal,"          P/Invoke 'quality_QualityBase_compute' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_QualityBase_compute'."
"Message",Normal,"          P/Invoke 'quality_QualityBase_getQualityMap' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_QualityBase_getQualityMap'."
"Message",Normal,"          P/Invoke 'quality_QualityBase_clear' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_QualityBase_clear'."
"Message",Normal,"          P/Invoke 'quality_QualityBase_empty' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_QualityBase_empty'."
"Message",Normal,"          P/Invoke 'quality_createQualityPSNR' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_createQualityPSNR'."
"Message",Normal,"          P/Invoke 'quality_Ptr_QualityPSNR_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_Ptr_QualityPSNR_delete'."
"Message",Normal,"          P/Invoke 'quality_QualityPSNR_staticCompute' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_QualityPSNR_staticCompute'."
"Message",Normal,"          P/Invoke 'quality_QualityPSNR_getMaxPixelValue' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_QualityPSNR_getMaxPixelValue'."
"Message",Normal,"          P/Invoke 'quality_QualityPSNR_setMaxPixelValue' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_QualityPSNR_setMaxPixelValue'."
"Message",Normal,"          P/Invoke 'quality_Ptr_QualityPSNR_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_Ptr_QualityPSNR_get'."
"Message",Normal,"          P/Invoke 'quality_createQualitySSIM' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_createQualitySSIM'."
"Message",Normal,"          P/Invoke 'quality_Ptr_QualitySSIM_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_Ptr_QualitySSIM_delete'."
"Message",Normal,"          P/Invoke 'quality_Ptr_QualitySSIM_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_Ptr_QualitySSIM_get'."
"Message",Normal,"          P/Invoke 'quality_QualitySSIM_staticCompute' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_QualitySSIM_staticCompute'."
"Message",Normal,"          P/Invoke 'quality_createQualityGMSD' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_createQualityGMSD'."
"Message",Normal,"          P/Invoke 'quality_Ptr_QualityGMSD_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_Ptr_QualityGMSD_delete'."
"Message",Normal,"          P/Invoke 'quality_Ptr_QualityGMSD_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_Ptr_QualityGMSD_get'."
"Message",Normal,"          P/Invoke 'quality_QualityGMSD_staticCompute' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_QualityGMSD_staticCompute'."
"Message",Normal,"          P/Invoke 'quality_createQualityMSE' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_createQualityMSE'."
"Message",Normal,"          P/Invoke 'quality_Ptr_QualityMSE_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_Ptr_QualityMSE_delete'."
"Message",Normal,"          P/Invoke 'quality_Ptr_QualityMSE_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_Ptr_QualityMSE_get'."
"Message",Normal,"          P/Invoke 'quality_QualityMSE_staticCompute' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_QualityMSE_staticCompute'."
"Message",Normal,"          P/Invoke 'quality_createQualityBRISQUE1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_createQualityBRISQUE1'."
"Message",Normal,"          P/Invoke 'quality_createQualityBRISQUE2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_createQualityBRISQUE2'."
"Message",Normal,"          P/Invoke 'quality_Ptr_QualityBRISQUE_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_Ptr_QualityBRISQUE_delete'."
"Message",Normal,"          P/Invoke 'quality_Ptr_QualityBRISQUE_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_Ptr_QualityBRISQUE_get'."
"Message",Normal,"          P/Invoke 'quality_QualityBRISQUE_staticCompute' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_QualityBRISQUE_staticCompute'."
"Message",Normal,"          P/Invoke 'quality_QualityBRISQUE_computeFeatures' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!quality_QualityBRISQUE_computeFeatures'."
"Message",Normal,"          P/Invoke 'string_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!string_new1'."
"Message",Normal,"          P/Invoke 'string_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!string_new2'."
"Message",Normal,"          P/Invoke 'string_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!string_delete'."
"Message",Normal,"          P/Invoke 'string_c_str' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!string_c_str'."
"Message",Normal,"          P/Invoke 'string_size' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!string_size'."
"Message",Normal,"          P/Invoke 'vector_uchar_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_uchar_new1'."
"Message",Normal,"          P/Invoke 'vector_uchar_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_uchar_new2'."
"Message",Normal,"          P/Invoke 'vector_uchar_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_uchar_new3'."
"Message",Normal,"          P/Invoke 'vector_uchar_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_uchar_getSize'."
"Message",Normal,"          P/Invoke 'vector_uchar_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_uchar_getPointer'."
"Message",Normal,"          P/Invoke 'vector_uchar_copy' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_uchar_copy'."
"Message",Normal,"          P/Invoke 'vector_uchar_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_uchar_delete'."
"Message",Normal,"          P/Invoke 'vector_int32_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_int32_new1'."
"Message",Normal,"          P/Invoke 'vector_int32_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_int32_new2'."
"Message",Normal,"          P/Invoke 'vector_int32_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_int32_new3'."
"Message",Normal,"          P/Invoke 'vector_int32_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_int32_getSize'."
"Message",Normal,"          P/Invoke 'vector_int32_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_int32_getPointer'."
"Message",Normal,"          P/Invoke 'vector_int32_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_int32_delete'."
"Message",Normal,"          P/Invoke 'vector_float_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_float_new1'."
"Message",Normal,"          P/Invoke 'vector_float_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_float_new2'."
"Message",Normal,"          P/Invoke 'vector_float_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_float_new3'."
"Message",Normal,"          P/Invoke 'vector_float_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_float_getSize'."
"Message",Normal,"          P/Invoke 'vector_float_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_float_getPointer'."
"Message",Normal,"          P/Invoke 'vector_float_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_float_delete'."
"Message",Normal,"          P/Invoke 'vector_double_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_double_new1'."
"Message",Normal,"          P/Invoke 'vector_double_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_double_new2'."
"Message",Normal,"          P/Invoke 'vector_double_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_double_new3'."
"Message",Normal,"          P/Invoke 'vector_double_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_double_getSize'."
"Message",Normal,"          P/Invoke 'vector_double_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_double_getPointer'."
"Message",Normal,"          P/Invoke 'vector_double_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_double_delete'."
"Message",Normal,"          P/Invoke 'vector_Vec2f_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec2f_new1'."
"Message",Normal,"          P/Invoke 'vector_Vec2f_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec2f_getSize'."
"Message",Normal,"          P/Invoke 'vector_Vec2f_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec2f_getPointer'."
"Message",Normal,"          P/Invoke 'vector_Vec2f_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec2f_delete'."
"Message",Normal,"          P/Invoke 'vector_Vec3f_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec3f_new1'."
"Message",Normal,"          P/Invoke 'vector_Vec3f_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec3f_getSize'."
"Message",Normal,"          P/Invoke 'vector_Vec3f_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec3f_getPointer'."
"Message",Normal,"          P/Invoke 'vector_Vec3f_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec3f_delete'."
"Message",Normal,"          P/Invoke 'vector_Vec4f_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec4f_new1'."
"Message",Normal,"          P/Invoke 'vector_Vec4f_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec4f_new3'."
"Message",Normal,"          P/Invoke 'vector_Vec4f_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec4f_getSize'."
"Message",Normal,"          P/Invoke 'vector_Vec4f_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec4f_getPointer'."
"Message",Normal,"          P/Invoke 'vector_Vec4f_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec4f_delete'."
"Message",Normal,"          P/Invoke 'vector_Vec4i_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec4i_new1'."
"Message",Normal,"          P/Invoke 'vector_Vec4i_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec4i_new3'."
"Message",Normal,"          P/Invoke 'vector_Vec4i_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec4i_getSize'."
"Message",Normal,"          P/Invoke 'vector_Vec4i_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec4i_getPointer'."
"Message",Normal,"          P/Invoke 'vector_Vec4i_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec4i_delete'."
"Message",Normal,"          P/Invoke 'vector_Vec6f_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec6f_new1'."
"Message",Normal,"          P/Invoke 'vector_Vec6f_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec6f_getSize'."
"Message",Normal,"          P/Invoke 'vector_Vec6f_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec6f_getPointer'."
"Message",Normal,"          P/Invoke 'vector_Vec6f_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Vec6f_delete'."
"Message",Normal,"          P/Invoke 'vector_Point2i_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2i_new1'."
"Message",Normal,"          P/Invoke 'vector_Point2i_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2i_new2'."
"Message",Normal,"          P/Invoke 'vector_Point2i_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2i_new3'."
"Message",Normal,"          P/Invoke 'vector_Point2i_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2i_getSize'."
"Message",Normal,"          P/Invoke 'vector_Point2i_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2i_getPointer'."
"Message",Normal,"          P/Invoke 'vector_Point2i_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2i_delete'."
"Message",Normal,"          P/Invoke 'vector_Point2f_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2f_new1'."
"Message",Normal,"          P/Invoke 'vector_Point2f_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2f_new2'."
"Message",Normal,"          P/Invoke 'vector_Point2f_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2f_new3'."
"Message",Normal,"          P/Invoke 'vector_Point2f_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2f_getSize'."
"Message",Normal,"          P/Invoke 'vector_Point2f_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2f_getPointer'."
"Message",Normal,"          P/Invoke 'vector_Point2f_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2f_delete'."
"Message",Normal,"          P/Invoke 'vector_Point2d_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2d_new1'."
"Message",Normal,"          P/Invoke 'vector_Point2d_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2d_getSize'."
"Message",Normal,"          P/Invoke 'vector_Point2d_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2d_getPointer'."
"Message",Normal,"          P/Invoke 'vector_Point2d_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point2d_delete'."
"Message",Normal,"          P/Invoke 'vector_Point3f_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point3f_new1'."
"Message",Normal,"          P/Invoke 'vector_Point3f_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point3f_new2'."
"Message",Normal,"          P/Invoke 'vector_Point3f_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point3f_new3'."
"Message",Normal,"          P/Invoke 'vector_Point3f_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point3f_getSize'."
"Message",Normal,"          P/Invoke 'vector_Point3f_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point3f_getPointer'."
"Message",Normal,"          P/Invoke 'vector_Point3f_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Point3f_delete'."
"Message",Normal,"          P/Invoke 'vector_Rect_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Rect_new1'."
"Message",Normal,"          P/Invoke 'vector_Rect_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Rect_new2'."
"Message",Normal,"          P/Invoke 'vector_Rect_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Rect_new3'."
"Message",Normal,"          P/Invoke 'vector_Rect_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Rect_getSize'."
"Message",Normal,"          P/Invoke 'vector_Rect_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Rect_getPointer'."
"Message",Normal,"          P/Invoke 'vector_Rect_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Rect_delete'."
"Message",Normal,"          P/Invoke 'vector_Rect2d_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Rect2d_new1'."
"Message",Normal,"          P/Invoke 'vector_Rect2d_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Rect2d_new2'."
"Message",Normal,"          P/Invoke 'vector_Rect2d_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Rect2d_new3'."
"Message",Normal,"          P/Invoke 'vector_Rect2d_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Rect2d_getSize'."
"Message",Normal,"          P/Invoke 'vector_Rect2d_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Rect2d_getPointer'."
"Message",Normal,"          P/Invoke 'vector_Rect2d_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Rect2d_delete'."
"Message",Normal,"          P/Invoke 'vector_RotatedRect_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_RotatedRect_new1'."
"Message",Normal,"          P/Invoke 'vector_RotatedRect_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_RotatedRect_new2'."
"Message",Normal,"          P/Invoke 'vector_RotatedRect_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_RotatedRect_new3'."
"Message",Normal,"          P/Invoke 'vector_RotatedRect_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_RotatedRect_getSize'."
"Message",Normal,"          P/Invoke 'vector_RotatedRect_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_RotatedRect_getPointer'."
"Message",Normal,"          P/Invoke 'vector_RotatedRect_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_RotatedRect_delete'."
"Message",Normal,"          P/Invoke 'vector_KeyPoint_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_KeyPoint_new1'."
"Message",Normal,"          P/Invoke 'vector_KeyPoint_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_KeyPoint_new2'."
"Message",Normal,"          P/Invoke 'vector_KeyPoint_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_KeyPoint_new3'."
"Message",Normal,"          P/Invoke 'vector_KeyPoint_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_KeyPoint_getSize'."
"Message",Normal,"          P/Invoke 'vector_KeyPoint_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_KeyPoint_getPointer'."
"Message",Normal,"          P/Invoke 'vector_KeyPoint_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_KeyPoint_delete'."
"Message",Normal,"          P/Invoke 'vector_DMatch_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_DMatch_new1'."
"Message",Normal,"          P/Invoke 'vector_DMatch_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_DMatch_new2'."
"Message",Normal,"          P/Invoke 'vector_DMatch_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_DMatch_new3'."
"Message",Normal,"          P/Invoke 'vector_DMatch_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_DMatch_getSize'."
"Message",Normal,"          P/Invoke 'vector_DMatch_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_DMatch_getPointer'."
"Message",Normal,"          P/Invoke 'vector_DMatch_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_DMatch_delete'."
"Message",Normal,"          P/Invoke 'vector_Mat_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Mat_new1'."
"Message",Normal,"          P/Invoke 'vector_Mat_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Mat_new2'."
"Message",Normal,"          P/Invoke 'vector_Mat_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Mat_new3'."
"Message",Normal,"          P/Invoke 'vector_Mat_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Mat_getSize'."
"Message",Normal,"          P/Invoke 'vector_Mat_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Mat_getPointer'."
"Message",Normal,"          P/Invoke 'vector_Mat_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Mat_delete'."
"Message",Normal,"          P/Invoke 'vector_Mat_assignToArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_Mat_assignToArray'."
"Message",Normal,"          P/Invoke 'vector_DTrees_Node_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_DTrees_Node_new1'."
"Message",Normal,"          P/Invoke 'vector_DTrees_Node_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_DTrees_Node_getSize'."
"Message",Normal,"          P/Invoke 'vector_DTrees_Node_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_DTrees_Node_getPointer'."
"Message",Normal,"          P/Invoke 'vector_DTrees_Node_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_DTrees_Node_delete'."
"Message",Normal,"          P/Invoke 'vector_DTrees_Split_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_DTrees_Split_new1'."
"Message",Normal,"          P/Invoke 'vector_DTrees_Split_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_DTrees_Split_getSize'."
"Message",Normal,"          P/Invoke 'vector_DTrees_Split_getPointer' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_DTrees_Split_getPointer'."
"Message",Normal,"          P/Invoke 'vector_DTrees_Split_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_DTrees_Split_delete'."
"Message",Normal,"          P/Invoke 'vector_ImageFeatures_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_ImageFeatures_new1'."
"Message",Normal,"          P/Invoke 'vector_ImageFeatures_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_ImageFeatures_getSize'."
"Message",Normal,"          P/Invoke 'vector_ImageFeatures_getKeypointsSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_ImageFeatures_getKeypointsSize'."
"Message",Normal,"          P/Invoke 'vector_ImageFeatures_getElements' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_ImageFeatures_getElements'."
"Message",Normal,"          P/Invoke 'vector_ImageFeatures_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_ImageFeatures_delete'."
"Message",Normal,"          P/Invoke 'vector_vector_uchar_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_uchar_new1'."
"Message",Normal,"          P/Invoke 'vector_vector_uchar_getSize1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_uchar_getSize1'."
"Message",Normal,"          P/Invoke 'vector_vector_uchar_getSize2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_uchar_getSize2'."
"Message",Normal,"          P/Invoke 'vector_vector_uchar_copy' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_uchar_copy'."
"Message",Normal,"          P/Invoke 'vector_vector_uchar_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_uchar_delete'."
"Message",Normal,"          P/Invoke 'vector_vector_int_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_int_new1'."
"Message",Normal,"          P/Invoke 'vector_vector_int_getSize1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_int_getSize1'."
"Message",Normal,"          P/Invoke 'vector_vector_int_getSize2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_int_getSize2'."
"Message",Normal,"          P/Invoke 'vector_vector_int_copy' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_int_copy'."
"Message",Normal,"          P/Invoke 'vector_vector_int_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_int_delete'."
"Message",Normal,"          P/Invoke 'vector_vector_double_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_double_new1'."
"Message",Normal,"          P/Invoke 'vector_vector_double_getSize1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_double_getSize1'."
"Message",Normal,"          P/Invoke 'vector_vector_double_getSize2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_double_getSize2'."
"Message",Normal,"          P/Invoke 'vector_vector_double_copy' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_double_copy'."
"Message",Normal,"          P/Invoke 'vector_vector_double_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_double_delete'."
"Message",Normal,"          P/Invoke 'vector_vector_KeyPoint_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_KeyPoint_new1'."
"Message",Normal,"          P/Invoke 'vector_vector_KeyPoint_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_KeyPoint_new3'."
"Message",Normal,"          P/Invoke 'vector_vector_KeyPoint_getSize1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_KeyPoint_getSize1'."
"Message",Normal,"          P/Invoke 'vector_vector_KeyPoint_getSize2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_KeyPoint_getSize2'."
"Message",Normal,"          P/Invoke 'vector_vector_KeyPoint_copy' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_KeyPoint_copy'."
"Message",Normal,"          P/Invoke 'vector_vector_KeyPoint_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_KeyPoint_delete'."
"Message",Normal,"          P/Invoke 'vector_vector_DMatch_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_DMatch_new1'."
"Message",Normal,"          P/Invoke 'vector_vector_DMatch_getSize1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_DMatch_getSize1'."
"Message",Normal,"          P/Invoke 'vector_vector_DMatch_getSize2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_DMatch_getSize2'."
"Message",Normal,"          P/Invoke 'vector_vector_DMatch_copy' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_DMatch_copy'."
"Message",Normal,"          P/Invoke 'vector_vector_DMatch_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_DMatch_delete'."
"Message",Normal,"          P/Invoke 'vector_vector_Point_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_Point_new1'."
"Message",Normal,"          P/Invoke 'vector_vector_Point_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_Point_new2'."
"Message",Normal,"          P/Invoke 'vector_vector_Point_getSize1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_Point_getSize1'."
"Message",Normal,"          P/Invoke 'vector_vector_Point_getSize2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_Point_getSize2'."
"Message",Normal,"          P/Invoke 'vector_vector_Point_copy' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_Point_copy'."
"Message",Normal,"          P/Invoke 'vector_vector_Point_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_Point_delete'."
"Message",Normal,"          P/Invoke 'vector_vector_Point2f_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_Point2f_new1'."
"Message",Normal,"          P/Invoke 'vector_vector_Point2f_getSize1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_Point2f_getSize1'."
"Message",Normal,"          P/Invoke 'vector_vector_Point2f_getSize2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_Point2f_getSize2'."
"Message",Normal,"          P/Invoke 'vector_vector_Point2f_copy' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_Point2f_copy'."
"Message",Normal,"          P/Invoke 'vector_vector_Point2f_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_vector_Point2f_delete'."
"Message",Normal,"          P/Invoke 'vector_string_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_string_new1'."
"Message",Normal,"          P/Invoke 'vector_string_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_string_new2'."
"Message",Normal,"          P/Invoke 'vector_string_getSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_string_getSize'."
"Message",Normal,"          P/Invoke 'vector_string_getElements' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_string_getElements'."
"Message",Normal,"          P/Invoke 'vector_string_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!vector_string_delete'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_new1'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_new2'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_new3'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_new4' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_new4'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_new5' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_new5'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_delete'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_open1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_open1'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_open2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_open2'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_isOpened' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_isOpened'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_release' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_release'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_grab' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_grab'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_retrieve_OutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_retrieve_OutputArray'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_retrieve_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_retrieve_Mat'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_operatorRightShift_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_operatorRightShift_Mat'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_read_OutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_read_OutputArray'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_read_Mat' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_read_Mat'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_set'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_get'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_getBackendName' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_getBackendName'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_setExceptionMode' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_setExceptionMode'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_getExceptionMode' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_getExceptionMode'."
"Message",Normal,"          P/Invoke 'videoio_VideoCapture_waitAny' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoCapture_waitAny'."
"Message",Normal,"          P/Invoke 'videoio_VideoWriter_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoWriter_new1'."
"Message",Normal,"          P/Invoke 'videoio_VideoWriter_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoWriter_new2'."
"Message",Normal,"          P/Invoke 'videoio_VideoWriter_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoWriter_new3'."
"Message",Normal,"          P/Invoke 'videoio_VideoWriter_new4' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoWriter_new4'."
"Message",Normal,"          P/Invoke 'videoio_VideoWriter_new5' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoWriter_new5'."
"Message",Normal,"          P/Invoke 'videoio_VideoWriter_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoWriter_delete'."
"Message",Normal,"          P/Invoke 'videoio_VideoWriter_open1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoWriter_open1'."
"Message",Normal,"          P/Invoke 'videoio_VideoWriter_open2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoWriter_open2'."
"Message",Normal,"          P/Invoke 'videoio_VideoWriter_isOpened' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoWriter_isOpened'."
"Message",Normal,"          P/Invoke 'videoio_VideoWriter_release' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoWriter_release'."
"Message",Normal,"          P/Invoke 'videoio_VideoWriter_write' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoWriter_write'."
"Message",Normal,"          P/Invoke 'videoio_VideoWriter_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoWriter_set'."
"Message",Normal,"          P/Invoke 'videoio_VideoWriter_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoWriter_get'."
"Message",Normal,"          P/Invoke 'videoio_VideoWriter_fourcc' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoWriter_fourcc'."
"Message",Normal,"          P/Invoke 'videoio_VideoWriter_getBackendName' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!videoio_VideoWriter_getBackendName'."
"Message",Normal,"          P/Invoke 'wechat_qrcode_create1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!wechat_qrcode_create1'."
"Message",Normal,"          P/Invoke 'wechat_qrcode_WeChatQRCode_detectAndDecode' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!wechat_qrcode_WeChatQRCode_detectAndDecode'."
"Message",Normal,"          P/Invoke 'wechat_qrcode_Ptr_WeChatQRCode_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!wechat_qrcode_Ptr_WeChatQRCode_get'."
"Message",Normal,"          P/Invoke 'wechat_qrcode_Ptr_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!wechat_qrcode_Ptr_delete'."
"Message",Normal,"          P/Invoke 'xfeatures2d_BriefDescriptorExtractor_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_BriefDescriptorExtractor_create'."
"Message",Normal,"          P/Invoke 'xfeatures2d_Ptr_BriefDescriptorExtractor_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_Ptr_BriefDescriptorExtractor_delete'."
"Message",Normal,"          P/Invoke 'xfeatures2d_BriefDescriptorExtractor_read' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_BriefDescriptorExtractor_read'."
"Message",Normal,"          P/Invoke 'xfeatures2d_BriefDescriptorExtractor_write' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_BriefDescriptorExtractor_write'."
"Message",Normal,"          P/Invoke 'xfeatures2d_BriefDescriptorExtractor_descriptorSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_BriefDescriptorExtractor_descriptorSize'."
"Message",Normal,"          P/Invoke 'xfeatures2d_BriefDescriptorExtractor_descriptorType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_BriefDescriptorExtractor_descriptorType'."
"Message",Normal,"          P/Invoke 'xfeatures2d_Ptr_BriefDescriptorExtractor_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_Ptr_BriefDescriptorExtractor_get'."
"Message",Normal,"          P/Invoke 'xfeatures2d_FREAK_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_FREAK_create'."
"Message",Normal,"          P/Invoke 'xfeatures2d_Ptr_FREAK_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_Ptr_FREAK_delete'."
"Message",Normal,"          P/Invoke 'xfeatures2d_Ptr_FREAK_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_Ptr_FREAK_get'."
"Message",Normal,"          P/Invoke 'xfeatures2d_StarDetector_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_StarDetector_create'."
"Message",Normal,"          P/Invoke 'xfeatures2d_Ptr_StarDetector_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_Ptr_StarDetector_delete'."
"Message",Normal,"          P/Invoke 'xfeatures2d_Ptr_StarDetector_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_Ptr_StarDetector_get'."
"Message",Normal,"          P/Invoke 'xfeatures2d_LUCID_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_LUCID_create'."
"Message",Normal,"          P/Invoke 'xfeatures2d_Ptr_LUCID_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_Ptr_LUCID_delete'."
"Message",Normal,"          P/Invoke 'xfeatures2d_Ptr_LUCID_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_Ptr_LUCID_get'."
"Message",Normal,"          P/Invoke 'xfeatures2d_LATCH_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_LATCH_create'."
"Message",Normal,"          P/Invoke 'xfeatures2d_Ptr_LATCH_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_Ptr_LATCH_delete'."
"Message",Normal,"          P/Invoke 'xfeatures2d_Ptr_LATCH_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_Ptr_LATCH_get'."
"Message",Normal,"          P/Invoke 'xfeatures2d_SURF_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_SURF_create'."
"Message",Normal,"          P/Invoke 'xfeatures2d_Ptr_SURF_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_Ptr_SURF_delete'."
"Message",Normal,"          P/Invoke 'xfeatures2d_Ptr_SURF_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_Ptr_SURF_get'."
"Message",Normal,"          P/Invoke 'xfeatures2d_SURF_getHessianThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_SURF_getHessianThreshold'."
"Message",Normal,"          P/Invoke 'xfeatures2d_SURF_getNOctaves' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_SURF_getNOctaves'."
"Message",Normal,"          P/Invoke 'xfeatures2d_SURF_getNOctaveLayers' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_SURF_getNOctaveLayers'."
"Message",Normal,"          P/Invoke 'xfeatures2d_SURF_getExtended' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_SURF_getExtended'."
"Message",Normal,"          P/Invoke 'xfeatures2d_SURF_getUpright' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_SURF_getUpright'."
"Message",Normal,"          P/Invoke 'xfeatures2d_SURF_setHessianThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_SURF_setHessianThreshold'."
"Message",Normal,"          P/Invoke 'xfeatures2d_SURF_setNOctaves' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_SURF_setNOctaves'."
"Message",Normal,"          P/Invoke 'xfeatures2d_SURF_setNOctaveLayers' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_SURF_setNOctaveLayers'."
"Message",Normal,"          P/Invoke 'xfeatures2d_SURF_setExtended' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_SURF_setExtended'."
"Message",Normal,"          P/Invoke 'xfeatures2d_SURF_setUpright' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xfeatures2d_SURF_setUpright'."
"Message",Normal,"          P/Invoke 'xphoto_bm3dDenoising1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_bm3dDenoising1'."
"Message",Normal,"          P/Invoke 'xphoto_bm3dDenoising2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_bm3dDenoising2'."
"Message",Normal,"          P/Invoke 'xphoto_dctDenoising' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_dctDenoising'."
"Message",Normal,"          P/Invoke 'xphoto_inpaint' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_inpaint'."
"Message",Normal,"          P/Invoke 'xphoto_oilPainting' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_oilPainting'."
"Message",Normal,"          P/Invoke 'xphoto_TonemapDurand_getSaturation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_TonemapDurand_getSaturation'."
"Message",Normal,"          P/Invoke 'xphoto_TonemapDurand_setSaturation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_TonemapDurand_setSaturation'."
"Message",Normal,"          P/Invoke 'xphoto_TonemapDurand_getContrast' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_TonemapDurand_getContrast'."
"Message",Normal,"          P/Invoke 'xphoto_TonemapDurand_setContrast' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_TonemapDurand_setContrast'."
"Message",Normal,"          P/Invoke 'xphoto_TonemapDurand_getSigmaSpace' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_TonemapDurand_getSigmaSpace'."
"Message",Normal,"          P/Invoke 'xphoto_TonemapDurand_setSigmaSpace' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_TonemapDurand_setSigmaSpace'."
"Message",Normal,"          P/Invoke 'xphoto_TonemapDurand_getSigmaColor' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_TonemapDurand_getSigmaColor'."
"Message",Normal,"          P/Invoke 'xphoto_TonemapDurand_setSigmaColor' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_TonemapDurand_setSigmaColor'."
"Message",Normal,"          P/Invoke 'xphoto_createTonemapDurand' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_createTonemapDurand'."
"Message",Normal,"          P/Invoke 'xphoto_Ptr_TonemapDurand_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_Ptr_TonemapDurand_delete'."
"Message",Normal,"          P/Invoke 'xphoto_Ptr_TonemapDurand_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_Ptr_TonemapDurand_get'."
"Message",Normal,"          P/Invoke 'xphoto_applyChannelGains' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_applyChannelGains'."
"Message",Normal,"          P/Invoke 'xphoto_createGrayworldWB' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_createGrayworldWB'."
"Message",Normal,"          P/Invoke 'xphoto_Ptr_GrayworldWB_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_Ptr_GrayworldWB_delete'."
"Message",Normal,"          P/Invoke 'xphoto_Ptr_GrayworldWB_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_Ptr_GrayworldWB_get'."
"Message",Normal,"          P/Invoke 'xphoto_GrayworldWB_balanceWhite' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_GrayworldWB_balanceWhite'."
"Message",Normal,"          P/Invoke 'xphoto_GrayworldWB_SaturationThreshold_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_GrayworldWB_SaturationThreshold_get'."
"Message",Normal,"          P/Invoke 'xphoto_GrayworldWB_SaturationThreshold_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_GrayworldWB_SaturationThreshold_set'."
"Message",Normal,"          P/Invoke 'xphoto_createLearningBasedWB' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_createLearningBasedWB'."
"Message",Normal,"          P/Invoke 'xphoto_Ptr_LearningBasedWB_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_Ptr_LearningBasedWB_delete'."
"Message",Normal,"          P/Invoke 'xphoto_Ptr_LearningBasedWB_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_Ptr_LearningBasedWB_get'."
"Message",Normal,"          P/Invoke 'xphoto_LearningBasedWB_balanceWhite' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_LearningBasedWB_balanceWhite'."
"Message",Normal,"          P/Invoke 'xphoto_LearningBasedWB_extractSimpleFeatures' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_LearningBasedWB_extractSimpleFeatures'."
"Message",Normal,"          P/Invoke 'xphoto_LearningBasedWB_HistBinNum_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_LearningBasedWB_HistBinNum_set'."
"Message",Normal,"          P/Invoke 'xphoto_LearningBasedWB_RangeMaxVal_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_LearningBasedWB_RangeMaxVal_set'."
"Message",Normal,"          P/Invoke 'xphoto_LearningBasedWB_SaturationThreshold_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_LearningBasedWB_SaturationThreshold_set'."
"Message",Normal,"          P/Invoke 'xphoto_LearningBasedWB_HistBinNum_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_LearningBasedWB_HistBinNum_get'."
"Message",Normal,"          P/Invoke 'xphoto_LearningBasedWB_RangeMaxVal_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_LearningBasedWB_RangeMaxVal_get'."
"Message",Normal,"          P/Invoke 'xphoto_LearningBasedWB_SaturationThreshold_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_LearningBasedWB_SaturationThreshold_get'."
"Message",Normal,"          P/Invoke 'xphoto_createSimpleWB' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_createSimpleWB'."
"Message",Normal,"          P/Invoke 'xphoto_Ptr_SimpleWB_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_Ptr_SimpleWB_delete'."
"Message",Normal,"          P/Invoke 'xphoto_Ptr_SimpleWB_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_Ptr_SimpleWB_get'."
"Message",Normal,"          P/Invoke 'xphoto_SimpleWB_balanceWhite' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_SimpleWB_balanceWhite'."
"Message",Normal,"          P/Invoke 'xphoto_SimpleWB_InputMax_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_SimpleWB_InputMax_get'."
"Message",Normal,"          P/Invoke 'xphoto_SimpleWB_InputMax_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_SimpleWB_InputMax_set'."
"Message",Normal,"          P/Invoke 'xphoto_SimpleWB_InputMin_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_SimpleWB_InputMin_get'."
"Message",Normal,"          P/Invoke 'xphoto_SimpleWB_InputMin_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_SimpleWB_InputMin_set'."
"Message",Normal,"          P/Invoke 'xphoto_SimpleWB_OutputMax_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_SimpleWB_OutputMax_get'."
"Message",Normal,"          P/Invoke 'xphoto_SimpleWB_OutputMax_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_SimpleWB_OutputMax_set'."
"Message",Normal,"          P/Invoke 'xphoto_SimpleWB_OutputMin_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_SimpleWB_OutputMin_get'."
"Message",Normal,"          P/Invoke 'xphoto_SimpleWB_OutputMin_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_SimpleWB_OutputMin_set'."
"Message",Normal,"          P/Invoke 'xphoto_SimpleWB_P_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_SimpleWB_P_get'."
"Message",Normal,"          P/Invoke 'xphoto_SimpleWB_P_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!xphoto_SimpleWB_P_set'."
"Message",Normal,"          P/Invoke 'objdetect_groupRectangles1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_groupRectangles1'."
"Message",Normal,"          P/Invoke 'objdetect_groupRectangles2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_groupRectangles2'."
"Message",Normal,"          P/Invoke 'objdetect_groupRectangles3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_groupRectangles3'."
"Message",Normal,"          P/Invoke 'objdetect_groupRectangles4' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_groupRectangles4'."
"Message",Normal,"          P/Invoke 'objdetect_groupRectangles_meanshift' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_groupRectangles_meanshift'."
"Message",Normal,"          P/Invoke 'objdetect_CascadeClassifier_read' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_CascadeClassifier_read'."
"Message",Normal,"          P/Invoke 'objdetect_CascadeClassifier_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_CascadeClassifier_new'."
"Message",Normal,"          P/Invoke 'objdetect_CascadeClassifier_newFromFile' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_CascadeClassifier_newFromFile'."
"Message",Normal,"          P/Invoke 'objdetect_CascadeClassifier_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_CascadeClassifier_delete'."
"Message",Normal,"          P/Invoke 'objdetect_CascadeClassifier_empty' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_CascadeClassifier_empty'."
"Message",Normal,"          P/Invoke 'objdetect_CascadeClassifier_load' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_CascadeClassifier_load'."
"Message",Normal,"          P/Invoke 'objdetect_CascadeClassifier_detectMultiScale1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_CascadeClassifier_detectMultiScale1'."
"Message",Normal,"          P/Invoke 'objdetect_CascadeClassifier_detectMultiScale2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_CascadeClassifier_detectMultiScale2'."
"Message",Normal,"          P/Invoke 'objdetect_CascadeClassifier_isOldFormatCascade' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_CascadeClassifier_isOldFormatCascade'."
"Message",Normal,"          P/Invoke 'objdetect_CascadeClassifier_getOriginalWindowSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_CascadeClassifier_getOriginalWindowSize'."
"Message",Normal,"          P/Invoke 'objdetect_CascadeClassifier_getFeatureType' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_CascadeClassifier_getFeatureType'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_new1'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_new2'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_new3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_new3'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_delete'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_getDescriptorSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_getDescriptorSize'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_checkDetectorSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_checkDetectorSize'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_getWinSigma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_getWinSigma'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_setSVMDetector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_setSVMDetector'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_load' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_load'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_save' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_save'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_compute' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_compute'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_detect1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_detect1'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_detect2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_detect2'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_detectMultiScale1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_detectMultiScale1'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_detectMultiScale2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_detectMultiScale2'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_computeGradient' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_computeGradient'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_detectROI' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_detectROI'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_detectMultiScaleROI' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_detectMultiScaleROI'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_groupRectangles' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_groupRectangles'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_winSize_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_winSize_get'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_blockSize_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_blockSize_get'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_blockStride_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_blockStride_get'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_cellSize_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_cellSize_get'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_nbins_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_nbins_get'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_derivAperture_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_derivAperture_get'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_winSigma_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_winSigma_get'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_histogramNormType_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_histogramNormType_get'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_L2HysThreshold_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_L2HysThreshold_get'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_gammaCorrection_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_gammaCorrection_get'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_nlevels_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_nlevels_get'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_signedGradient_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_signedGradient_get'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_winSize_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_winSize_set'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_blockSize_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_blockSize_set'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_blockStride_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_blockStride_set'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_cellSize_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_cellSize_set'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_nbins_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_nbins_set'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_derivAperture_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_derivAperture_set'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_winSigma_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_winSigma_set'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_histogramNormType_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_histogramNormType_set'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_L2HysThreshold_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_L2HysThreshold_set'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_gammaCorrection_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_gammaCorrection_set'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_nlevels_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_nlevels_set'."
"Message",Normal,"          P/Invoke 'objdetect_HOGDescriptor_signedGradient_set' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_HOGDescriptor_signedGradient_set'."
"Message",Normal,"          P/Invoke 'objdetect_QRCodeDetector_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_QRCodeDetector_new'."
"Message",Normal,"          P/Invoke 'objdetect_QRCodeDetector_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_QRCodeDetector_delete'."
"Message",Normal,"          P/Invoke 'objdetect_QRCodeDetector_setEpsX' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_QRCodeDetector_setEpsX'."
"Message",Normal,"          P/Invoke 'objdetect_QRCodeDetector_setEpsY' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_QRCodeDetector_setEpsY'."
"Message",Normal,"          P/Invoke 'objdetect_QRCodeDetector_detect' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_QRCodeDetector_detect'."
"Message",Normal,"          P/Invoke 'objdetect_QRCodeDetector_decode' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_QRCodeDetector_decode'."
"Message",Normal,"          P/Invoke 'objdetect_QRCodeDetector_detectAndDecode' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_QRCodeDetector_detectAndDecode'."
"Message",Normal,"          P/Invoke 'objdetect_QRCodeDetector_detectMulti' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_QRCodeDetector_detectMulti'."
"Message",Normal,"          P/Invoke 'objdetect_QRCodeDetector_decodeMulti' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_QRCodeDetector_decodeMulti'."
"Message",Normal,"          P/Invoke 'objdetect_QRCodeDetector_decodeMulti_NoStraightQrCode' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!objdetect_QRCodeDetector_decodeMulti_NoStraightQrCode'."
"Message",Normal,"          P/Invoke 'photo_inpaint' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_inpaint'."
"Message",Normal,"          P/Invoke 'photo_fastNlMeansDenoising' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_fastNlMeansDenoising'."
"Message",Normal,"          P/Invoke 'photo_fastNlMeansDenoisingColored' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_fastNlMeansDenoisingColored'."
"Message",Normal,"          P/Invoke 'photo_fastNlMeansDenoisingMulti' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_fastNlMeansDenoisingMulti'."
"Message",Normal,"          P/Invoke 'photo_fastNlMeansDenoisingColoredMulti' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_fastNlMeansDenoisingColoredMulti'."
"Message",Normal,"          P/Invoke 'photo_denoise_TVL1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_denoise_TVL1'."
"Message",Normal,"          P/Invoke 'photo_decolor' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_decolor'."
"Message",Normal,"          P/Invoke 'photo_seamlessClone' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_seamlessClone'."
"Message",Normal,"          P/Invoke 'photo_colorChange' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_colorChange'."
"Message",Normal,"          P/Invoke 'photo_illuminationChange' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_illuminationChange'."
"Message",Normal,"          P/Invoke 'photo_textureFlattening' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_textureFlattening'."
"Message",Normal,"          P/Invoke 'photo_edgePreservingFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_edgePreservingFilter'."
"Message",Normal,"          P/Invoke 'photo_detailEnhance' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_detailEnhance'."
"Message",Normal,"          P/Invoke 'photo_pencilSketch' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_pencilSketch'."
"Message",Normal,"          P/Invoke 'photo_stylization' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_stylization'."
"Message",Normal,"          P/Invoke 'photo_createCalibrateDebevec' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_createCalibrateDebevec'."
"Message",Normal,"          P/Invoke 'photo_Ptr_CalibrateDebevec_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_CalibrateDebevec_delete'."
"Message",Normal,"          P/Invoke 'photo_Ptr_CalibrateDebevec_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_CalibrateDebevec_get'."
"Message",Normal,"          P/Invoke 'photo_CalibrateDebevec_getLambda' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_CalibrateDebevec_getLambda'."
"Message",Normal,"          P/Invoke 'photo_CalibrateDebevec_setLambda' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_CalibrateDebevec_setLambda'."
"Message",Normal,"          P/Invoke 'photo_CalibrateDebevec_getSamples' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_CalibrateDebevec_getSamples'."
"Message",Normal,"          P/Invoke 'photo_CalibrateDebevec_setSamples' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_CalibrateDebevec_setSamples'."
"Message",Normal,"          P/Invoke 'photo_CalibrateDebevec_getRandom' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_CalibrateDebevec_getRandom'."
"Message",Normal,"          P/Invoke 'photo_CalibrateDebevec_setRandom' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_CalibrateDebevec_setRandom'."
"Message",Normal,"          P/Invoke 'photo_createCalibrateRobertson' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_createCalibrateRobertson'."
"Message",Normal,"          P/Invoke 'photo_Ptr_CalibrateRobertson_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_CalibrateRobertson_delete'."
"Message",Normal,"          P/Invoke 'photo_Ptr_CalibrateRobertson_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_CalibrateRobertson_get'."
"Message",Normal,"          P/Invoke 'photo_CalibrateRobertson_getMaxIter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_CalibrateRobertson_getMaxIter'."
"Message",Normal,"          P/Invoke 'photo_CalibrateRobertson_setMaxIter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_CalibrateRobertson_setMaxIter'."
"Message",Normal,"          P/Invoke 'photo_CalibrateRobertson_getThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_CalibrateRobertson_getThreshold'."
"Message",Normal,"          P/Invoke 'photo_CalibrateRobertson_setThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_CalibrateRobertson_setThreshold'."
"Message",Normal,"          P/Invoke 'photo_CalibrateRobertson_getRadiance' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_CalibrateRobertson_getRadiance'."
"Message",Normal,"          P/Invoke 'photo_CalibrateCRF_process' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_CalibrateCRF_process'."
"Message",Normal,"          P/Invoke 'photo_createMergeDebevec' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_createMergeDebevec'."
"Message",Normal,"          P/Invoke 'photo_Ptr_MergeDebevec_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_MergeDebevec_delete'."
"Message",Normal,"          P/Invoke 'photo_Ptr_MergeDebevec_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_MergeDebevec_get'."
"Message",Normal,"          P/Invoke 'photo_createMergeMertens' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_createMergeMertens'."
"Message",Normal,"          P/Invoke 'photo_Ptr_MergeMertens_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_MergeMertens_delete'."
"Message",Normal,"          P/Invoke 'photo_Ptr_MergeMertens_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_MergeMertens_get'."
"Message",Normal,"          P/Invoke 'photo_MergeExposures_process' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_MergeExposures_process'."
"Message",Normal,"          P/Invoke 'photo_MergeMertens_process' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_MergeMertens_process'."
"Message",Normal,"          P/Invoke 'photo_Tonemap_process' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Tonemap_process'."
"Message",Normal,"          P/Invoke 'photo_Tonemap_getGamma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Tonemap_getGamma'."
"Message",Normal,"          P/Invoke 'photo_Tonemap_setGamma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Tonemap_setGamma'."
"Message",Normal,"          P/Invoke 'photo_createTonemap' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_createTonemap'."
"Message",Normal,"          P/Invoke 'photo_Ptr_Tonemap_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_Tonemap_delete'."
"Message",Normal,"          P/Invoke 'photo_Ptr_Tonemap_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_Tonemap_get'."
"Message",Normal,"          P/Invoke 'photo_TonemapDrago_getSaturation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_TonemapDrago_getSaturation'."
"Message",Normal,"          P/Invoke 'photo_TonemapDrago_setSaturation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_TonemapDrago_setSaturation'."
"Message",Normal,"          P/Invoke 'photo_TonemapDrago_getBias' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_TonemapDrago_getBias'."
"Message",Normal,"          P/Invoke 'photo_TonemapDrago_setBias' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_TonemapDrago_setBias'."
"Message",Normal,"          P/Invoke 'photo_createTonemapDrago' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_createTonemapDrago'."
"Message",Normal,"          P/Invoke 'photo_Ptr_TonemapDrago_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_TonemapDrago_delete'."
"Message",Normal,"          P/Invoke 'photo_Ptr_TonemapDrago_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_TonemapDrago_get'."
"Message",Normal,"          P/Invoke 'photo_TonemapReinhard_getIntensity' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_TonemapReinhard_getIntensity'."
"Message",Normal,"          P/Invoke 'photo_TonemapReinhard_setIntensity' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_TonemapReinhard_setIntensity'."
"Message",Normal,"          P/Invoke 'photo_TonemapReinhard_getLightAdaptation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_TonemapReinhard_getLightAdaptation'."
"Message",Normal,"          P/Invoke 'photo_TonemapReinhard_setLightAdaptation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_TonemapReinhard_setLightAdaptation'."
"Message",Normal,"          P/Invoke 'photo_TonemapReinhard_getColorAdaptation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_TonemapReinhard_getColorAdaptation'."
"Message",Normal,"          P/Invoke 'photo_TonemapReinhard_setColorAdaptation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_TonemapReinhard_setColorAdaptation'."
"Message",Normal,"          P/Invoke 'photo_createTonemapReinhard' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_createTonemapReinhard'."
"Message",Normal,"          P/Invoke 'photo_Ptr_TonemapReinhard_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_TonemapReinhard_delete'."
"Message",Normal,"          P/Invoke 'photo_Ptr_TonemapReinhard_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_TonemapReinhard_get'."
"Message",Normal,"          P/Invoke 'photo_TonemapMantiuk_getScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_TonemapMantiuk_getScale'."
"Message",Normal,"          P/Invoke 'photo_TonemapMantiuk_setScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_TonemapMantiuk_setScale'."
"Message",Normal,"          P/Invoke 'photo_TonemapMantiuk_getSaturation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_TonemapMantiuk_getSaturation'."
"Message",Normal,"          P/Invoke 'photo_TonemapMantiuk_setSaturation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_TonemapMantiuk_setSaturation'."
"Message",Normal,"          P/Invoke 'photo_createTonemapMantiuk' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_createTonemapMantiuk'."
"Message",Normal,"          P/Invoke 'photo_Ptr_TonemapMantiuk_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_TonemapMantiuk_delete'."
"Message",Normal,"          P/Invoke 'photo_Ptr_TonemapMantiuk_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!photo_Ptr_TonemapMantiuk_get'."
"Message",Normal,"          P/Invoke 'shape_ShapeDistanceExtractor_computeDistance' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeDistanceExtractor_computeDistance'."
"Message",Normal,"          P/Invoke 'shape_Ptr_ShapeContextDistanceExtractor_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_Ptr_ShapeContextDistanceExtractor_delete'."
"Message",Normal,"          P/Invoke 'shape_Ptr_ShapeContextDistanceExtractor_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_Ptr_ShapeContextDistanceExtractor_get'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_setAngularBins' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_setAngularBins'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_getAngularBins' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_getAngularBins'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_setRadialBins' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_setRadialBins'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_getRadialBins' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_getRadialBins'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_setInnerRadius' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_setInnerRadius'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_getInnerRadius' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_getInnerRadius'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_setOuterRadius' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_setOuterRadius'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_getOuterRadius' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_getOuterRadius'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_setRotationInvariant' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_setRotationInvariant'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_getRotationInvariant' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_getRotationInvariant'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_setShapeContextWeight' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_setShapeContextWeight'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_getShapeContextWeight' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_getShapeContextWeight'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_setImageAppearanceWeight' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_setImageAppearanceWeight'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_getImageAppearanceWeight' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_getImageAppearanceWeight'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_setBendingEnergyWeight' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_setBendingEnergyWeight'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_getBendingEnergyWeight' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_getBendingEnergyWeight'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_setImages' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_setImages'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_getImages' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_getImages'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_setIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_setIterations'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_getIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_getIterations'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_setStdDev' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_setStdDev'."
"Message",Normal,"          P/Invoke 'shape_ShapeContextDistanceExtractor_getStdDev' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_ShapeContextDistanceExtractor_getStdDev'."
"Message",Normal,"          P/Invoke 'shape_createShapeContextDistanceExtractor' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_createShapeContextDistanceExtractor'."
"Message",Normal,"          P/Invoke 'shape_Ptr_HausdorffDistanceExtractor_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_Ptr_HausdorffDistanceExtractor_delete'."
"Message",Normal,"          P/Invoke 'shape_Ptr_HausdorffDistanceExtractor_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_Ptr_HausdorffDistanceExtractor_get'."
"Message",Normal,"          P/Invoke 'shape_HausdorffDistanceExtractor_setDistanceFlag' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_HausdorffDistanceExtractor_setDistanceFlag'."
"Message",Normal,"          P/Invoke 'shape_HausdorffDistanceExtractor_getDistanceFlag' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_HausdorffDistanceExtractor_getDistanceFlag'."
"Message",Normal,"          P/Invoke 'shape_HausdorffDistanceExtractor_setRankProportion' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_HausdorffDistanceExtractor_setRankProportion'."
"Message",Normal,"          P/Invoke 'shape_HausdorffDistanceExtractor_getRankProportion' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_HausdorffDistanceExtractor_getRankProportion'."
"Message",Normal,"          P/Invoke 'shape_createHausdorffDistanceExtractor' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!shape_createHausdorffDistanceExtractor'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_create'."
"Message",Normal,"          P/Invoke 'stitching_Ptr_Stitcher_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Ptr_Stitcher_delete'."
"Message",Normal,"          P/Invoke 'stitching_Ptr_Stitcher_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Ptr_Stitcher_get'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_registrationResol' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_registrationResol'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_setRegistrationResol' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_setRegistrationResol'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_seamEstimationResol' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_seamEstimationResol'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_setSeamEstimationResol' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_setSeamEstimationResol'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_compositingResol' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_compositingResol'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_setCompositingResol' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_setCompositingResol'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_panoConfidenceThresh' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_panoConfidenceThresh'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_setPanoConfidenceThresh' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_setPanoConfidenceThresh'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_waveCorrection' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_waveCorrection'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_setWaveCorrection' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_setWaveCorrection'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_waveCorrectKind' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_waveCorrectKind'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_setWaveCorrectKind' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_setWaveCorrectKind'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_estimateTransform_InputArray1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_estimateTransform_InputArray1'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_estimateTransform_InputArray2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_estimateTransform_InputArray2'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_estimateTransform_MatArray1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_estimateTransform_MatArray1'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_estimateTransform_MatArray2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_estimateTransform_MatArray2'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_composePanorama1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_composePanorama1'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_composePanorama2_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_composePanorama2_InputArray'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_composePanorama2_MatArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_composePanorama2_MatArray'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_stitch1_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_stitch1_InputArray'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_stitch1_MatArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_stitch1_MatArray'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_stitch2_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_stitch2_InputArray'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_stitch2_MatArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_stitch2_MatArray'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_component' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_component'."
"Message",Normal,"          P/Invoke 'stitching_Stitcher_workScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_Stitcher_workScale'."
"Message",Normal,"          P/Invoke 'stitching_computeImageFeatures1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_computeImageFeatures1'."
"Message",Normal,"          P/Invoke 'stitching_computeImageFeatures2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_computeImageFeatures2'."
"Message",Normal,"          P/Invoke 'stitching_FeaturesMatcher_apply' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_FeaturesMatcher_apply'."
"Message",Normal,"          P/Invoke 'stitching_FeaturesMatcher_apply2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_FeaturesMatcher_apply2'."
"Message",Normal,"          P/Invoke 'stitching_FeaturesMatcher_isThreadSafe' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_FeaturesMatcher_isThreadSafe'."
"Message",Normal,"          P/Invoke 'stitching_FeaturesMatcher_collectGarbage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_FeaturesMatcher_collectGarbage'."
"Message",Normal,"          P/Invoke 'stitching_BestOf2NearestMatcher_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_BestOf2NearestMatcher_new'."
"Message",Normal,"          P/Invoke 'stitching_BestOf2NearestMatcher_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_BestOf2NearestMatcher_delete'."
"Message",Normal,"          P/Invoke 'stitching_BestOf2NearestMatcher_collectGarbage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_BestOf2NearestMatcher_collectGarbage'."
"Message",Normal,"          P/Invoke 'stitching_AffineBestOf2NearestMatcher_new' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_AffineBestOf2NearestMatcher_new'."
"Message",Normal,"          P/Invoke 'stitching_AffineBestOf2NearestMatcher_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!stitching_AffineBestOf2NearestMatcher_delete'."
"Message",Normal,"          P/Invoke 'superres_DenseOpticalFlowExt_calc' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DenseOpticalFlowExt_calc'."
"Message",Normal,"          P/Invoke 'superres_DenseOpticalFlowExt_collectGarbage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DenseOpticalFlowExt_collectGarbage'."
"Message",Normal,"          P/Invoke 'superres_createOptFlow_Farneback' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_createOptFlow_Farneback'."
"Message",Normal,"          P/Invoke 'superres_createOptFlow_Farneback_CUDA' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_createOptFlow_Farneback_CUDA'."
"Message",Normal,"          P/Invoke 'superres_Ptr_FarnebackOpticalFlow_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_Ptr_FarnebackOpticalFlow_get'."
"Message",Normal,"          P/Invoke 'superres_Ptr_FarnebackOpticalFlow_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_Ptr_FarnebackOpticalFlow_delete'."
"Message",Normal,"          P/Invoke 'superres_FarnebackOpticalFlow_getPyrScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FarnebackOpticalFlow_getPyrScale'."
"Message",Normal,"          P/Invoke 'superres_FarnebackOpticalFlow_setPyrScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FarnebackOpticalFlow_setPyrScale'."
"Message",Normal,"          P/Invoke 'superres_FarnebackOpticalFlow_getLevelsNumber' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FarnebackOpticalFlow_getLevelsNumber'."
"Message",Normal,"          P/Invoke 'superres_FarnebackOpticalFlow_setLevelsNumber' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FarnebackOpticalFlow_setLevelsNumber'."
"Message",Normal,"          P/Invoke 'superres_FarnebackOpticalFlow_getWindowSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FarnebackOpticalFlow_getWindowSize'."
"Message",Normal,"          P/Invoke 'superres_FarnebackOpticalFlow_setWindowSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FarnebackOpticalFlow_setWindowSize'."
"Message",Normal,"          P/Invoke 'superres_FarnebackOpticalFlow_getIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FarnebackOpticalFlow_getIterations'."
"Message",Normal,"          P/Invoke 'superres_FarnebackOpticalFlow_setIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FarnebackOpticalFlow_setIterations'."
"Message",Normal,"          P/Invoke 'superres_FarnebackOpticalFlow_getPolyN' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FarnebackOpticalFlow_getPolyN'."
"Message",Normal,"          P/Invoke 'superres_FarnebackOpticalFlow_setPolyN' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FarnebackOpticalFlow_setPolyN'."
"Message",Normal,"          P/Invoke 'superres_FarnebackOpticalFlow_getPolySigma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FarnebackOpticalFlow_getPolySigma'."
"Message",Normal,"          P/Invoke 'superres_FarnebackOpticalFlow_setPolySigma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FarnebackOpticalFlow_setPolySigma'."
"Message",Normal,"          P/Invoke 'superres_FarnebackOpticalFlow_getFlags' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FarnebackOpticalFlow_getFlags'."
"Message",Normal,"          P/Invoke 'superres_FarnebackOpticalFlow_setFlags' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FarnebackOpticalFlow_setFlags'."
"Message",Normal,"          P/Invoke 'superres_createOptFlow_DualTVL1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_createOptFlow_DualTVL1'."
"Message",Normal,"          P/Invoke 'superres_createOptFlow_DualTVL1_CUDA' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_createOptFlow_DualTVL1_CUDA'."
"Message",Normal,"          P/Invoke 'superres_Ptr_DualTVL1OpticalFlow_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_Ptr_DualTVL1OpticalFlow_get'."
"Message",Normal,"          P/Invoke 'superres_Ptr_DualTVL1OpticalFlow_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_Ptr_DualTVL1OpticalFlow_delete'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_getTau' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_getTau'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_setTau' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_setTau'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_getLambda' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_getLambda'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_setLambda' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_setLambda'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_getTheta' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_getTheta'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_setTheta' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_setTheta'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_getScalesNumber' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_getScalesNumber'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_setScalesNumber' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_setScalesNumber'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_getWarpingsNumber' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_getWarpingsNumber'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_setWarpingsNumber' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_setWarpingsNumber'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_getEpsilon' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_getEpsilon'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_setEpsilon' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_setEpsilon'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_getIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_getIterations'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_setIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_setIterations'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_getUseInitialFlow' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_getUseInitialFlow'."
"Message",Normal,"          P/Invoke 'superres_DualTVL1OpticalFlow_setUseInitialFlow' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_DualTVL1OpticalFlow_setUseInitialFlow'."
"Message",Normal,"          P/Invoke 'superres_createOptFlow_Brox_CUDA' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_createOptFlow_Brox_CUDA'."
"Message",Normal,"          P/Invoke 'superres_Ptr_BroxOpticalFlow_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_Ptr_BroxOpticalFlow_get'."
"Message",Normal,"          P/Invoke 'superres_Ptr_BroxOpticalFlow_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_Ptr_BroxOpticalFlow_delete'."
"Message",Normal,"          P/Invoke 'superres_BroxOpticalFlow_getAlpha' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_BroxOpticalFlow_getAlpha'."
"Message",Normal,"          P/Invoke 'superres_BroxOpticalFlow_setAlpha' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_BroxOpticalFlow_setAlpha'."
"Message",Normal,"          P/Invoke 'superres_BroxOpticalFlow_getGamma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_BroxOpticalFlow_getGamma'."
"Message",Normal,"          P/Invoke 'superres_BroxOpticalFlow_setGamma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_BroxOpticalFlow_setGamma'."
"Message",Normal,"          P/Invoke 'superres_BroxOpticalFlow_getScaleFactor' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_BroxOpticalFlow_getScaleFactor'."
"Message",Normal,"          P/Invoke 'superres_BroxOpticalFlow_setScaleFactor' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_BroxOpticalFlow_setScaleFactor'."
"Message",Normal,"          P/Invoke 'superres_BroxOpticalFlow_getInnerIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_BroxOpticalFlow_getInnerIterations'."
"Message",Normal,"          P/Invoke 'superres_BroxOpticalFlow_setInnerIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_BroxOpticalFlow_setInnerIterations'."
"Message",Normal,"          P/Invoke 'superres_BroxOpticalFlow_getOuterIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_BroxOpticalFlow_getOuterIterations'."
"Message",Normal,"          P/Invoke 'superres_BroxOpticalFlow_setOuterIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_BroxOpticalFlow_setOuterIterations'."
"Message",Normal,"          P/Invoke 'superres_BroxOpticalFlow_getSolverIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_BroxOpticalFlow_getSolverIterations'."
"Message",Normal,"          P/Invoke 'superres_BroxOpticalFlow_setSolverIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_BroxOpticalFlow_setSolverIterations'."
"Message",Normal,"          P/Invoke 'superres_createOptFlow_PyrLK_CUDA' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_createOptFlow_PyrLK_CUDA'."
"Message",Normal,"          P/Invoke 'superres_Ptr_PyrLKOpticalFlow_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_Ptr_PyrLKOpticalFlow_get'."
"Message",Normal,"          P/Invoke 'superres_Ptr_PyrLKOpticalFlow_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_Ptr_PyrLKOpticalFlow_delete'."
"Message",Normal,"          P/Invoke 'superres_PyrLKOpticalFlow_getWindowSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_PyrLKOpticalFlow_getWindowSize'."
"Message",Normal,"          P/Invoke 'superres_PyrLKOpticalFlow_setWindowSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_PyrLKOpticalFlow_setWindowSize'."
"Message",Normal,"          P/Invoke 'superres_PyrLKOpticalFlow_getMaxLevel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_PyrLKOpticalFlow_getMaxLevel'."
"Message",Normal,"          P/Invoke 'superres_PyrLKOpticalFlow_setMaxLevel' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_PyrLKOpticalFlow_setMaxLevel'."
"Message",Normal,"          P/Invoke 'superres_PyrLKOpticalFlow_getIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_PyrLKOpticalFlow_getIterations'."
"Message",Normal,"          P/Invoke 'superres_PyrLKOpticalFlow_setIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_PyrLKOpticalFlow_setIterations'."
"Message",Normal,"          P/Invoke 'superres_FrameSource_nextFrame' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FrameSource_nextFrame'."
"Message",Normal,"          P/Invoke 'superres_FrameSource_reset' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_FrameSource_reset'."
"Message",Normal,"          P/Invoke 'superres_createFrameSource_Empty' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_createFrameSource_Empty'."
"Message",Normal,"          P/Invoke 'superres_createFrameSource_Video' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_createFrameSource_Video'."
"Message",Normal,"          P/Invoke 'superres_createFrameSource_Video_CUDA' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_createFrameSource_Video_CUDA'."
"Message",Normal,"          P/Invoke 'superres_createFrameSource_Camera' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_createFrameSource_Camera'."
"Message",Normal,"          P/Invoke 'superres_Ptr_FrameSource_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_Ptr_FrameSource_get'."
"Message",Normal,"          P/Invoke 'superres_Ptr_FrameSource_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_Ptr_FrameSource_delete'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_setInput' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_setInput'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_nextFrame' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_nextFrame'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_reset' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_reset'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_collectGarbage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_collectGarbage'."
"Message",Normal,"          P/Invoke 'superres_createSuperResolution_BTVL1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_createSuperResolution_BTVL1'."
"Message",Normal,"          P/Invoke 'superres_createSuperResolution_BTVL1_CUDA' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_createSuperResolution_BTVL1_CUDA'."
"Message",Normal,"          P/Invoke 'superres_Ptr_SuperResolution_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_Ptr_SuperResolution_get'."
"Message",Normal,"          P/Invoke 'superres_Ptr_SuperResolution_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_Ptr_SuperResolution_delete'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_getScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_getScale'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_setScale' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_setScale'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_getIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_getIterations'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_setIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_setIterations'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_getTau' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_getTau'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_setTau' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_setTau'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_getLambda' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_getLambda'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_setLambda' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_setLambda'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_getAlpha' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_getAlpha'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_setAlpha' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_setAlpha'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_getKernelSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_getKernelSize'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_setKernelSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_setKernelSize'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_getBlurKernelSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_getBlurKernelSize'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_setBlurKernelSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_setBlurKernelSize'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_getBlurSigma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_getBlurSigma'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_setBlurSigma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_setBlurSigma'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_getTemporalAreaRadius' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_getTemporalAreaRadius'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_setTemporalAreaRadius' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_setTemporalAreaRadius'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_getOpticalFlow' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_getOpticalFlow'."
"Message",Normal,"          P/Invoke 'superres_SuperResolution_setOpticalFlow' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!superres_SuperResolution_setOpticalFlow'."
"Message",Normal,"          P/Invoke 'text_OCRTesseract_run1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!text_OCRTesseract_run1'."
"Message",Normal,"          P/Invoke 'text_OCRTesseract_run2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!text_OCRTesseract_run2'."
"Message",Normal,"          P/Invoke 'text_OCRTesseract_setWhiteList' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!text_OCRTesseract_setWhiteList'."
"Message",Normal,"          P/Invoke 'text_OCRTesseract_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!text_OCRTesseract_create'."
"Message",Normal,"          P/Invoke 'text_Ptr_OCRTesseract_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!text_Ptr_OCRTesseract_delete'."
"Message",Normal,"          P/Invoke 'text_OCRTesseract_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!text_OCRTesseract_get'."
"Message",Normal,"          P/Invoke 'text_detectTextSWT' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!text_detectTextSWT'."
"Message",Normal,"          P/Invoke 'text_TextDetector_detect' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!text_TextDetector_detect'."
"Message",Normal,"          P/Invoke 'text_TextDetectorCNN_detect' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!text_TextDetectorCNN_detect'."
"Message",Normal,"          P/Invoke 'text_TextDetectorCNN_create1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!text_TextDetectorCNN_create1'."
"Message",Normal,"          P/Invoke 'text_TextDetectorCNN_create2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!text_TextDetectorCNN_create2'."
"Message",Normal,"          P/Invoke 'text_Ptr_TextDetectorCNN_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!text_Ptr_TextDetectorCNN_delete'."
"Message",Normal,"          P/Invoke 'text_Ptr_TextDetectorCNN_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!text_Ptr_TextDetectorCNN_get'."
"Message",Normal,"          P/Invoke 'tracking_TrackerKCF_create1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!tracking_TrackerKCF_create1'."
"Message",Normal,"          P/Invoke 'tracking_TrackerKCF_create2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!tracking_TrackerKCF_create2'."
"Message",Normal,"          P/Invoke 'tracking_Ptr_TrackerKCF_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!tracking_Ptr_TrackerKCF_delete'."
"Message",Normal,"          P/Invoke 'tracking_Ptr_TrackerKCF_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!tracking_Ptr_TrackerKCF_get'."
"Message",Normal,"          P/Invoke 'tracking_TrackerCSRT_create1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!tracking_TrackerCSRT_create1'."
"Message",Normal,"          P/Invoke 'tracking_TrackerCSRT_create2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!tracking_TrackerCSRT_create2'."
"Message",Normal,"          P/Invoke 'tracking_Ptr_TrackerCSRT_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!tracking_Ptr_TrackerCSRT_delete'."
"Message",Normal,"          P/Invoke 'tracking_Ptr_TrackerCSRT_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!tracking_Ptr_TrackerCSRT_get'."
"Message",Normal,"          P/Invoke 'tracking_TrackerCSRT_setInitialMask' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!tracking_TrackerCSRT_setInitialMask'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractor_getBackgroundImage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractor_getBackgroundImage'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractor_apply' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractor_apply'."
"Message",Normal,"          P/Invoke 'video_Ptr_BackgroundSubtractor_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_Ptr_BackgroundSubtractor_delete'."
"Message",Normal,"          P/Invoke 'video_Ptr_BackgroundSubtractor_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_Ptr_BackgroundSubtractor_get'."
"Message",Normal,"          P/Invoke 'video_createBackgroundSubtractorMOG2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_createBackgroundSubtractorMOG2'."
"Message",Normal,"          P/Invoke 'video_Ptr_BackgroundSubtractorMOG2_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_Ptr_BackgroundSubtractorMOG2_delete'."
"Message",Normal,"          P/Invoke 'video_Ptr_BackgroundSubtractorMOG2_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_Ptr_BackgroundSubtractorMOG2_get'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_getHistory' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_getHistory'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_setHistory' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_setHistory'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_getNMixtures' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_getNMixtures'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_setNMixtures' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_setNMixtures'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_getBackgroundRatio' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_getBackgroundRatio'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_setBackgroundRatio' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_setBackgroundRatio'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_getVarThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_getVarThreshold'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_setVarThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_setVarThreshold'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_getVarThresholdGen' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_getVarThresholdGen'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_setVarThresholdGen' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_setVarThresholdGen'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_getVarInit' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_getVarInit'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_setVarInit' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_setVarInit'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_getVarMin' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_getVarMin'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_setVarMin' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_setVarMin'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_getVarMax' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_getVarMax'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_setVarMax' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_setVarMax'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_getComplexityReductionThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_getComplexityReductionThreshold'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_setComplexityReductionThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_setComplexityReductionThreshold'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_getDetectShadows' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_getDetectShadows'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_setDetectShadows' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_setDetectShadows'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_getShadowValue' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_getShadowValue'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_setShadowValue' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_setShadowValue'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_getShadowThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_getShadowThreshold'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorMOG2_setShadowThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorMOG2_setShadowThreshold'."
"Message",Normal,"          P/Invoke 'video_createBackgroundSubtractorKNN' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_createBackgroundSubtractorKNN'."
"Message",Normal,"          P/Invoke 'video_Ptr_BackgroundSubtractorKNN_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_Ptr_BackgroundSubtractorKNN_delete'."
"Message",Normal,"          P/Invoke 'video_Ptr_BackgroundSubtractorKNN_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_Ptr_BackgroundSubtractorKNN_get'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorKNN_getHistory' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorKNN_getHistory'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorKNN_setHistory' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorKNN_setHistory'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorKNN_getNSamples' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorKNN_getNSamples'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorKNN_setNSamples' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorKNN_setNSamples'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorKNN_getDist2Threshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorKNN_getDist2Threshold'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorKNN_setDist2Threshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorKNN_setDist2Threshold'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorKNN_getkNNSamples' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorKNN_getkNNSamples'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorKNN_setkNNSamples' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorKNN_setkNNSamples'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorKNN_getDetectShadows' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorKNN_getDetectShadows'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorKNN_setDetectShadows' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorKNN_setDetectShadows'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorKNN_getShadowValue' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorKNN_getShadowValue'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorKNN_setShadowValue' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorKNN_setShadowValue'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorKNN_getShadowThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorKNN_getShadowThreshold'."
"Message",Normal,"          P/Invoke 'video_BackgroundSubtractorKNN_setShadowThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_BackgroundSubtractorKNN_setShadowThreshold'."
"Message",Normal,"          P/Invoke 'video_CamShift' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_CamShift'."
"Message",Normal,"          P/Invoke 'video_meanShift' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_meanShift'."
"Message",Normal,"          P/Invoke 'video_buildOpticalFlowPyramid1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_buildOpticalFlowPyramid1'."
"Message",Normal,"          P/Invoke 'video_buildOpticalFlowPyramid2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_buildOpticalFlowPyramid2'."
"Message",Normal,"          P/Invoke 'video_calcOpticalFlowPyrLK_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_calcOpticalFlowPyrLK_InputArray'."
"Message",Normal,"          P/Invoke 'video_calcOpticalFlowPyrLK_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_calcOpticalFlowPyrLK_vector'."
"Message",Normal,"          P/Invoke 'video_calcOpticalFlowFarneback' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_calcOpticalFlowFarneback'."
"Message",Normal,"          P/Invoke 'video_computeECC' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_computeECC'."
"Message",Normal,"          P/Invoke 'video_findTransformECC1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_findTransformECC1'."
"Message",Normal,"          P/Invoke 'video_findTransformECC2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_findTransformECC2'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_new1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_new1'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_new2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_new2'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_init' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_init'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_delete'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_predict' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_predict'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_correct' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_correct'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_statePre' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_statePre'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_statePost' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_statePost'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_transitionMatrix' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_transitionMatrix'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_controlMatrix' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_controlMatrix'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_measurementMatrix' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_measurementMatrix'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_processNoiseCov' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_processNoiseCov'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_measurementNoiseCov' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_measurementNoiseCov'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_errorCovPre' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_errorCovPre'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_gain' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_gain'."
"Message",Normal,"          P/Invoke 'video_KalmanFilter_errorCovPost' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_KalmanFilter_errorCovPost'."
"Message",Normal,"          P/Invoke 'video_Tracker_init' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_Tracker_init'."
"Message",Normal,"          P/Invoke 'video_Tracker_update' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_Tracker_update'."
"Message",Normal,"          P/Invoke 'video_TrackerMIL_create1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_TrackerMIL_create1'."
"Message",Normal,"          P/Invoke 'video_TrackerMIL_create2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_TrackerMIL_create2'."
"Message",Normal,"          P/Invoke 'video_Ptr_TrackerMIL_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_Ptr_TrackerMIL_delete'."
"Message",Normal,"          P/Invoke 'video_Ptr_TrackerMIL_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_Ptr_TrackerMIL_get'."
"Message",Normal,"          P/Invoke 'video_TrackerGOTURN_create1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_TrackerGOTURN_create1'."
"Message",Normal,"          P/Invoke 'video_TrackerGOTURN_create2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_TrackerGOTURN_create2'."
"Message",Normal,"          P/Invoke 'video_Ptr_TrackerGOTURN_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_Ptr_TrackerGOTURN_delete'."
"Message",Normal,"          P/Invoke 'video_Ptr_TrackerGOTURN_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!video_Ptr_TrackerGOTURN_get'."
"Message",Normal,"          P/Invoke 'ximgproc_niBlackThreshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_niBlackThreshold'."
"Message",Normal,"          P/Invoke 'ximgproc_thinning' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_thinning'."
"Message",Normal,"          P/Invoke 'ximgproc_anisotropicDiffusion' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_anisotropicDiffusion'."
"Message",Normal,"          P/Invoke 'ximgproc_BrightEdges' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_BrightEdges'."
"Message",Normal,"          P/Invoke 'ximgproc_createQuaternionImage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_createQuaternionImage'."
"Message",Normal,"          P/Invoke 'ximgproc_qconj' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_qconj'."
"Message",Normal,"          P/Invoke 'ximgproc_qunitary' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_qunitary'."
"Message",Normal,"          P/Invoke 'ximgproc_qmultiply' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_qmultiply'."
"Message",Normal,"          P/Invoke 'ximgproc_qdft' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_qdft'."
"Message",Normal,"          P/Invoke 'ximgproc_colorMatchTemplate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_colorMatchTemplate'."
"Message",Normal,"          P/Invoke 'ximgproc_GradientDericheY' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_GradientDericheY'."
"Message",Normal,"          P/Invoke 'ximgproc_GradientDericheX' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_GradientDericheX'."
"Message",Normal,"          P/Invoke 'ximgproc_edgePreservingFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_edgePreservingFilter'."
"Message",Normal,"          P/Invoke 'ximgproc_covarianceEstimation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_covarianceEstimation'."
"Message",Normal,"          P/Invoke 'ximgproc_FastHoughTransform' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_FastHoughTransform'."
"Message",Normal,"          P/Invoke 'ximgproc_HoughPoint2Line' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_HoughPoint2Line'."
"Message",Normal,"          P/Invoke 'ximgproc_GradientPaillouY' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_GradientPaillouY'."
"Message",Normal,"          P/Invoke 'ximgproc_GradientPaillouX' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_GradientPaillouX'."
"Message",Normal,"          P/Invoke 'ximgproc_PeiLinNormalization_Mat23d' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_PeiLinNormalization_Mat23d'."
"Message",Normal,"          P/Invoke 'ximgproc_PeiLinNormalization_OutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_PeiLinNormalization_OutputArray'."
"Message",Normal,"          P/Invoke 'ximgproc_rl_threshold' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_rl_threshold'."
"Message",Normal,"          P/Invoke 'ximgproc_rl_dilate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_rl_dilate'."
"Message",Normal,"          P/Invoke 'ximgproc_rl_erode' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_rl_erode'."
"Message",Normal,"          P/Invoke 'ximgproc_rl_getStructuringElement' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_rl_getStructuringElement'."
"Message",Normal,"          P/Invoke 'ximgproc_rl_paint' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_rl_paint'."
"Message",Normal,"          P/Invoke 'ximgproc_rl_isRLMorphologyPossible' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_rl_isRLMorphologyPossible'."
"Message",Normal,"          P/Invoke 'ximgproc_rl_createRLEImage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_rl_createRLEImage'."
"Message",Normal,"          P/Invoke 'ximgproc_rl_morphologyEx' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_rl_morphologyEx'."
"Message",Normal,"          P/Invoke 'ximgproc_weightedMedianFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_weightedMedianFilter'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_getBoundingBoxes' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_getBoundingBoxes'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_getAlpha' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_getAlpha'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_setAlpha' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_setAlpha'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_getBeta' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_getBeta'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_setBeta' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_setBeta'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_getEta' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_getEta'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_setEta' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_setEta'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_getMinScore' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_getMinScore'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_setMinScore' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_setMinScore'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_getMaxBoxes' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_getMaxBoxes'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_setMaxBoxes' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_setMaxBoxes'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_getEdgeMinMag' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_getEdgeMinMag'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_setEdgeMinMag' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_setEdgeMinMag'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_getEdgeMergeThr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_getEdgeMergeThr'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_setEdgeMergeThr' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_setEdgeMergeThr'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_getClusterMinMag' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_getClusterMinMag'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_setClusterMinMag' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_setClusterMinMag'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_getMaxAspectRatio' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_getMaxAspectRatio'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_setMaxAspectRatio' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_setMaxAspectRatio'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_getMinBoxArea' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_getMinBoxArea'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_setMinBoxArea' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_setMinBoxArea'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_getGamma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_getGamma'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_setGamma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_setGamma'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_getKappa' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_getKappa'."
"Message",Normal,"          P/Invoke 'ximgproc_EdgeBoxes_setKappa' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_EdgeBoxes_setKappa'."
"Message",Normal,"          P/Invoke 'ximgproc_createEdgeBoxes' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_createEdgeBoxes'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_EdgeBoxes_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_EdgeBoxes_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_EdgeBoxes_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_EdgeBoxes_get'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_DTFilter_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_DTFilter_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_DTFilter_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_DTFilter_get'."
"Message",Normal,"          P/Invoke 'ximgproc_DTFilter_filter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_DTFilter_filter'."
"Message",Normal,"          P/Invoke 'ximgproc_createDTFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_createDTFilter'."
"Message",Normal,"          P/Invoke 'ximgproc_dtFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_dtFilter'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_GuidedFilter_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_GuidedFilter_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_GuidedFilter_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_GuidedFilter_get'."
"Message",Normal,"          P/Invoke 'ximgproc_GuidedFilter_filter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_GuidedFilter_filter'."
"Message",Normal,"          P/Invoke 'ximgproc_createGuidedFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_createGuidedFilter'."
"Message",Normal,"          P/Invoke 'ximgproc_guidedFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_guidedFilter'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_AdaptiveManifoldFilter_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_AdaptiveManifoldFilter_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_AdaptiveManifoldFilter_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_AdaptiveManifoldFilter_get'."
"Message",Normal,"          P/Invoke 'ximgproc_AdaptiveManifoldFilter_filter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_AdaptiveManifoldFilter_filter'."
"Message",Normal,"          P/Invoke 'ximgproc_AdaptiveManifoldFilter_collectGarbage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_AdaptiveManifoldFilter_collectGarbage'."
"Message",Normal,"          P/Invoke 'ximgproc_AdaptiveManifoldFilter_getSigmaS' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_AdaptiveManifoldFilter_getSigmaS'."
"Message",Normal,"          P/Invoke 'ximgproc_AdaptiveManifoldFilter_setSigmaS' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_AdaptiveManifoldFilter_setSigmaS'."
"Message",Normal,"          P/Invoke 'ximgproc_AdaptiveManifoldFilter_getSigmaR' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_AdaptiveManifoldFilter_getSigmaR'."
"Message",Normal,"          P/Invoke 'ximgproc_AdaptiveManifoldFilter_setSigmaR' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_AdaptiveManifoldFilter_setSigmaR'."
"Message",Normal,"          P/Invoke 'ximgproc_AdaptiveManifoldFilter_getTreeHeight' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_AdaptiveManifoldFilter_getTreeHeight'."
"Message",Normal,"          P/Invoke 'ximgproc_AdaptiveManifoldFilter_setTreeHeight' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_AdaptiveManifoldFilter_setTreeHeight'."
"Message",Normal,"          P/Invoke 'ximgproc_AdaptiveManifoldFilter_getPCAIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_AdaptiveManifoldFilter_getPCAIterations'."
"Message",Normal,"          P/Invoke 'ximgproc_AdaptiveManifoldFilter_setPCAIterations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_AdaptiveManifoldFilter_setPCAIterations'."
"Message",Normal,"          P/Invoke 'ximgproc_AdaptiveManifoldFilter_getAdjustOutliers' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_AdaptiveManifoldFilter_getAdjustOutliers'."
"Message",Normal,"          P/Invoke 'ximgproc_AdaptiveManifoldFilter_setAdjustOutliers' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_AdaptiveManifoldFilter_setAdjustOutliers'."
"Message",Normal,"          P/Invoke 'ximgproc_AdaptiveManifoldFilter_getUseRNG' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_AdaptiveManifoldFilter_getUseRNG'."
"Message",Normal,"          P/Invoke 'ximgproc_AdaptiveManifoldFilter_setUseRNG' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_AdaptiveManifoldFilter_setUseRNG'."
"Message",Normal,"          P/Invoke 'ximgproc_createAMFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_createAMFilter'."
"Message",Normal,"          P/Invoke 'ximgproc_amFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_amFilter'."
"Message",Normal,"          P/Invoke 'ximgproc_jointBilateralFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_jointBilateralFilter'."
"Message",Normal,"          P/Invoke 'ximgproc_bilateralTextureFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_bilateralTextureFilter'."
"Message",Normal,"          P/Invoke 'ximgproc_rollingGuidanceFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_rollingGuidanceFilter'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_FastBilateralSolverFilter_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_FastBilateralSolverFilter_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_FastBilateralSolverFilter_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_FastBilateralSolverFilter_get'."
"Message",Normal,"          P/Invoke 'ximgproc_FastBilateralSolverFilter_filter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_FastBilateralSolverFilter_filter'."
"Message",Normal,"          P/Invoke 'ximgproc_createFastBilateralSolverFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_createFastBilateralSolverFilter'."
"Message",Normal,"          P/Invoke 'ximgproc_fastBilateralSolverFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_fastBilateralSolverFilter'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_FastGlobalSmootherFilter_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_FastGlobalSmootherFilter_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_FastGlobalSmootherFilter_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_FastGlobalSmootherFilter_get'."
"Message",Normal,"          P/Invoke 'ximgproc_FastGlobalSmootherFilter_filter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_FastGlobalSmootherFilter_filter'."
"Message",Normal,"          P/Invoke 'ximgproc_createFastGlobalSmootherFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_createFastGlobalSmootherFilter'."
"Message",Normal,"          P/Invoke 'ximgproc_fastGlobalSmootherFilter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_fastGlobalSmootherFilter'."
"Message",Normal,"          P/Invoke 'ximgproc_l0Smooth' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_l0Smooth'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_FastLineDetector_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_FastLineDetector_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_FastLineDetector_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_FastLineDetector_get'."
"Message",Normal,"          P/Invoke 'ximgproc_FastLineDetector_detect_OutputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_FastLineDetector_detect_OutputArray'."
"Message",Normal,"          P/Invoke 'ximgproc_FastLineDetector_detect_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_FastLineDetector_detect_vector'."
"Message",Normal,"          P/Invoke 'ximgproc_FastLineDetector_drawSegments_InputArray' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_FastLineDetector_drawSegments_InputArray'."
"Message",Normal,"          P/Invoke 'ximgproc_FastLineDetector_drawSegments_vector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_FastLineDetector_drawSegments_vector'."
"Message",Normal,"          P/Invoke 'ximgproc_createFastLineDetector' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_createFastLineDetector'."
"Message",Normal,"          P/Invoke 'ximgproc_RidgeDetectionFilter_create' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_RidgeDetectionFilter_create'."
"Message",Normal,"          P/Invoke 'ximgproc_RidgeDetectionFilter_getRidgeFilteredImage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_RidgeDetectionFilter_getRidgeFilteredImage'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_RidgeDetectionFilter_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_RidgeDetectionFilter_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_RidgeDetectionFilter_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_RidgeDetectionFilter_get'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_createGraphSegmentation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_createGraphSegmentation'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_Ptr_GraphSegmentation_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_Ptr_GraphSegmentation_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_Ptr_GraphSegmentation_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_Ptr_GraphSegmentation_get'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_GraphSegmentation_processImage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_GraphSegmentation_processImage'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_GraphSegmentation_setSigma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_GraphSegmentation_setSigma'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_GraphSegmentation_getSigma' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_GraphSegmentation_getSigma'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_GraphSegmentation_setK' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_GraphSegmentation_setK'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_GraphSegmentation_getK' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_GraphSegmentation_getK'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_GraphSegmentation_setMinSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_GraphSegmentation_setMinSize'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_GraphSegmentation_getMinSize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_GraphSegmentation_getMinSize'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentationStrategy_setImage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentationStrategy_setImage'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentationStrategy_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentationStrategy_get'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentationStrategy_merge' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentationStrategy_merge'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_createSelectiveSearchSegmentationStrategyColor' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_createSelectiveSearchSegmentationStrategyColor'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_createSelectiveSearchSegmentationStrategySize' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_createSelectiveSearchSegmentationStrategySize'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_createSelectiveSearchSegmentationStrategyTexture' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_createSelectiveSearchSegmentationStrategyTexture'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_createSelectiveSearchSegmentationStrategyFill' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_createSelectiveSearchSegmentationStrategyFill'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyColor_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyColor_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategySize_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategySize_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyTexture_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyTexture_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyFill_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyFill_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyColor_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyColor_get'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategySize_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategySize_get'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyTexture_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyTexture_get'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyFill_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyFill_get'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentationStrategyMultiple_addStrategy' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentationStrategyMultiple_addStrategy'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentationStrategyMultiple_clearStrategies' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentationStrategyMultiple_clearStrategies'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_createSelectiveSearchSegmentationStrategyMultiple0' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_createSelectiveSearchSegmentationStrategyMultiple0'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_createSelectiveSearchSegmentationStrategyMultiple1' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_createSelectiveSearchSegmentationStrategyMultiple1'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_createSelectiveSearchSegmentationStrategyMultiple2' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_createSelectiveSearchSegmentationStrategyMultiple2'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_createSelectiveSearchSegmentationStrategyMultiple3' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_createSelectiveSearchSegmentationStrategyMultiple3'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_createSelectiveSearchSegmentationStrategyMultiple4' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_createSelectiveSearchSegmentationStrategyMultiple4'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyMultiple_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyMultiple_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyMultiple_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyMultiple_get'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentation_setBaseImage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentation_setBaseImage'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentation_switchToSingleStrategy' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentation_switchToSingleStrategy'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentation_switchToSelectiveSearchFast' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentation_switchToSelectiveSearchFast'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentation_switchToSelectiveSearchQuality' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentation_switchToSelectiveSearchQuality'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentation_addImage' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentation_addImage'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentation_clearImages' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentation_clearImages'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentation_addGraphSegmentation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentation_addGraphSegmentation'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentation_clearGraphSegmentations' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentation_clearGraphSegmentations'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentation_addStrategy' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentation_addStrategy'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentation_clearStrategies' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentation_clearStrategies'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_SelectiveSearchSegmentation_process' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_SelectiveSearchSegmentation_process'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_createSelectiveSearchSegmentation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_createSelectiveSearchSegmentation'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_Ptr_SelectiveSearchSegmentation_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_Ptr_SelectiveSearchSegmentation_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_segmentation_Ptr_SelectiveSearchSegmentation_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_segmentation_Ptr_SelectiveSearchSegmentation_get'."
"Message",Normal,"          P/Invoke 'ximgproc_createRFFeatureGetter' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_createRFFeatureGetter'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_RFFeatureGetter_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_RFFeatureGetter_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_RFFeatureGetter_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_RFFeatureGetter_get'."
"Message",Normal,"          P/Invoke 'ximgproc_RFFeatureGetter_getFeatures' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_RFFeatureGetter_getFeatures'."
"Message",Normal,"          P/Invoke 'ximgproc_createStructuredEdgeDetection' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_createStructuredEdgeDetection'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_StructuredEdgeDetection_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_StructuredEdgeDetection_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_StructuredEdgeDetection_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_StructuredEdgeDetection_get'."
"Message",Normal,"          P/Invoke 'ximgproc_StructuredEdgeDetection_detectEdges' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_StructuredEdgeDetection_detectEdges'."
"Message",Normal,"          P/Invoke 'ximgproc_StructuredEdgeDetection_computeOrientation' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_StructuredEdgeDetection_computeOrientation'."
"Message",Normal,"          P/Invoke 'ximgproc_StructuredEdgeDetection_edgesNms' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_StructuredEdgeDetection_edgesNms'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_SuperpixelLSC_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_SuperpixelLSC_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_SuperpixelLSC_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_SuperpixelLSC_get'."
"Message",Normal,"          P/Invoke 'ximgproc_SuperpixelLSC_getNumberOfSuperpixels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_SuperpixelLSC_getNumberOfSuperpixels'."
"Message",Normal,"          P/Invoke 'ximgproc_SuperpixelLSC_iterate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_SuperpixelLSC_iterate'."
"Message",Normal,"          P/Invoke 'ximgproc_SuperpixelLSC_getLabels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_SuperpixelLSC_getLabels'."
"Message",Normal,"          P/Invoke 'ximgproc_SuperpixelLSC_getLabelContourMask' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_SuperpixelLSC_getLabelContourMask'."
"Message",Normal,"          P/Invoke 'ximgproc_SuperpixelLSC_enforceLabelConnectivity' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_SuperpixelLSC_enforceLabelConnectivity'."
"Message",Normal,"          P/Invoke 'ximgproc_createSuperpixelLSC' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_createSuperpixelLSC'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_SuperpixelSEEDS_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_SuperpixelSEEDS_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_SuperpixelSEEDS_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_SuperpixelSEEDS_get'."
"Message",Normal,"          P/Invoke 'ximgproc_SuperpixelSEEDS_getNumberOfSuperpixels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_SuperpixelSEEDS_getNumberOfSuperpixels'."
"Message",Normal,"          P/Invoke 'ximgproc_SuperpixelSEEDS_iterate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_SuperpixelSEEDS_iterate'."
"Message",Normal,"          P/Invoke 'ximgproc_SuperpixelSEEDS_getLabels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_SuperpixelSEEDS_getLabels'."
"Message",Normal,"          P/Invoke 'ximgproc_SuperpixelSEEDS_getLabelContourMask' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_SuperpixelSEEDS_getLabelContourMask'."
"Message",Normal,"          P/Invoke 'ximgproc_createSuperpixelSEEDS' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_createSuperpixelSEEDS'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_SuperpixelSLIC_delete' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_SuperpixelSLIC_delete'."
"Message",Normal,"          P/Invoke 'ximgproc_Ptr_SuperpixelSLIC_get' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_Ptr_SuperpixelSLIC_get'."
"Message",Normal,"          P/Invoke 'ximgproc_SuperpixelSLIC_getNumberOfSuperpixels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_SuperpixelSLIC_getNumberOfSuperpixels'."
"Message",Normal,"          P/Invoke 'ximgproc_SuperpixelSLIC_iterate' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_SuperpixelSLIC_iterate'."
"Message",Normal,"          P/Invoke 'ximgproc_SuperpixelSLIC_getLabels' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_SuperpixelSLIC_getLabels'."
"Message",Normal,"          P/Invoke 'ximgproc_SuperpixelSLIC_getLabelContourMask' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_SuperpixelSLIC_getLabelContourMask'."
"Message",Normal,"          P/Invoke 'ximgproc_SuperpixelSLIC_enforceLabelConnectivity' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_SuperpixelSLIC_enforceLabelConnectivity'."
"Message",Normal,"          P/Invoke 'ximgproc_createSuperpixelSLIC' with [DllImport(ExactSpelling=true)] resolved to 'OpenCvSharpExtern!ximgproc_createSuperpixelSLIC'."
"Message",Normal,"          P/Invoke 'LoadLibraryW' resolved to 'LoadLibraryW!kernel32' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'FormatMessageW' resolved to 'FormatMessageW!api-ms-win-core-localization-l1-2-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'CoCreateInstanceFromApp' resolved to 'CoCreateInstanceFromApp!api-ms-win-core-com-l1-1-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'CloseHandle' resolved to 'CloseHandle!api-ms-win-core-handle-l1-1-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetProcAddress' resolved to 'GetProcAddress!api-ms-win-core-libraryloader-l1-1-1.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'ReadFile' resolved to 'ReadFile!api-ms-win-core-file-l1-2-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'FlushFileBuffers' resolved to 'FlushFileBuffers!api-ms-win-core-file-l1-2-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'WriteFile' resolved to 'WriteFile!api-ms-win-core-file-l1-2-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'SetFilePointerEx' resolved to 'SetFilePointerEx!api-ms-win-core-file-l1-2-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'SetEndOfFile' resolved to 'SetEndOfFile!api-ms-win-core-file-l1-2-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetFileAttributesExW' resolved to 'GetFileAttributesExW!api-ms-win-core-file-l1-2-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'CreateFile2' resolved to 'CreateFile2!api-ms-win-core-file-l1-2-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetFileInformationByHandleEx' resolved to 'GetFileInformationByHandleEx!api-ms-win-core-file-l2-1-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'RhpGetFuncEvalParameterBufferSize' with [DllImport(ExactSpelling=true)] resolved to '[MRT]!RhpGetFuncEvalParameterBufferSize'."
"Message",Normal,"          P/Invoke 'RhpGetFuncEvalMode' with [DllImport(ExactSpelling=true)] resolved to '[MRT]!RhpGetFuncEvalMode'."
"Message",Normal,"          P/Invoke 'RhpRecordDebuggeeInitiatedHandle' with [DllImport(ExactSpelling=true)] resolved to '[MRT]!RhpRecordDebuggeeInitiatedHandle'."
"Message",Normal,"          P/Invoke 'RhpVerifyDebuggerCleanup' with [DllImport(ExactSpelling=true)] resolved to '[MRT]!RhpVerifyDebuggerCleanup'."
"Message",Normal,"          P/Invoke 'RhpGetCurrentThread' with [DllImport(ExactSpelling=true)] resolved to '[MRT]!RhpGetCurrentThread'."
"Message",Normal,"          P/Invoke 'RhWaitForPendingFinalizers' with [DllImport(ExactSpelling=true)] resolved to '[MRT]!RhWaitForPendingFinalizers'."
"Message",Normal,"          P/Invoke 'RhYield' with [DllImport(ExactSpelling=true)] resolved to '[MRT]!RhYield'."
"Message",Normal,"          P/Invoke 'RhFlushProcessWriteBuffers' with [DllImport(ExactSpelling=true)] resolved to '[MRT]!RhFlushProcessWriteBuffers'."
"Message",Normal,"          P/Invoke 'RhCompatibleReentrantWaitAny' with [DllImport(ExactSpelling=true)] resolved to '[MRT]!RhCompatibleReentrantWaitAny'."
"Message",Normal,"          P/Invoke 'RhCallDescrWorker' with [DllImport(ExactSpelling=true)] resolved to '[MRT]!RhCallDescrWorker'."
"Message",Normal,"          P/Invoke '_ecvt_s' with [DllImport(ExactSpelling=true)] resolved to '[MRT]!_ecvt_s'."
"Message",Normal,"          P/Invoke 'memmove' with [DllImport(ExactSpelling=true)] resolved to '[MRT]!memmove'."
"Message",Normal,"          P/Invoke 'memset' with [DllImport(ExactSpelling=true)] resolved to '[MRT]!memset'."
"Message",Normal,"          P/Invoke 'CallingConventionConverter_GetStubs' with [DllImport(ExactSpelling=true)] resolved to '*!CallingConventionConverter_GetStubs'."
"Message",Normal,"          P/Invoke 'WindowsCreateStringReference' resolved to 'WindowsCreateStringReference!api-ms-win-core-winrt-string-l1-1-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetLastError' resolved to 'GetLastError!api-ms-win-core-errorhandling-l1-1-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'SetLastError' resolved to 'SetLastError!api-ms-win-core-errorhandling-l1-1-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'RoInitialize' resolved to 'RoInitialize!api-ms-win-core-winrt-l1-1-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'IsValidLocaleName' resolved to 'IsValidLocaleName!api-ms-win-core-localization-l1-2-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'ResolveLocaleName' resolved to 'ResolveLocaleName!api-ms-win-core-localization-l1-2-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'WSAStartup' resolved to 'WSAStartup!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetCPInfoExW' resolved to 'GetCPInfoExW!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'getsockopt' resolved to 'getsockopt!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'recv' resolved to 'recv!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'send' resolved to 'send!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'shutdown' resolved to 'shutdown!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'ioctlsocket' resolved to 'ioctlsocket!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'setsockopt' resolved to 'setsockopt!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'select' resolved to 'select!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'select' resolved to 'select!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'SetThreadErrorMode' resolved to 'SetThreadErrorMode!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetFileAttributesExW' resolved to 'GetFileAttributesExW!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'FindFirstFileExW' resolved to 'FindFirstFileExW!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'getsockopt' resolved to 'getsockopt!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'getsockopt' resolved to 'getsockopt!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'getsockopt' resolved to 'getsockopt!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetAddrInfoW' resolved to 'GetAddrInfoW!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'WSASocketW' resolved to 'WSASocketW!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'closesocket' resolved to 'closesocket!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'WSASocketW' resolved to 'WSASocketW!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'WSAConnect' resolved to 'WSAConnect!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'getsockname' resolved to 'getsockname!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'getpeername' resolved to 'getpeername!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'CoCreateInstance' resolved to 'CoCreateInstance!api-ms-win-core-com-l1-1-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'FindClose' resolved to 'FindClose!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'WSAGetOverlappedResult' resolved to 'WSAGetOverlappedResult!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'WSARecv' resolved to 'WSARecv!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'WSASend' resolved to 'WSASend!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'BCryptGenRandom' resolved to 'BCryptGenRandom!BCrypt.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'SysFreeString' resolved to 'SysFreeString!OleAut32' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'freeaddrinfo' resolved to 'freeaddrinfo!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'FreeAddrInfoExW' resolved to 'FreeAddrInfoExW!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'WSASocketW' resolved to 'WSASocketW!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'closesocket' resolved to 'closesocket!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'gethostname' resolved to 'gethostname!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetStdHandle' resolved to 'GetStdHandle!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'ioctlsocket' resolved to 'ioctlsocket!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'setsockopt' resolved to 'setsockopt!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'FormatMessageW' resolved to 'FormatMessageW!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'WriteFile' resolved to 'WriteFile!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetFileType' resolved to 'GetFileType!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetConsoleOutputCP' resolved to 'GetConsoleOutputCP!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'setsockopt' resolved to 'setsockopt!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'setsockopt' resolved to 'setsockopt!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'RevertToSelf' resolved to 'RevertToSelf!advapi32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'ImpersonateLoggedOnUser' resolved to 'ImpersonateLoggedOnUser!advapi32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'RoGetBufferMarshaler' resolved to 'RoGetBufferMarshaler!api-ms-win-core-winrt-robuffer-l1-1-0.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'ReadFile' resolved to 'ReadFile!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'ReadConsoleW' resolved to 'ReadConsoleW!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'WriteConsoleW' resolved to 'WriteConsoleW!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetCurrentThread' resolved to 'GetCurrentThread!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'OpenThreadToken' resolved to 'OpenThreadToken!advapi32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetCurrentProcess' resolved to 'GetCurrentProcess!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'OpenProcessToken' resolved to 'OpenProcessToken!advapi32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'FormatMessageW' resolved to 'FormatMessageW!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetAddrInfoExW' resolved to 'GetAddrInfoExW!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'CloseHandle' resolved to 'CloseHandle!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'SetFileCompletionNotificationModes' resolved to 'SetFileCompletionNotificationModes!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetConsoleCP' resolved to 'GetConsoleCP!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'LsaGetLogonSessionData' resolved to 'LsaGetLogonSessionData!sspicli.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'WideCharToMultiByte' resolved to 'WideCharToMultiByte!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'MultiByteToWideChar' resolved to 'MultiByteToWideChar!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'WSAIoctl' resolved to 'WSAIoctl!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'LsaNtStatusToWinError' resolved to 'LsaNtStatusToWinError!advapi32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'DuplicateTokenEx' resolved to 'DuplicateTokenEx!advapi32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'CheckTokenMembershipEx' resolved to 'CheckTokenMembershipEx!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'LsaFreeReturnBuffer' resolved to 'LsaFreeReturnBuffer!sspicli.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetCPInfoExW' resolved to 'GetCPInfoExW!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetConsoleMode' resolved to 'GetConsoleMode!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetNameInfoW' resolved to 'GetNameInfoW!ws2_32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetTokenInformation' resolved to 'GetTokenInformation!advapi32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'LocalAlloc' resolved to 'LocalAlloc!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'LocalFree' resolved to 'LocalFree!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'FormatMessageW' resolved to 'FormatMessageW!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'GetTokenInformation' resolved to 'GetTokenInformation!advapi32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'DuplicateHandle' resolved to 'DuplicateHandle!kernel32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'LsaLookupSids' resolved to 'LsaLookupSids!advapi32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'LsaLookupNames2' resolved to 'LsaLookupNames2!advapi32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'LsaOpenPolicy' resolved to 'LsaOpenPolicy!advapi32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'LsaClose' resolved to 'LsaClose!advapi32.dll' from 'SupportedAPIs.xml'."
"Message",Normal,"          P/Invoke 'LsaFreeMemory' resolved to 'LsaFreeMemory!advapi32.dll' from 'SupportedAPIs.xml'."
"Message",High,"  Generating code..."
"Message",High,"  Interop code generated."
"Message",Normal,"  Written code to AssemblyInfo.g.cs"
"Message",Normal,"  Written code to Adapters.g.cs"
"Message",Normal,"  Written code to Data.g.cs"
"Message",Normal,"  Written code to Helpers.g.cs"
"Message",Normal,"  Written code to ImplTypes.g.cs"
"Message",Normal,"  Written code to PInvoke.g.cs"
"Message",Normal,"  Written code to SafeTypes.g.cs"
"Message",Normal,"  Written code to SharedStubs.g.cs"
"Message",Normal,"Running 'GenerateCodeAndCompile' transform, heap at 264 MB."
"Message",High,"Compiling interop code"
"Message",Normal,"Compiling generated source code: C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\csc\csc.exe /noconfig @""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\ar_lidar_new.McgInterop.rsp"""
"Message",High,"Generating System.Reflection.DispatchProxy proxy code."
"Message",Normal,"Running 'ReducedCopyInitialize' transform, heap at 264 MB."
"Message",Normal,"Running 'ReducedCopyEmptyTypes' transform, heap at 289 MB."
"Message",Normal,"Running 'ReducedCopyPopulateTypes' transform, heap at 293 MB."
"Message",Normal,"Running 'ReducedCopyLateMetadata' transform, heap at 218 MB."
"Message",Normal,"Running 'ReducedCopyPassResourcesToMutableAssembly' transform, heap at 242 MB."
"Message",Normal,"Running 'ReducedCopyMethodBodies' transform, heap at 242 MB."
"Message",Normal,"Running 'ReducedCopyComplete' transform, heap at 259 MB."
"Message",Normal,"Running 'ReducedCopyCleanup' transform, heap at 305 MB."
"Message",Normal,"Running 'ComImportDetector' transform, heap at 305 MB."
"Message",Normal,"Running 'McgAccessor' transform, heap at 305 MB."
"Message",Normal,"Running 'McgRedirect' transform, heap at 307 MB."
"Message",Normal,"Running 'McgRedirect' transform, heap at 311 MB."
"Message",Normal,"Running 'McgTypeOf' transform, heap at 320 MB."
"Message",Normal,"Running 'EventSource' transform, heap at 327 MB."
"Message",Normal,"Running 'ValueType' transform, heap at 328 MB."
"Message",Normal,"Running 'Attribute' transform, heap at 328 MB."
"Message",Normal,"Running 'GetType' transform, heap at 328 MB."
"Message",Normal,"Running 'McgFixups' transform, heap at 329 MB."
"Message",Normal,"Running 'ResourceManagerCtor' transform, heap at 330 MB."
"Message",Normal,"Running 'TypeofTypeHandle' transform, heap at 330 MB."
"Message",Normal,"Running 'DispatchProxyIntrinsics' transform, heap at 335 MB."
"Message",Normal,"Running 'StaticInitData' transform, heap at 335 MB."
"Message",Normal,"Running 'Delegate' transform, heap at 348 MB."
"Message",Normal,"Running 'LazyGenerics' transform, heap at 351 MB."
"Message",Normal,"Running 'AddReflectionBlockedAttributes' transform, heap at 368 MB."
"Message",Normal,"Running 'DisableOptimization' transform, heap at 368 MB."
"Message",Normal,"Running 'ResourceExtractor' transform, heap at 368 MB."
"Message",Normal,"Running 'CreateMetadata' transform, heap at 368 MB."
"Message",Normal,"Running 'StartupCodeInjector' transform, heap at 347 MB."
"Message",Normal,"Running 'SaveRVAStatics' transform, heap at 348 MB."
"Message",Normal,"Running 'ReflectionInvoke' transform, heap at 349 MB."
"Message",Normal,"Running 'ScrubOpenCalls' transform, heap at 353 MB."
"Message",Normal,"Running 'ConvertCatchIntoFilter' transform, heap at 353 MB."
"Message",Normal,"Running 'ReflectionMappingInfoEmit' transform, heap at 354 MB."
"Message",Normal,"Running 'ReflectionIntrinsics' transform, heap at 358 MB."
"Message",Normal,"Running 'ConvertManagedWinMD' transform, heap at 358 MB."
"Message",Normal,"Running 'DebuggerGuidedStepThroughJmc' transform, heap at 358 MB."
"Message",Normal,"Running 'Reducer' transform, heap at 363 MB."
"Message",High,"Cleaning up unreferenced code"
"Message",Normal,"Running 'WriteAssemblies' transform, heap at 359 MB."
"Message",Normal,""
"Message",Normal,"Transform summary"
"Message",Normal,"    ms | heap delta | name"
"Message",Normal,"  5534 |        126 | Analysis"
"Message",Normal,"  1973 |          0 | GenerateCodeAndCompile"
"Message",Normal,"  1013 |         83 | WriteAssemblies"
"Message",Normal,"   654 |         18 | Mcg"
"Message",Normal,"   589 |         -4 | Reducer"
"Message",Normal,"   478 |         25 | ReducedCopyInitialize"
"Message",Normal,"   438 |        -21 | CreateMetadata"
"Message",Normal,"   226 |         46 | ReducedCopyComplete"
"Message",Normal,"   215 |          7 | McgTypeOf"
"Message",Normal,"   209 |         16 | DumpNativeResources"
"Message",Normal,"   192 |         17 | ReducedCopyMethodBodies"
"Message",Normal,"   182 |        -75 | ReducedCopyPopulateTypes"
"Message",Normal,"    77 |         24 | ReducedCopyLateMetadata"
"Message",Normal,"    61 |         17 | LazyGenerics"
"Message",Normal,"    60 |          4 | McgRedirect"
"Message",Normal,"    57 |         13 | StaticInitData"
"Message",Normal,"    49 |          9 | McgRedirect"
"Message",Normal,"    34 |          5 | TypeofTypeHandle"
"Message",Normal,"    25 |          1 | SaveRVAStatics"
"Message",Normal,"    16 |          1 | GetType"
"Message",Normal,"    15 |          5 | DebuggerGuidedStepThroughJmc"
"Message",Normal,"    11 |          4 | ReducedCopyEmptyTypes"
"Message",Normal,"     9 |          0 | DispatchProxyIntrinsics"
"Message",Normal,"     9 |          1 | McgFixups"
"Message",Normal,"     8 |          0 | ReflectionIntrinsics"
"Message",Normal,"     8 |          0 | ScrubOpenCalls"
"Message",Normal,"     8 |          4 | ReflectionInvoke"
"Message",Normal,"     6 |          1 | ConvertCatchIntoFilter"
"Message",Normal,"     6 |          2 | McgAccessor"
"Message",Normal,"     5 |          3 | Delegate"
"Message",Normal,"     3 |          4 | ReflectionMappingInfoEmit"
"Message",Normal,"     1 |          0 | AddReflectionBlockedAttributes"
"Message",Normal,"     1 |          0 | Attribute"
"Message",Normal,"     1 |          1 | EventSource"
"Message",Normal,"     1 |          0 | ReducedCopyCleanup"
"Message",Normal,"     0 |          0 | ResourceExtractor"
"Message",Normal,"     0 |          1 | StartupCodeInjector"
"Message",Normal,"     0 |          0 | ResourceManagerCtor"
"Message",Normal,"     0 |          0 | ValueType"
"Message",Normal,"     0 |          0 | ComImportDetector"
"Message",Normal,"     0 |          0 | ConvertManagedWinMD"
"Message",Normal,"     0 |          0 | DisableOptimization"
"Message",Normal,"     0 |          0 | ReducedCopyPassResourcesToMutableAssembly"
"Message",Low,"Done executing task ""RunILTransforms""."
"Message",Low,"Done building target ""RunILTransforms"" in file ""ILTransforms""."
"Message",Low,"Done building project ""ILTransforms""."
"Message",Low,""
"Message",Low,""
"Message",Low,"Done building target ""GenerateMDIL"" in file ""Nutc""."
"Message",Low,""
"Message",High,"Generating native code"
"Message",Low,"Done building target ""MDILPrepareMultiFile"" in file ""Nutc""."
"Message",Low,""
"Message",Low,"Done building target ""SetBinaryForReferences"" in file ""Nutc""."
"Message",Low,""
"Message",Low,"Task ""GenerateMDILGlobalAnalysis"""
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\Tools64\nutc_driver.exe @""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\ar_lidar_new.rsp""'"
"Message",Low,"Assembly path: ILCompiler.Host.dll"
"Message",Low,"Managed type:  ILCompiler.ILCompilerHost"
"Message",Low,"Method name:   Initialize"
"Message",Low,"Arguments:     00007FFA90C429F0"
"Message",Low,"Managed call succeeded, exit code: 00000000"
"Message",Low,"Scanning 13021 methods."
"Message",Low,"Scanning 9805 methods."
"Message",Low,"Scanning 5651 methods."
"Message",Low,"Scanning 1154 methods."
"Message",Low,"Scanning 860 methods."
"Message",Low,"Scanning 532 methods."
"Message",Low,"Scanning 302 methods."
"Message",Low,"Scanning 190 methods."
"Message",Low,"Scanning 149 methods."
"Message",Low,"Scanning 139 methods."
"Message",Low,"Scanning 82 methods."
"Message",Low,"Scanning 28 methods."
"Message",Low,"Scanning 12 methods."
"Message",Low,"Scanning 8 methods."
"Message",Low,"Scanning 5 methods."
"Message",Low,"Scanning 2 methods."
"Message",Low,"Compiling 31940 methods."
"Message",Low,"Emitting Object File"
"Message",Low,"Successfully generated 'C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\ar_lidar_new.obj'"
"Message",Low,"Microsoft (R) MDIL Compiler - Version 2.2.31116.00"
"Message",Low,"Copyright (c) Microsoft Corporation.  All rights reserved."
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\Tools64\nutc_driver.exe @""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\ar_lidar_new.rsp""' completed."
"Message",Normal,"Process execution statistics (all times in milliseconds)"
"Message",Normal,"-----------------------------------------------------------------------------"
"Message",Normal,"launch  |  start   |   stop   |   end    | duration | lifetime | [slot] name"
"Message",Normal,"-----------------------------------------------------------------------------"
"Message",Normal,"       0 |        0 |     9141 |     9141 |     9141 |     9141 | [0] Nutc GlobalAnalysis"
"Message",Normal,"Number of commands:      1"
"Message",Normal,"Total system time:       9141 ms"
"Message",Normal,"System time per command: 9141 ms"
"Message",Normal,"Total duration:          9141 ms"
"Message",Normal,"Total lifetime:          9141 ms"
"Message",Normal,"Requested DOP:           16"
"Message",Normal,"Duration DOP:            1.0"
"Message",Normal,"Lifetime DOP:            1.0"
"Message",Low,"Done executing task ""GenerateMDILGlobalAnalysis""."
"Message",Low,"Done building target ""GenerateMDILGlobalAnalysis"" in file ""Nutc""."
"Message",Low,""
"Message",Low,"Task ""rc"""
"Message",Normal,"Launching 'C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x64\rc.exe /c ""65001"" /r /fo ""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\BuildInfo\BuildInfo.res"" ""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\BuildInfo\BuildInfo.rc""'"
"Message",Low,"Microsoft (R) Windows (R) Resource Compiler Version 10.0.10011.16384"
"Message",Low,"Copyright (C) Microsoft Corporation.  All rights reserved."
"Message",Normal,"'C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x64\rc.exe /c ""65001"" /r /fo ""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\BuildInfo\BuildInfo.res"" ""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\BuildInfo\BuildInfo.rc""' completed."
"Message",Normal,"Process execution statistics (all times in milliseconds)"
"Message",Normal,"-----------------------------------------------------------------------------"
"Message",Normal,"launch  |  start   |   stop   |   end    | duration | lifetime | [slot] name"
"Message",Normal,"-----------------------------------------------------------------------------"
"Message",Normal,"       0 |       15 |       15 |       15 |        0 |       15 | [0] rc"
"Message",Normal,"Number of commands:      1"
"Message",Normal,"Total system time:       15 ms"
"Message",Normal,"System time per command: 15 ms"
"Message",Normal,"Total duration:          0 ms"
"Message",Normal,"Total lifetime:          15 ms"
"Message",Normal,"Requested DOP:           16"
"Message",Normal,"Duration DOP:            0.0"
"Message",Normal,"Lifetime DOP:            1.0"
"Message",Low,"Done executing task ""rc""."
"Message",Low,"Task ""ResourceBinaryConcatenate"""
"Message",Normal,"Concatenating into 'C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\Native.res' with alignment '4'."
"Message",Normal," Added 'C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\ILTransformed\ar_lidar_new.res' at offset 0."
"Message",Normal," Added 'C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\BuildInfo\BuildInfo.res' at offset 1424."
"Message",Low,"Done executing task ""ResourceBinaryConcatenate""."
"Message",Low,"Done building target ""GenerateBuildInfo"" in file ""Nutc""."
"Message",Low,"Done building project ""Nutc""."
"Message",Low,""
"Message",Low,""
"Message",Low,"Task ""Lib"""
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\advapi32.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\advapi32.lib""'"
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-com-l1-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-com-l1-1-0.lib""'"
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l1-2-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l1-2-0.lib""'"
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l2-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l2-1-0.lib""'"
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-handle-l1-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-handle-l1-1-0.lib""'"
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-libraryloader-l1-1-1.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-libraryloader-l1-1-1.lib""'"
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-localization-l1-2-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-localization-l1-2-0.lib""'"
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-l1-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-l1-1-0.lib""'"
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-robuffer-l1-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-robuffer-l1-1-0.lib""'"
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-string-l1-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-string-l1-1-0.lib""'"
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\BCrypt.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\BCrypt.lib""'"
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\advapi32.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\advapi32.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\advapi32.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\advapi32.lib""' completed."
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\kernel32.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\kernel32.lib""'"
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-com-l1-1-0.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-com-l1-1-0.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-com-l1-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-com-l1-1-0.lib""' completed."
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OleAut32.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OleAut32.lib""'"
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l1-2-0.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l1-2-0.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l1-2-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l1-2-0.lib""' completed."
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OpenCvSharpExtern.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OpenCvSharpExtern.lib""'"
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l2-1-0.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l2-1-0.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l2-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l2-1-0.lib""' completed."
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\sspicli.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\sspicli.lib""'"
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-handle-l1-1-0.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-handle-l1-1-0.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-handle-l1-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-handle-l1-1-0.lib""' completed."
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\ws2_32.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\ws2_32.lib""'"
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-libraryloader-l1-1-1.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-libraryloader-l1-1-1.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-libraryloader-l1-1-1.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-libraryloader-l1-1-1.lib""' completed."
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-localization-l1-2-0.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-localization-l1-2-0.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-localization-l1-2-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-localization-l1-2-0.lib""' completed."
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-l1-1-0.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-l1-1-0.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-l1-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-l1-1-0.lib""' completed."
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-robuffer-l1-1-0.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-robuffer-l1-1-0.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-robuffer-l1-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-robuffer-l1-1-0.lib""' completed."
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-string-l1-1-0.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-string-l1-1-0.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-string-l1-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-string-l1-1-0.lib""' completed."
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\BCrypt.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\BCrypt.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\BCrypt.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\BCrypt.lib""' completed."
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\kernel32.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\kernel32.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\kernel32.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\kernel32.lib""' completed."
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OleAut32.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OleAut32.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OleAut32.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OleAut32.lib""' completed."
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\sspicli.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\sspicli.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\sspicli.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\sspicli.lib""' completed."
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\ws2_32.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\ws2_32.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\ws2_32.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\ws2_32.lib""' completed."
"Message",Low,"Microsoft (R) Library Manager Version 14.15.26727.0__Copyright (C) Microsoft Corporation.  All rights reserved.____   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OpenCvSharpExtern.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OpenCvSharpExtern.exp__"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OpenCvSharpExtern.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OpenCvSharpExtern.lib""' completed."
"Message",Normal,"Process execution statistics (all times in milliseconds)"
"Message",Normal,"-----------------------------------------------------------------------------"
"Message",Normal,"launch  |  start   |   stop   |   end    | duration | lifetime | [slot] name"
"Message",Normal,"-----------------------------------------------------------------------------"
"Message",Normal,"       0 |        0 |       47 |       47 |       47 |       47 | [0] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\advapi32.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\advapi32.lib"""
"Message",Normal,"       0 |       16 |       47 |       47 |       31 |       47 | [1] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-com-l1-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-com-l1-1-0.lib"""
"Message",Normal,"      16 |       16 |       47 |       47 |       31 |       31 | [2] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l1-2-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l1-2-0.lib"""
"Message",Normal,"      16 |       16 |       47 |       47 |       31 |       31 | [3] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l2-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-file-l2-1-0.lib"""
"Message",Normal,"      16 |       16 |       47 |       63 |       31 |       47 | [4] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-handle-l1-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-handle-l1-1-0.lib"""
"Message",Normal,"      16 |       31 |       47 |       63 |       16 |       47 | [5] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-libraryloader-l1-1-1.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-libraryloader-l1-1-1.lib"""
"Message",Normal,"      31 |       31 |       47 |       63 |       16 |       32 | [6] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-localization-l1-2-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-localization-l1-2-0.lib"""
"Message",Normal,"      31 |       31 |       47 |       63 |       16 |       32 | [7] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-l1-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-l1-1-0.lib"""
"Message",Normal,"      31 |       31 |       47 |       63 |       16 |       32 | [8] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-robuffer-l1-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-robuffer-l1-1-0.lib"""
"Message",Normal,"      31 |       47 |       63 |       63 |       16 |       32 | [9] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-string-l1-1-0.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\api-ms-win-core-winrt-string-l1-1-0.lib"""
"Message",Normal,"      47 |       47 |       63 |       63 |       16 |       16 | [10] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\BCrypt.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\BCrypt.lib"""
"Message",Normal,"      47 |       47 |       63 |       63 |       16 |       16 | [0] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\kernel32.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\kernel32.lib"""
"Message",Normal,"      47 |       47 |       63 |       63 |       16 |       16 | [1] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OleAut32.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OleAut32.lib"""
"Message",Normal,"      47 |       47 |       94 |       94 |       47 |       47 | [2] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OpenCvSharpExtern.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\OpenCvSharpExtern.lib"""
"Message",Normal,"      47 |       63 |       78 |       78 |       15 |       31 | [3] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\sspicli.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\sspicli.lib"""
"Message",Normal,"      63 |       63 |       78 |       78 |       15 |       15 | [4] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /LIB /MACHINE:arm64 /DEF:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\ws2_32.def"" /OUT:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\ws2_32.lib"""
"Message",Normal,"Number of commands:      16"
"Message",Normal,"Total system time:       94 ms"
"Message",Normal,"System time per command: 5 ms"
"Message",Normal,"Total duration:          376 ms"
"Message",Normal,"Total lifetime:          519 ms"
"Message",Normal,"Requested DOP:           16"
"Message",Normal,"Duration DOP:            4.0"
"Message",Normal,"Lifetime DOP:            5.5"
"Message",Low,"Done executing task ""Lib""."
"Message",Low,"Done building target ""GenerateImportLibs"" in file ""Binder""."
"Message",Low,""
"Message",High,"Generating fixups for native code"
"Message",Low,"Task ""LINK"""
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe @""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\linkargs.ar_lidar_new.rsp""'"
"Message",Low,"ar_lidar_new.obj : warning LNK4104: export of symbol 'DllGetClassObject' should be PRIVATE"
"Message",Low,"   Creating library C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\Native\ar_lidar_new.lib and object C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\Native\ar_lidar_new.exp"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe @""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\linkargs.ar_lidar_new.rsp""' completed."
"Message",Normal,"Process execution statistics (all times in milliseconds)"
"Message",Normal,"-----------------------------------------------------------------------------"
"Message",Normal,"launch  |  start   |   stop   |   end    | duration | lifetime | [slot] name"
"Message",Normal,"-----------------------------------------------------------------------------"
"Message",Normal,"       0 |        0 |      812 |      812 |      812 |      812 | [0] link ar_lidar_new"
"Message",Normal,"Number of commands:      1"
"Message",Normal,"Total system time:       812 ms"
"Message",Normal,"System time per command: 812 ms"
"Message",Normal,"Total duration:          812 ms"
"Message",Normal,"Total lifetime:          812 ms"
"Message",Normal,"Requested DOP:           16"
"Message",Normal,"Duration DOP:            1.0"
"Message",Normal,"Lifetime DOP:            1.0"
"Message",Low,"Done executing task ""LINK""."
"Message",Low,"Task ""LINK"""
"Message",Normal,"Launching 'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /out:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\Native\ar_lidar_new.exe"" /entry:wmain /MACHINE:arm64 /subsystem:windows /appcontainer ""C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\Tools\shimExe.lib"" ""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\Native\ar_lidar_new.lib"" ""C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\kernel32.lib"" ""@C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\shimExe.linkargs.rsp""'"
"Message",Low,"Microsoft (R) Incremental Linker Version 14.15.26727.0"
"Message",Low,"Copyright (C) Microsoft Corporation.  All rights reserved."
"Message",Low,"/stack:1048576 "
"Message",Low,"LINK : warning LNK4001: no object files specified; libraries used"
"Message",Normal,"'C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /out:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\Native\ar_lidar_new.exe"" /entry:wmain /MACHINE:arm64 /subsystem:windows /appcontainer ""C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\Tools\shimExe.lib"" ""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\Native\ar_lidar_new.lib"" ""C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\kernel32.lib"" ""@C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\shimExe.linkargs.rsp""' completed."
"Message",Normal,"Process execution statistics (all times in milliseconds)"
"Message",Normal,"-----------------------------------------------------------------------------"
"Message",Normal,"launch  |  start   |   stop   |   end    | duration | lifetime | [slot] name"
"Message",Normal,"-----------------------------------------------------------------------------"
"Message",Normal,"       0 |        0 |       32 |       32 |       32 |       32 | [0] C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\link.exe /out:""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\Native\ar_lidar_new.exe"" /entry:wmain /MACHINE:arm64 /subsystem:windows /appcontainer ""C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\Tools\shimExe.lib"" ""C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\Native\ar_lidar_new.lib"" ""C:\Program Files (x86)\Microsoft SDKs\UWPNuGetPackages\runtime.win10-arm64.microsoft.net.native.compiler\2.2.12-rel-31116-00\tools\ARM64\ilc\tools\link\kernel32.lib"" ""@C:\Users\yushe\Desktop\ECE461\ar_lidar_new\ar_lidar_new\obj\ARM64\Debug\ilc\intermediate\MDIL\shimExe.linkargs.rsp"""
"Message",Normal,"Number of commands:      1"
"Message",Normal,"Total system time:       32 ms"
"Message",Normal,"System time per command: 32 ms"
"Message",Normal,"Total duration:          32 ms"
"Message",Normal,"Total lifetime:          32 ms"
"Message",Normal,"Requested DOP:           16"
"Message",Normal,"Duration DOP:            1.0"
"Message",Normal,"Lifetime DOP:            1.0"
"Message",Low,"Done executing task ""LINK""."
"Message",Low,"Done building target ""Link"" in file ""Binder""."
"Message",Low,"Done building project ""Binder""."
"Message",Low,""
"Message",Low,""
"Message",Low,"Done building target ""CopyNativeExecutablesToOutput"" in file ""Deployment""."
"Message",Low,""
"Message",Low,"Task ""TransformAppxManifest"""
"Message",Low,"Done executing task ""TransformAppxManifest""."
"Message",Low,"Done building target ""TransformAppxManifestAndAddCrt"" in file ""Deployment""."
"Message",Low,""
"Message",Low,"Done building target ""CopyPackageResourceFileInRetailBuild"" in file ""Deployment""."
"Message",Low,"Done building project ""Deployment""."
"Message",Low,"Compilation finished"
